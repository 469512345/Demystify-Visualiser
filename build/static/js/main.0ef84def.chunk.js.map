{"version":3,"sources":["components/FileLoader.jsx","components/NavSwitcher.jsx","components/Board/Literal.jsx","components/Board/SquareCol.jsx","components/Board/SquareRow.jsx","components/Board/Cell.jsx","components/Board/Board.jsx","components/Explanations/Explanation.jsx","components/Explanations/ExplanationList.jsx","components/PuzzleBoards/TentsBoard.jsx","components/PuzzleBoards/BinairoBoard.jsx","components/PuzzleBoards/KillerBoard.jsx","components/PuzzleBoards/KakuroBoard.jsx","components/PuzzleBoards/StarBattleBoard.jsx","components/PuzzleBoards/FutoshikiBoard.jsx","components/PuzzleStepper.jsx","components/DemystifyViewer.jsx","App.js","reportWebVitals.js","index.js"],"names":["binairo","require","futoshiki","kakuro","killersudoku","starbattle","tents","FileLoader","readFile","e","a","preventDefault","reader","FileReader","onload","text","target","result","props","setInput","JSON","parse","setError","readAsText","files","this","Card","className","ListGroup","variant","Item","Row","type","onChange","Dropdown","onSelect","chooseExample","Toggle","id","Menu","eventKey","React","Component","NavSwitcher","state","currentStep","newValue","maxSteps","setState","setCurrentStep","Form","inline","onSubmit","Button","onClick","lastStep","bind","Group","Label","nextStep","Literal","highlighted","prev","highlightExplanation","prevProps","value","status","Col","style","color","textDecoration","fontWeight","fontStyle","backgroundColor","onMouseEnter","toggleHighlight","onMouseLeave","SquareCol","borders","border","marginBottom","marginLeft","margin","display","justifyContent","alignItems","backgroundImage","background","backgroundSize","cornerNumber","position","borderRadius","minWidth","fontSize","paddingRight","paddingLeft","zIndex","rightLabel","top","right","bottomLabel","bottom","innerBorders","padding","width","children","paddingBottom","SquareRow","Cell","cellRows","cellContent","length","cellValues","exp","highlight","literalBackgrounds","cellBackground","isSingleton","singletonValue","getSingletonValue","toString","scale","literalSize","console","log","hiddenLiterals","includes","cellBorders","cellInnerBorders","cellMargin","chooseBackground","size","isHidden","getFontSize","Container","fluid","map","row","i","literal","explanations","Board","arr","column","rows","cellBackgrounds","cornerNumbers","rightLabels","bottomLabels","rowsums","colsums","xs","cells","cell","sum","j","getIndex","Explanation","itemStyle","decision","reason","index","deHighlight","ExplanationList","simpleDeductions","deductions","Accordion","defaultActiveKey","Header","as","Collapse","maxHeight","overflowY","deduction","Fragment","Body","TentsBoard","x","params","y","treecount","backgrounds","push","borderTop","borderBottom","borderLeft","borderRight","getBackgrounds","getCellBorders","key","BinairoBoard","KillerBoard","grid","hints","currentHint","left","getCellInnerBorders","getCornerNumbers","StarBattleBoard","x_max","y_max","horzsums","vertsums","blanks","bottomColor","topColor","getDiagonalGradient","extraStyle","KakuroBoard","blocks","gridSize","FutoshikiBoard","lessThans","lt","SIZE","lessThan","i1","i2","j1","j2","getRightLabels","getBottomLabels","PuzzleStepper","highlightedLiterals","highlightedExplanations","inputObject","val","stringify","step","boardProps","puzzleState","matrices","md","lg","xl","chooseBoard","skippedDeductions","highlightLiteral","DemystifyViewer","error","render","textAlign","Alert","obj","steps","name","prevState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ef84def.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Row, ListGroup, ListGroupItem, Dropdown } from 'react-bootstrap'\n\n/* In future, put these behind a backend endpoint.*/\nlet binairo = require('../json_inputs/binairo.json');\nlet futoshiki = require('../json_inputs/futoshiki.json');\nlet kakuro = require('../json_inputs/kakuro.json');\nlet killersudoku = require('../json_inputs/killersudoku.json');\nlet starbattle = require('../json_inputs/starbattle.json');\nlet tents = require('../json_inputs/tents.json');\n\nclass FileLoader extends React.Component {\n\n    // Read a JSON file on the user's filesystem\n    readFile = async (e) => {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n            try {\n                const text = (e.target.result)\n                this.props.setInput(JSON.parse(text));\n            } catch {\n                this.props.setError();\n            }\n        };\n        reader.readAsText(e.target.files[0])\n\n    }\n\n    chooseExample(e) {\n        // Harcoded for now.\n        switch(e) {\n            case \"1\":\n                this.props.setInput(binairo)\n                break;\n            case \"2\":\n                this.props.setInput(futoshiki)\n                break;\n            case \"3\":\n                this.props.setInput(kakuro)\n                break;\n            case \"4\":\n                this.props.setInput(killersudoku)\n                break;\n            case \"5\":\n                this.props.setInput(starbattle)\n                break;\n            case \"6\":\n                this.props.setInput(tents)\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <Card className=\"mt-3 pt-3\">\n                <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                        <Row className=\"d-flex justify-content-center\">\n                            <p className=\"mx-4\">  Load Demystify output from JSON file:</p>\n                            <input type=\"file\" onChange={(e) => this.readFile(e)} />\n                        </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Row className=\"d-flex justify-content-center\">\n                            <p className=\"mx-4 pt-2\">Or choose a preloaded example:</p>\n                            <Dropdown onSelect={(e) => this.chooseExample(e)}>\n                                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                    Examples\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                    <Dropdown.Item eventKey=\"1\">\n                                        Binairo\n                                    </Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"2\">\n                                        Futoshiki\n                                    </Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"3\">\n                                        Kakuro\n                                    </Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"4\">\n                                        Killer Sudoku\n                                    </Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"5\">\n                                        Star Battle\n                                    </Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"6\">\n                                        Tents and Trees\n                                    </Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Row>\n                    </ListGroup.Item>\n                </ListGroup>\n            </Card>\n        )\n    }\n}\n\nexport default FileLoader;","import React from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nclass NavSwitcher extends React.Component {\n    state = {\n        currentStep: 0,\n\n    }\n\n    nextStep() {\n\n        const newValue = this.state.currentStep + 1;\n        if (newValue <= this.props.maxSteps) {\n            this.setState({ currentStep: newValue });\n            this.props.setCurrentStep(newValue);\n        }\n    }\n\n    lastStep() {\n        const newValue = this.state.currentStep - 1;\n        if (newValue >= 0) {\n            this.setState({ currentStep: newValue });\n            this.props.setCurrentStep(newValue);\n        }\n    }\n\nrender() {\n    return (\n        <Card className=\"mt-3 p-3\">\n\n            <Form inline onSubmit={e => e.preventDefault()} className=\"d-flex justify-content-between\">\n                <Button variant=\"primary\" onClick={this.lastStep.bind(this)}>Last Step</Button>\n\n                <Form.Group>\n                    <Form.Label className=\"w-70 mr-2\">Current Step:</Form.Label>\n                    <Form.Label className=\"w-70 mr-2\">{this.state.currentStep + 1}</Form.Label>\n                </Form.Group>\n\n                <Button variant=\"primary\" onClick={this.nextStep.bind(this)}>Next Step</Button>\n\n            </Form>\n\n        </Card>\n\n    )\n}\n}\n\nexport default NavSwitcher;","import React from 'react';\nimport { Col } from 'react-bootstrap';\n\nclass Literal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlighted: this.props.highlighted\n        }\n    }\n\n    toggleHighlight() {\n        this.setState((prev) => { return {highlighted: !prev.highlighted }});\n        this.props.highlightExplanation();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.highlighted !== this.props.highlighted) {\n            this.setState({highlighted: this.props.highlighted});\n        }\n    }\n\n    render() {\n        const { value, status } = this.props;\n        return <Col className=\"m-0 p-0\" style={{\n            /*border: \"solid\",*/\n            color:  (status === \"involved\") ? \"blue\" :\n                    (status === \"negative\") ? \"red\" :\n                    (status === \"positive\") ? \"green\" : \"black\",\n            textDecoration:\n                (status === \"negative\") ? \"line-through\" : \"none\",\n            fontWeight:\n                (status === \"positive\") ? \"bolder\" : \"normal\",\n            fontStyle:\n                (status === \"involved\") ? \"italic\" : \"normal\",\n            backgroundColor: this.state.highlighted ? \"cornsilk\" : null\n\n\n        }}\n            onMouseEnter={this.toggleHighlight.bind(this)} \n            onMouseLeave={this.toggleHighlight.bind(this)}\n        >{value}\n        </Col>\n    }\n\n}\n\nexport default Literal;","import React from 'react';\nimport {Col} from 'react-bootstrap';\n\nclass SquareCol extends React.Component {\n    \n    render() {\n        const borders = this.props.borders ? this.props.borders :\n        {\n            border: \"2px solid lightgray\",\n            marginBottom: \"-2px\",\n            marginLeft: \"-2px\"\n        }\n\n        const margin = this.props.margin ? this.props.margin : {}\n\n        return (\n            <Col className=\"m-0 p-0\" >\n                <div\n                    style={{\n                        ...borders,\n                        ...margin,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        backgroundImage: this.props.background,\n                        backgroundSize:\"100% 100%\",\n                    }}\n                >   \n                    {this.props.cornerNumber && <div style={{\n                        position: \"absolute\",\n                        fontWeight: \"bolder\",\n                        color: \"white\",\n                        backgroundColor: \"#0275d8\",\n                        borderRadius: \"10px\",\n                        minWidth: \"1vw\",\n                        fontSize: \"0.8vw\",\n                        paddingRight: \"1px\",\n                        paddingLeft: \"1px\",\n                        zIndex: \"2\",\n                        ...this.props.cornerNumber.style,\n                    }}>\n                        {this.props.cornerNumber.value}\n                    </div>}\n\n                    {this.props.rightLabel && <div style={{\n                        position: \"absolute\",\n                        top: \"35%\",\n                        right: \"-5%\",\n                        fontSize: \"2vw\"\n                    }}>\n                        {this.props.rightLabel}\n                    </div>}\n\n                    {this.props.bottomLabel && <div style={{\n                        position: \"absolute\",\n                        bottom: \"-15%\",\n                        right: \"42%\",\n                        fontSize: \"2vw\"\n                    }}>\n                        {this.props.bottomLabel}\n                    </div>}\n\n                    <div style={{\n                        ...this.props.innerBorders,\n                        padding: \"0px\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}>\n                        {this.props.children}\n                        <div style={{\n                        display: \"block\",\n                        paddingBottom: \"100%\"\n                        }}></div>\n                    </div>\n                    \n                    \n                </div>\n            </Col >\n        )\n    }\n}\n\nexport default SquareCol;","import React from 'react';\nimport {Row} from 'react-bootstrap';\n\nclass SquareRow extends React.Component {\n    render() {\n        return (\n            <Row \n                style={this.props.style}\n                className=\"p-0 m-0 d-flex flex-direction-row align-items-center justify-content-center\">\n                {this.props.children}\n            </Row>\n        );\n    }\n}\n\nexport default SquareRow;","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Literal from './Literal';\nimport SquareCol from './SquareCol';\nimport SquareRow from './SquareRow';\n\nclass Cell extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlighted: this.props.highlighted,\n        }\n    }\n\n    isSingleton() {\n        const cellRows = this.props.cellContent.cellRows;\n\n        return cellRows.length === 1 &&\n                cellRows[0].cellValues.length === 1\n    }\n\n    getSingletonValue() {\n        const cellRows = this.props.cellContent.cellRows;\n        return cellRows[0].cellValues[0].value\n    }\n\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.highlighted !== this.props.highlighted) {\n            this.setState({ highlighted: this.props.highlighted });\n        }\n    }\n\n    highlight(exp) {\n        this.props.highlight(exp);\n    }\n\n    chooseBackground() {\n        const { literalBackgrounds, cellBackground } = this.props;\n        const isSingleton = this.isSingleton();\n        const singletonValue = this.getSingletonValue();\n\n        if (literalBackgrounds && isSingleton) {\n            return literalBackgrounds[singletonValue.toString()]\n        } else if (cellBackground) {\n            return cellBackground;\n        } else {\n            return null;\n        }\n    }\n\n    getFontSize(scale) {\n        const { literalSize } = this.props;\n        if (literalSize) {\n            console.log((literalSize * scale).toString() + \"vw\")\n            return (literalSize * scale).toString() + \"vw\"\n        } else {\n            return scale.toString() + \"vw\"\n        }\n    }\n\n    isHidden(value) {\n        const { hiddenLiterals } = this.props;\n        return hiddenLiterals && hiddenLiterals.includes(value);\n    }\n\n    render() {\n        const {\n            cellContent,\n            cellBorders,\n            cellInnerBorders,\n            cellMargin,\n            cornerNumber,\n            rightLabel,\n            bottomLabel,\n            literalSize } = this.props;\n\n        const {highlighted} = this.state;\n\n        const isSingleton = this.isSingleton();\n        const singletonValue = this.getSingletonValue();\n\n        return (\n            <SquareCol\n                background={this.chooseBackground()}\n                borders={cellBorders}\n                innerBorders={cellInnerBorders}\n                margin={cellMargin}\n                size={literalSize}\n                cornerNumber={cornerNumber}\n                rightLabel={rightLabel}\n                bottomLabel={bottomLabel}>\n\n                {isSingleton ?\n                    (\n                        (!this.isHidden(singletonValue)) &&\n                        <h1 style={{ fontSize: this.getFontSize(3) }}>\n                            {singletonValue}\n                        </h1>\n                    ) :\n                    <Container fluid className=\"p-0 align-items-center\">\n                        {cellContent.cellRows.map((row, i) =>\n                            <SquareRow key={i} style={{ fontSize: this.getFontSize(1) }}>\n                                {row.cellValues.map((literal, i) =>\n                                    <Literal\n                                        key={i}\n                                        value={literal.value}\n                                        status={literal.status}\n                                        highlighted={literal.explanations.includes(highlighted.toString())}\n                                        highlightExplanation={() => this.highlight(literal.explanations)}\n                                    />\n                                )}\n                            </SquareRow>\n                        )}\n                    </Container>\n                }\n            </SquareCol>\n        )\n    }\n}\n\nexport default Cell;","import React from 'react';\nimport { Card, Container, Row, Col } from 'react-bootstrap'\nimport Cell from './Cell';\nimport SquareCol from './SquareCol';\nimport SquareRow from './SquareRow';\nclass Board extends React.Component {\n\n    getIndex(arr, row, column) {\n        return arr ? arr[row][column] : null;\n    }\n\n    render() {\n        const {\n            // Required Props \n            highlighted, \n            highlight,\n            rows,\n\n            //Optional Props, for custom styling\n            literalBackgrounds,\n            cellBorders,\n            cellInnerBorders,\n            cellBackgrounds,\n            cellMargin,\n            literalSize,\n            cornerNumbers,\n            rightLabels,\n            bottomLabels,\n            hiddenLiterals,\n            rowsums,\n            colsums,\n            \n        } = this.props;\n        \n        return (\n            <Card className=\"mt-3 p-4\">\n                <Container fluid style={{ minWidth: \"400px\", padding: \"0px\"}}>\n                \n                    <SquareRow>\n                        <Col xs={1} className=\"m-0 p-0\" />\n                        {rowsums && <Col className=\"m-0 p-0\" />}\n                        {rows[0].cells.map((cell, i) =>\n                            <Col key={i} className=\"m-0 p-0\">\n                                <small className=\"text-muted\">{i + 1}</small>\n                            </Col>)}\n                    </SquareRow>\n\n                    {colsums &&\n                        <SquareRow>\n                            <Col xs={1} className=\"m-0 p-0\" />\n                            <SquareCol />\n                            {colsums.map((sum, j) =>\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"3vw\", color: \"gray\" }}>\n                                        {sum}\n                                    </h3>\n                                </SquareCol>)}\n                        </SquareRow>}\n\n                    {rows.map((row, i) =>\n\n                        <SquareRow key={i}>\n                            <Col xs={1} key={i} className=\"m-0 p-0\">\n                                <small className=\"text-muted\">{i + 1}</small>\n                            </Col>\n\n                            {rowsums &&\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"3vw\", color: \"gray\" }}>\n                                        {rowsums[i]}\n                                    </h3>\n                                </SquareCol>}\n                            {row.cells.map((cell, j) =>\n                                    <Cell \n                                        row={i} \n                                        column={j} \n                                        highlighted={highlighted} \n                                        cellContent={cell} \n                                        highlight={highlight}\n                                        \n                                        cellBorders={this.getIndex(cellBorders, i, j)}\n                                        cellInnerBorders={this.getIndex(cellInnerBorders, i, j)}\n                                        cellBackground={this.getIndex(cellBackgrounds, i, j)}\n                                        cornerNumber={this.getIndex(cornerNumbers, i, j)}\n                                        rightLabel={this.getIndex(rightLabels, i, j)}\n                                        bottomLabel={this.getIndex(bottomLabels, i, j)}\n                                        cellMargin={cellMargin}\n                                        literalBackgrounds={literalBackgrounds}\n                                        literalSize={literalSize}\n                                        hiddenLiterals={hiddenLiterals}\n                                        />      \n                                )}\n                        </SquareRow>)}\n                </Container>\n            </Card>\n        )\n    }\n}\n\nexport default Board;","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\nclass Explanation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlighted: this.props.highlighted\n        }\n    }\n\n    highlight() {\n        this.setState({highlighted: true});\n        this.props.highlight();\n    }\n\n    deHighlight() {\n        this.setState({highlighted: false});\n        this.props.highlight();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.highlighted !== this.props.highlighted) {\n            \n            this.setState({highlighted: this.props.highlighted});\n        }\n    }\n\n    render() {\n        const itemStyle =\n            this.state.highlighted ?\n                { backgroundColor: \"cornsilk\" } : null\n        const {decision, reason, index} = this.props\n\n        return <ListGroup.Item\n            style={itemStyle}\n            key={index}\n            onMouseEnter={this.highlight.bind(this)}\n            onMouseLeave={this.deHighlight.bind(this)}>\n            {decision}\n            <br />\n            {reason}\n        </ListGroup.Item>\n    }\n}\n\nexport default Explanation;","import React from 'react';\nimport { Accordion, Card, Button, ListGroup } from 'react-bootstrap';\nimport Explanation from './Explanation';\n\nclass ExplanationList extends React.Component {\n\n    render() {\n        const { simpleDeductions, deductions } = this.props;\n        return (\n            <Card className=\"mt-3\" >\n\n                {simpleDeductions ?\n                    <Accordion defaultActiveKey=\"1\">\n                        <Card.Header>\n                            <h5>Made {simpleDeductions.length} simple deductions.</h5>\n                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                Show/Hide\n                            </Accordion.Toggle>\n                        </Card.Header>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <ListGroup style={{ maxHeight: \"60vh\", overflowY: \"scroll\" }}>\n                                {\n                                    simpleDeductions.map((deduction, i) => {\n\n                                        return <Explanation\n                                            highlighted={this.props.highlighted.includes(i.toString())}\n                                            decision={deduction.decision}\n                                            reason={deduction.reason}\n                                            index={i}\n                                            key={i}\n                                            highlight={() => this.props.highlight(i)} />\n                                    })\n                                }\n                            </ListGroup>\n                        </Accordion.Collapse>\n                    </Accordion>\n                    : deductions &&\n                    <React.Fragment>\n                        <Card.Header>\n                            <h5>Made the following deduction:</h5>\n\n                        </Card.Header>\n                        <Card.Body>\n                            <div className=\"mb-3\">\n                                <b >{deductions.decision}</b>\n                            </div>\n\n                            <ListGroup style={{ maxHeight: \"75vh\", overflowY: \"scroll\" }}>\n                                {deductions.reason.map((reason, i) =>\n                                    <Explanation\n                                        highlighted={this.props.highlighted.includes(i.toString())}\n                                        reason={reason}\n                                        index={i}\n                                        key={i}\n                                        highlight={() => this.props.highlight(i)} />)}\n\n\n                            </ListGroup>\n                        </Card.Body>\n                    </React.Fragment>\n\n                }\n\n            </Card>\n        );\n    }\n}\n\nexport default ExplanationList;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass TentsBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: this.props.params.x,\n            y: this.props.params.y,\n            colsums: this.props.params.colsums,\n            rowsums: this.props.params.rowsums,\n            treecount: this.props.params.treecount\n        }\n    }\n\n    getBackgrounds() {\n        let backgrounds = {};\n\n        for(let i = 1; i <= this.state.treecount; i++) {\n            backgrounds[\"-\" + i.toString()] = \"url(/images/tree.png)\"\n            backgrounds[i.toString()] = \"url(/images/tent.png)\"\n        }\n        \n        return backgrounds;\n    }\n\n    \n\n    getCellBorders() {\n        let borders = []\n\n        for(let i = 0; i < 9; i++) {\n            borders[i] = []\n            for(let j = 0; j < 9; j++) {\n                borders[i].push(\n                    {\n                        borderTop: i == 0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i == this.state.x - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j == 0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j == this.state.y - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n    \n\n    render() {\n        console.log(\"here\")\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                literalBackgrounds={this.getBackgrounds()}\n                cellBorders={this.getCellBorders()}\n                />)\n    }\n}\n\nexport default TentsBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass BinairoBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                />)\n    }\n}\n\nexport default BinairoBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass KillerBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: this.props.params.grid,\n            hints: this.props.params.hints\n        }\n    }\n\n    getCellBorders() {\n        let borders = []\n\n        for(let i = 0; i < 9; i++) {\n            borders[i] = []\n            for(let j = 0; j < 9; j++) {\n                borders[i].push(\n                    {\n                        borderTop: i%3 == 0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i == 8 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j%3 == 0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j == 8 ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    getCellInnerBorders() {\n        let borders = []\n        const {grid} = this.state;\n        for(let i = 0; i < 9; i++) {\n            borders[i] = []\n            for(let j = 0; j < 9; j++) {\n                borders[i].push(\n                    {\n                        borderTop: \n                            i == 0 || grid[i-1][j] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        borderBottom: i == 8 || grid[i+1][j] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        borderLeft: j == 0 || grid[i][j-1] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        borderRight: j == 8 || grid[i][j+1] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        margin: \"3px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    getCornerNumbers() {\n        let cornerNumbers = []\n        const {hints, grid} = this.state;\n        let currentHint = 0;\n\n        for(let i = 0; i < 9; i++) {\n            cornerNumbers[i] = []\n            for(let j = 0; j < 9; j++) {\n                if(grid[i][j] === currentHint + 1) {\n                    cornerNumbers[i].push({value: hints[currentHint], style: {top: \"0%\", left: \"0%\"}})\n                    currentHint++\n                } else \n                    cornerNumbers[i].push({value: null, style: {top: \"0%\", left: \"0%\"}})\n            }\n        }\n\n        console.log(cornerNumbers)\n        return cornerNumbers\n    }\n    \n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                cellBorders={this.getCellBorders()}\n                cellInnerBorders={this.getCellInnerBorders()}\n                literalSize={0.7}\n                cornerNumbers={this.getCornerNumbers()}\n                />)\n    }\n}\n\nexport default KillerBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass StarBattleBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: this.props.params.x_max,\n            y: this.props.params.y_max,\n            rowsums: this.props.params.horzsums,\n            colsums: this.props.params.vertsums,\n            blanks: this.props.params.blanks\n        }\n    }\n\n    getDiagonalGradient(bottomColor, topColor) {\n        return `linear-gradient(to bottom left, ${bottomColor}, ${bottomColor} 49%, lightgray 49%, lightgray 51%, ${topColor} 51%, ${topColor})`\n    }\n   \n    getBackgrounds() {\n        const {rowsums, colsums, blanks} = this.state;\n        let backgrounds = []\n        for(let i = 0; i < this.state.x; i++) {\n            backgrounds[i] = []\n            for(let j = 0; j < this.state.y; j++) {\n                if(rowsums[i][j] != 0) {\n                    if(colsums[i][j] != 0) {\n                        backgrounds[i].push(this.getDiagonalGradient(\"white\", \"white\"))\n                    } else {\n                        backgrounds[i].push(this.getDiagonalGradient(\"white\", \"lightblue\"))\n                    }\n                } else {\n                    if(colsums[i][j] != 0) {\n                        backgrounds[i].push(this.getDiagonalGradient(\"lightblue\", \"white\"))\n                    } else {\n                        if(blanks[i][j] == 0) {\n                            backgrounds[i].push(\"linear-gradient(lightblue, lightblue)\")\n                        } else {\n                            backgrounds[i].push(\"none\")\n                        }\n                    }\n\n                }\n                \n            }\n        }\n        /*return borders;\n            {\"0\": \"linear-gradient(to bottom left, white, white 49%, lightgray 49%, lightgray 51%, lightblue 51%, lightblue)\"}*/\n        \n\n        return backgrounds;\n    }\n\n    getCornerNumbers() {\n        let cornerNumbers = []\n        const {rowsums, colsums, x, y} = this.state;\n        let currentHint = 0;\n        const extraStyle = {\n            fontWeight: \"bolder\",\n            color: \"gray\",\n            backgroundColor: \"none\",\n            fontSize: \"1.4vw\"}\n\n        for(let i = 0; i < x; i++) {\n            cornerNumbers[i] = []\n            for(let j = 0; j < y; j++) {\n                if(rowsums[i][j] !== 0) {\n                    cornerNumbers[i].push({value: rowsums[i][j], style: {top: \"20%\", right: \"20%\", ...extraStyle}})\n                    currentHint++\n                } else if(i > 0 && colsums[i-1][j] !== 0) {\n                    cornerNumbers[i].push({value: colsums[i-1][j], style: {top: \"-30%\", left: \"20%\", ...extraStyle}})\n                    currentHint++\n                } else \n                    cornerNumbers[i].push({value: null,  style: {top: \"-30%\", left: \"20%\", ...extraStyle}})\n\n            \n            }\n        }\n\n        console.log(cornerNumbers)\n        return cornerNumbers\n    }\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                cellBackgrounds={this.getBackgrounds()}\n                cornerNumbers={this.getCornerNumbers()}\n                hiddenLiterals={[0]}\n                />)\n    }\n}\n\nexport default StarBattleBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass KakuroBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: this.props.params.blocks,\n            gridSize: this.props.params.grid,\n        }\n    }\n\n    getCellBorders() {\n        let borders = []\n        const {grid, gridSize} = this.state;\n        for(let i = 0; i < gridSize; i++) {\n            borders[i] = []\n            for(let j = 0; j < gridSize; j++) {\n                borders[i].push(\n                    {\n                        borderTop: \n                            i == 0 || grid[i-1][j] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i == gridSize - 1 || grid[i+1][j] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j == 0 || grid[i][j-1] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j == gridSize - 1 || grid[i][j+1] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\"\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    getBackgrounds() {\n        let backgrounds = {\"1\": \"url(/images/star.png)\"}\n        \n        return backgrounds;\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                cellBorders={this.getCellBorders()}\n                literalBackgrounds={this.getBackgrounds()}\n                />)\n    }\n}\n\nexport default KakuroBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass FutoshikiBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lessThans: this.props.params.lt,\n            size: this.props.params.SIZE\n        }\n    }\n\n    getRightLabels() {\n        let rightLabels = []\n        const {size, lessThans} = this.state;\n        for(let i = 0; i < size; i++) {\n            rightLabels[i] = []\n            for(let j = 0; j < size; j++) {\n                rightLabels[i].push(\n                   null\n                )\n            }\n        }\n\n        for(let lessThan of lessThans) {\n            const i1 = lessThan[0];\n            const i2 = lessThan[1];\n            const j1 = lessThan[2];\n            const j2 = lessThan[3];\n\n            if(i1 == j1) {\n                if(i2 < j2) {\n                    rightLabels[i1-1][i2-1] = \"<\"\n                } else {\n                    rightLabels[j1-1][j2-1] = \">\"\n                }\n            }\n        }\n        console.log(rightLabels);\n        return rightLabels;\n    }\n\n    getBottomLabels() {\n        let bottomLabels = []\n        const {size, lessThans} = this.state;\n        for(let i = 0; i < size; i++) {\n            bottomLabels[i] = []\n            for(let j = 0; j < size; j++) {\n                bottomLabels[i].push(\n                   null\n                )\n            }\n        }\n\n        for(let lessThan of lessThans) {\n            const i1 = lessThan[0];\n            const i2 = lessThan[1];\n            const j1 = lessThan[2];\n            const j2 = lessThan[3];\n\n            if(i2 == j2) {\n                if(i1 < j1) {\n                    bottomLabels[i1-1][i2-1] = \"\\u2227\"\n                } else {\n                    bottomLabels[j1-1][j2-1] = \"\\u2228\"\n                }\n            }\n        }\n\n        return bottomLabels;\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                cellMargin={{margin: \"20px\"}}\n                rightLabels={this.getRightLabels()}\n                bottomLabels={this.getBottomLabels()}\n                />)\n    }\n}\n\nexport default FutoshikiBoard;","import React from 'react';\nimport NavSwitcher from './NavSwitcher';\nimport Board from './Board/Board';\nimport ExplanationList from \"./Explanations/ExplanationList\";\n\nimport { Row, Col, Card } from 'react-bootstrap';\n\nimport TentsBoard from './PuzzleBoards/TentsBoard';\nimport BinairoBoard from './PuzzleBoards/BinairoBoard';\nimport KillerBoard from './PuzzleBoards/KillerBoard';\nimport KakuroBoard from './PuzzleBoards/KakuroBoard';\nimport StarBattleBoard from './PuzzleBoards/StarBattleBoard';\nimport FutoshikiBoard from './PuzzleBoards/FutoshikiBoard';\n\nclass PuzzleStepper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentStep: 0,\n            highlightedLiterals: -1,\n            highlightedExplanations: [],\n            type: this.props.type,\n            params: this.props.params,\n            inputObject: this.props.inputObject\n        }\n    }\n\n    highlightLiteral(val) {\n        this.setState((prev) => { return { highlightedLiterals: prev.highlightedLiterals === val ? -1 : val } });\n    }\n\n    highlightExplanation(val) {\n\n        this.setState((prev) => { return { highlightedExplanations: JSON.stringify(prev.highlightedExplanations) == JSON.stringify(val) ? [] : val } });\n    }\n\n    setCurrentStep(step) {\n        this.setState({ currentStep: step });\n    }\n\n    chooseBoard(boardProps) {\n        switch(this.state.type) {\n            case \"tents.eprime\":\n                return <TentsBoard {...boardProps}/>\n            case \"binairo.eprime\":\n                return <BinairoBoard {...boardProps}/>\n            case \"nice_killer.eprime\":\n                return <KillerBoard {...boardProps}/>\n            case \"star-battle.eprime\":\n                return <StarBattleBoard {...boardProps}/>\n            case \"kakuro.eprime\":\n                return <KakuroBoard {...boardProps}/>\n            case \"nfutoshiki.eprime\":\n                return <FutoshikiBoard {...boardProps}/>\n            default:\n                return <Board {...boardProps}/>\n        }\n    }\n    render() {\n        const boardProps = {\n            params: this.state.params,\n            highlight: this.highlightExplanation.bind(this),\n            key: this.state.highlightedLiterals,\n            highlighted: this.state.highlightedLiterals, \n            rows: this.state.inputObject[this.state.currentStep].puzzleState.matrices[0].rows\n        }\n        return (\n            <React.Fragment>\n                <NavSwitcher setCurrentStep={this.setCurrentStep.bind(this)} maxSteps={this.state.inputObject.length - 1} />\n                <Row className=\"mb-4\">\n                    <Col xs={12} md={8} lg={8} xl={6}>\n                        {this.chooseBoard(boardProps)} \n                    </Col>\n                    <Col>\n                        {this.state.inputObject[this.state.currentStep].skippedDeductions &&\n                            <Card className=\"mt-3\">\n                                <Card.Body>\n                                    <small>Skipped some obvious deductions.</small>\n                                </Card.Body>\n                            </Card>\n                        }\n                        <ExplanationList\n                            highlight={this.highlightLiteral.bind(this)}\n                            simpleDeductions={this.state.inputObject[this.state.currentStep].simpleDeductions}\n                            deductions={this.state.inputObject[this.state.currentStep].deductions}\n                            highlighted={this.state.highlightedExplanations} />\n                    </Col>\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PuzzleStepper;","import React from 'react';\n\nimport FileLoader from './FileLoader';\n\nimport { Container, Alert } from 'react-bootstrap';\nimport PuzzleStepper from './PuzzleStepper';\n\nclass DemystifyViewer extends React.Component {\n  state = {\n    inputObject: [],\n    type: \"\",\n    params: {},\n    error: false,\n  }\n  \n  setInput(obj) {\n    this.setState({ inputObject: obj.steps, type: obj.name, params: obj.params },\n      () => !(this.state.inputObject && this.state.type && this.state.params)  \n      && this.setError())\n\n    \n  }\n\n  setError() {\n    this.setState({error: true});\n  }\n\n  conponentDidUpdate(prevProps, prevState) {\n    if(prevState.error) this.setState({error: false});\n  }\n\n  render = () => {\n    console.log(this.state)\n    return (\n      <Container fluid style={{textAlign: \"center\"}}>\n        {(this.state.inputObject.length === 0 || this.state.error) ?\n          <React.Fragment>\n            <h1 className=\"mt-3\">Demystify Visualiser</h1>\n            <FileLoader setInput={this.setInput.bind(this)} setError={this.setError.bind(this)} />\n            {this.state.error && \n              <Alert variant=\"warning\" className=\"mt-3 p-4 text-center\">\n                Could not read the input file (ensure it is a JSON file produced by Demystify).\n              </Alert> }\n          </React.Fragment>\n          \n          :\n          <PuzzleStepper\n            inputObject={this.state.inputObject}\n            type={this.state.type}\n            params={this.state.params} />\n        }\n      </Container>\n    )\n  }\n}\n\nexport default DemystifyViewer\n","import DemystifyViewer from './components/DemystifyViewer'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DemystifyViewer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}