{"version":3,"sources":["components/NavSwitcher.jsx","components/Board/Literal.jsx","components/Board/SquareCol.jsx","components/Board/SquareRow.jsx","components/Board/Cell.jsx","components/Board/Board.jsx","components/Explanations/Explanation.jsx","components/Explanations/ExplanationList.jsx","components/PuzzleBoards/TentsBoard.jsx","components/PuzzleBoards/BinairoBoard.jsx","components/PuzzleBoards/KillerBoard.jsx","components/PuzzleBoards/KakuroBoard.jsx","components/PuzzleBoards/KakurasuBoard.jsx","components/PuzzleBoards/StarBattleBoard.jsx","components/PuzzleBoards/FutoshikiBoard.jsx","components/PuzzleBoards/ThermometerBoard.jsx","components/PuzzleBoards/SkyscrapersBoard.jsx","components/PuzzleBoards/GaramBoard.jsx","components/PuzzleBoards/NonogramBoard.jsx","components/PuzzleBoards/SudokuBoard.jsx","API.js","components/JobWait.jsx","components/PuzzleStepper.jsx","components/Menu/FileUploader.jsx","components/Menu/DropdownChoices.jsx","components/Menu/RadioChoices.jsx","components/Menu/MainMenu.jsx","components/SudokuBuilder.jsx","components/DemystifyVisualiser.jsx","reportWebVitals.js","index.js"],"names":["NavSwitcher","state","currentStep","props","newValue","this","maxSteps","setState","setCurrentStep","prevProps","Card","className","Form","inline","onSubmit","e","preventDefault","Button","disabled","variant","onClick","lastStep","bind","stepName","Group","Label","endButton","nextStep","React","Component","Literal","highlighted","prev","highlightExplanation","setSelectedLiteral","value","status","Col","handleClick","style","color","textShadow","textDecoration","fontWeight","fontStyle","backgroundColor","onMouseEnter","toggleHighlight","onMouseLeave","SquareCol","borders","border","marginBottom","marginLeft","margin","background1","background2","background","length","backgroundImage","display","justifyContent","alignItems","backgroundSize","cornerNumber","position","borderRadius","minWidth","fontSize","paddingRight","paddingLeft","zIndex","rightLabel","top","right","bottomLabel","bottom","innerBorders","padding","width","children","paddingBottom","SquareRow","Row","Cell","cellRows","cellContent","cellValues","containsKnown","some","row","markers","includes","filter","exp","highlight","highlightBackground","literalBackgrounds","cellBackground","explanations","toString","isSingleton","singletonValue","getSingletonValue","scale","literalSize","hiddenLiterals","cellBorders","cellInnerBorders","cellMargin","chooseBackground","size","isHidden","getFontSize","Container","fluid","map","i","literal","column","Board","arr","rows","cellBackgrounds","cornerNumbers","rightLabels","bottomLabels","rowsums","endrowsums","colsums","endcolsums","startrows","startcols","xs","col","cells","cell","val","j","sum","getIndex","Explanation","itemStyle","decision","reason","index","ListGroup","Item","deHighlight","ExplanationList","simpleDeductions","deduction","choices","smallestMUSSize","extraChoice","boldBorder","Fragment","Accordion","defaultActiveKey","Header","Toggle","as","eventKey","Collapse","maxHeight","overflowY","Body","setChoice","currentChoice","TentsBoard","x","params","y","Object","values","treecount","backgrounds","push","borderTop","borderBottom","borderLeft","borderRight","getBackgrounds","getCellBorders","BinairoBoard","0","1","KillerBoard","grid","o","hints","currentHint","left","getCellInnerBorders","getCornerNumbers","KakuroBoard","x_max","y_max","horzsums","vertsums","blanks","bottomColor","topColor","getDiagonalGradient","extraStyle","KakurasuBoard","dims","col_sums","row_sums","StarBattleBoard","blocks","gridSize","FutoshikiBoard","lessThans","lt","SIZE","lessThan","i1","i2","j1","j2","getRightLabels","getBottomLabels","ThermometerBoard","therms","xsize","ysize","thermNum","Math","floor","north","south","west","east","key","SkyscrapersBoard","CLUES","num","GaramBoard","presetvals","operations","op","opMap","2","3","NonogramBoard","rowcounts","colcounts","array","_","colIndex","transpose","SudokuBoard","a","axios","get","response","data","getExampleData","exampleName","createJob","options","post","jobId","JobWait","pollDelay","pollCount","error","log","progress","timer","setInterval","checkStatus","prevState","clearInterval","API","then","res","output","setInput","mode","catch","Alert","Spinner","animation","href","window","location","flexDirection","reverse","l","textAlign","PuzzleStepper","highlightedLiterals","highlightedExplanations","selectedLiteral","selectedChoice","type","inputObject","continueData","isWaiting","finishedPuzzle","boardProps","JSON","stringify","step","number","isChoicesStep","handleGetNext","isLitForceStep","handleGetNextWithForce","obj","finished","slice","result","steps","eprimeName","eprime","paramName","param","algorithm","explainedLits","numSteps","choice","appendCurrent","litChoice","otherChoices","stepData","getStepData","puzzleState","matrices","getEndButton","appendInput","md","lg","xl","chooseBoard","handleSkip","skippedDeductions","highlightLiteral","getAlternatives","handleSelectChoice","FileUploader","uploadFile","reader","FileReader","onload","text","target","onUpload","fileInput","current","files","name","onError","readAsText","createRef","noFile","ref","onChange","DropdownChoices","makeChoice","isLoading","Dropdown","onSelect","id","Menu","RadioChoices","labels","selected","toUpperCase","substring","Check","checked","label","MainMenu","componentDidUpdate","isQueueing","onbeforeunload","undefined","examples","eprimeChoices","chosenEprime","isLoadingExamples","isLoadingEprime","isLoadingExampleJSON","message","example","both","split","replace","substr","setError","getInitial","alt","src","parse","chooseExample","handleBuildSudoku","chooseEprime","handleOptionChange","handleGo","SudokuBuilder","Array","apply","v","w","isRunning","test","updateGrid","newGrid","element","document","createElement","file","Blob","getParamString","URL","createObjectURL","download","body","appendChild","click","Date","now","err","handleSave","handleRun","sm","getSudokuBorders","Control","onFocus","handleChange","DemystifyVisualiser","buildSudoku","render","setJSONInput","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90a52186.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\n\n/**\n * A navigation bar to advance or deadvance steps.\n */\nclass NavSwitcher extends React.Component {\n  state = {\n    currentStep: this.props.currentStep,\n  };\n\n  // Advance\n  nextStep() {\n    const newValue = this.state.currentStep + 1;\n    if (newValue <= this.props.maxSteps) {\n      this.setState({ currentStep: newValue });\n      this.props.setCurrentStep(newValue);\n    }\n  }\n\n  // Deadvance\n  lastStep() {\n    const newValue = this.state.currentStep - 1;\n    if (newValue >= 0) {\n      this.setState({ currentStep: newValue });\n      this.props.setCurrentStep(newValue);\n    }\n  }\n\n  // Ensure current step is kept up to date.\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentStep !== this.props.currentStep) {\n      this.setState({ currentStep: this.props.currentStep });\n    }\n  }\n\n  render() {\n    return (\n      <Card className={this.props.className}>\n        <Form\n          inline\n          onSubmit={(e) => e.preventDefault()}\n          className=\"d-flex justify-content-between\"\n        >\n          <Button\n            disabled={this.state.currentStep === 0}\n            variant=\"primary\"\n            onClick={this.lastStep.bind(this)}\n          >\n            Last {this.props.stepName}\n          </Button>\n\n          {/* Steps are indexed from 0 in JSON but display starting from 1 to \n              the user. */}\n          <Form.Group>\n            <Form.Label className=\"w-70 mr-2\">\n              Current {this.props.stepName}:\n            </Form.Label>\n            <Form.Label className=\"w-70 mr-2\">\n              {this.state.currentStep + 1}\n            </Form.Label>\n          </Form.Group>\n\n          {/* Display alternative end button if supplied*/\n            this.props.endButton ? (\n            this.props.endButton\n          ) : (\n            <Button\n              disabled={this.state.currentStep === this.props.maxSteps}\n              variant=\"primary\"\n              onClick={this.nextStep.bind(this)}\n            >\n              Next {this.props.stepName}\n            </Button>\n          )}\n        </Form>\n      </Card>\n    );\n  }\n}\n\nexport default NavSwitcher;\n","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\n\n/**\n * A small \"possible\" value to display in the grid within each cell.\n * Style indicates in what way it is involved in the current step.\n */\nclass Literal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlighted: this.props.highlighted,\n    };\n  }\n\n  // Highlight/Unhighlight this literal and corresponding explanation\n  toggleHighlight() {\n    this.setState((prev) => {\n      return { highlighted: !prev.highlighted };\n    });\n    this.props.highlightExplanation();\n  }\n\n  // Check whether this literal should be highlighted.\n  componentDidUpdate(prevProps) {\n    if (prevProps.highlighted !== this.props.highlighted) {\n      this.setState({ highlighted: this.props.highlighted });\n    }\n  }\n\n  handleClick() {\n    this.props.setSelectedLiteral();\n  }\n  render() {\n    const { value, status } = this.props;\n    return (\n      <Col\n        className=\"m-0 p-0\"\n        onClick={this.handleClick.bind(this)}\n        style={{\n          // Styling dependent on literal status.\n          // (Maybe change these colours - not great for colour blindness)\n          color:\n            status === \"involved\"\n              ? \"blue\"\n              : status === \"negative\"\n              ? \"red\"\n              : status === \"positive\"\n              ? \"green\"\n              : \"black\",\n          // Subtle \"glow\" added to blue and red lits.\n          textShadow:\n            status === \"involved\"\n              ? \"0 0 4px #00FEFE\"\n              : status === \"positive\"\n              ? \"0 0 4px #90EE90\"\n              : \"none\",\n          textDecoration: status === \"negative\" ? \"line-through\" : \"none\",\n          fontWeight: status === \"positive\" ? \"bolder\" : \"normal\",\n          fontStyle: status === \"involved\" ? \"italic\" : \"normal\",\n          backgroundColor: this.state.highlighted ? \"cornsilk\" : null,\n        }}\n        onMouseEnter={this.toggleHighlight.bind(this)}\n        onMouseLeave={this.toggleHighlight.bind(this)}\n      >\n        {value}\n      </Col>\n    );\n  }\n}\n\nexport default Literal;\n","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\n\n/**\n * A Square cell container, with optional extra styling.\n */\nclass SquareCol extends React.Component {\n  render() {\n    const borders = this.props.borders\n      ? this.props.borders\n      : {\n          border: \"2px solid lightgray\",\n          marginBottom: \"-2px\", // Deal with \"doubled\" borders.\n          marginLeft: \"-2px\",\n        };\n\n    const margin = this.props.margin ? this.props.margin : {};\n\n    let background1 = null;\n    let background2 = null;\n\n    if (this.props.background) {\n      if (this.props.background.length > 1) {\n        background1 = this.props.background[0];\n        background2 = this.props.background[1];\n      } else {\n        background1 = this.props.background[0];\n      }\n    } else {\n      background1 = this.props.background;\n    }\n\n    return (\n      <Col className=\"m-0 p-0\">\n        <div\n          style={{\n            backgroundImage: background2,\n          }}\n        >\n          <div\n            style={{\n              ...borders,\n              ...margin,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              backgroundImage: background1,\n              backgroundSize: \"100% 100%\",\n            }}\n          >\n            {\n              // Small optional number to overlay on the cell.\n              this.props.cornerNumber && (\n                <div\n                  style={{\n                    position: \"absolute\",\n                    fontWeight: \"bolder\",\n                    color: \"white\",\n                    backgroundColor: \"#0275d8\",\n                    borderRadius: \"10px\",\n                    minWidth: \"1vw\",\n                    fontSize: \"0.8vw\",\n                    paddingRight: \"1px\",\n                    paddingLeft: \"1px\",\n                    zIndex: \"2\",\n                    ...this.props.cornerNumber.style,\n                  }}\n                >\n                  {this.props.cornerNumber.value}\n                </div>\n              )\n            }\n\n            {\n              // Optional label between this cell and next on the right.\n              this.props.rightLabel && (\n                <div\n                  style={{\n                    position: \"absolute\",\n                    top: \"35%\",\n                    right: \"-5%\",\n                    fontSize: \"2vw\",\n                    zIndex: \"2\",\n                  }}\n                >\n                  {this.props.rightLabel}\n                </div>\n              )\n            }\n\n            {\n              // Optional label between this cell and the next below.\n              this.props.bottomLabel && (\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"-15%\",\n                    right: \"42%\",\n                    fontSize: \"2vw\",\n                  }}\n                >\n                  {this.props.bottomLabel}\n                </div>\n              )\n            }\n\n            <div\n              style={{\n                ...this.props.innerBorders,\n                padding: \"0px\",\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {this.props.children /* Main cell content */}\n\n              {/*This div ensure the cell is always square\n                            CSS trick: https://stackoverflow.com/a/28985475/12309539*/}\n              <div\n                style={{\n                  display: \"block\",\n                  paddingBottom: \"100%\",\n                }}\n              ></div>\n            </div>\n          </div>\n        </div>\n      </Col>\n    );\n  }\n}\n\nexport default SquareCol;\n","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\n\n/**\n * Saves typing out the bootstrap class name multiple times.\n */\nclass SquareRow extends React.Component {\n  render() {\n    return (\n      <Row\n        style={this.props.style}\n        className=\"p-0 m-0 d-flex flex-direction-row align-items-center justify-content-center\"\n      >\n        {this.props.children}\n      </Row>\n    );\n  }\n}\n\nexport default SquareRow;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Literal from \"./Literal\";\nimport SquareCol from \"./SquareCol\";\nimport SquareRow from \"./SquareRow\";\n\n/**\n * Cell component, where a cell is itself a grid of possible values.\n * (1 x 1) grid if the value becomes or is known.\n */\nclass Cell extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlighted: this.props.highlighted,\n    };\n  }\n\n  // Whether the cell grid is 1x1 i.e. the value is known.\n  isSingleton() {\n    const cellRows = this.props.cellContent.cellRows;\n\n    return (\n      (cellRows.length === 1 && cellRows[0].cellValues.length === 1) ||\n      this.containsKnown(cellRows)\n    );\n  }\n\n  // Additional check in case for some reason (e.g. with PyExplain) the grid isn't 1x1 but the value\n  // is nevertheless known.\n  containsKnown(cellRows) {\n    return cellRows.some((row) =>\n      row.cellValues.some((value) => value.markers.includes(\"pik\"))\n    );\n  }\n\n  // Get the first value of the cell grid.\n  getSingletonValue() {\n    const cellRows = this.props.cellContent.cellRows;\n    let result;\n    if (this.containsKnown(cellRows)) {\n        // \"pik\" stands for \"positive in known\" - marker applied by Demystify\n      result = cellRows\n        .filter((row) =>\n          row.cellValues.some((value) => value.markers.includes(\"pik\"))\n        )[0]\n        .cellValues.filter((value) => value.markers.includes(\"pik\"))[0].value;\n    } else {\n      result = cellRows[0].cellValues[0].value;\n    }\n\n    return result;\n  }\n\n  // Check whether the cell should be highlighted\n  componentDidUpdate(prevProps) {\n    if (prevProps.highlighted !== this.props.highlighted) {\n      this.setState({ highlighted: this.props.highlighted });\n    }\n  }\n\n  // Call the parent highlight function\n  highlight(exp) {\n    this.props.highlight(exp);\n  }\n\n  /* Choose the cell background, either by reading a mapping for a singleton,\n        or taking the indexed cellBackground. */\n  chooseBackground() {\n    const { cellContent, literalBackgrounds, cellBackground } = this.props;\n    const { highlighted } = this.state;\n    let highlightBackground;\n\n    if (\n      cellContent.cellRows.some((row) =>\n        row.cellValues.some((value) =>\n          value.explanations.includes(highlighted.toString())\n        )\n      )\n    ) {\n      highlightBackground = \"linear-gradient(cornsilk, cornsilk)\";\n    } else {\n      highlightBackground = \"\";\n    }\n\n    const isSingleton = this.isSingleton();\n    const singletonValue = this.getSingletonValue();\n\n    if (literalBackgrounds && isSingleton) {\n      return [\n        literalBackgrounds[singletonValue.toString()],\n        highlightBackground,\n      ];\n    } else if (cellBackground) {\n      return [cellBackground, highlightBackground];\n    } else {\n      return [highlightBackground];\n    }\n  }\n\n  /* Known cells should be 3 times larger. */\n  getFontSize(scale) {\n    const { literalSize } = this.props;\n    if (literalSize) {\n      return (literalSize * scale).toString() + \"vw\";\n    } else {\n      return scale.toString() + \"vw\";\n    }\n  }\n\n  /* Check if a singleton value should be hidden */\n  isHidden(value) {\n    const { hiddenLiterals } = this.props;\n    return hiddenLiterals && hiddenLiterals.includes(value);\n  }\n\n  render() {\n    const {\n      cellContent,\n      cellBorders,\n      cellInnerBorders,\n      cellMargin,\n      cornerNumber,\n      rightLabel,\n      bottomLabel,\n      literalSize,\n    } = this.props;\n\n    const { highlighted } = this.state;\n\n    const isSingleton = this.isSingleton();\n    const singletonValue = this.getSingletonValue();\n\n    return (\n      <SquareCol\n        background={this.chooseBackground()}\n        borders={cellBorders}\n        innerBorders={cellInnerBorders}\n        margin={cellMargin}\n        size={literalSize}\n        cornerNumber={cornerNumber}\n        rightLabel={rightLabel}\n        bottomLabel={bottomLabel}\n      >\n        {isSingleton ? (\n          // Display a single value if it is known and not hidden.\n          !this.isHidden(singletonValue) && (\n            <h1 style={{ fontSize: this.getFontSize(2) }}>{singletonValue}</h1>\n          )\n        ) : (\n          // Otherwise display a grid of possibilities\n          <Container fluid className=\"p-0 align-items-center\">\n            {cellContent.cellRows.map((row, i) => (\n              <SquareRow key={i} style={{ fontSize: this.getFontSize(1) }}>\n                {row.cellValues.map((literal, i) => (\n                  // Possibilities are positive/negative literals.\n                  <Literal\n                    key={i}\n                    row={this.props.row}\n                    column={this.props.column}\n                    value={literal.value}\n                    status={literal.status} // positive / negative\n                    highlighted={literal.explanations.includes(\n                      highlighted.toString()\n                    )}\n                    highlightExplanation={() =>\n                      this.highlight(literal.explanations)\n                    }\n                    setSelectedLiteral={() =>\n                      this.props.setSelectedLiteral(\n                        this.props.row,\n                        this.props.column,\n                        literal.value\n                      )\n                    }\n                  />\n                ))}\n              </SquareRow>\n            ))}\n          </Container>\n        )}\n      </SquareCol>\n    );\n  }\n}\n\nexport default Cell;\n","import React from \"react\";\nimport { Card, Container, Col } from \"react-bootstrap\";\nimport Cell from \"./Cell\";\nimport SquareCol from \"./SquareCol\";\nimport SquareRow from \"./SquareRow\";\n\n/**\n * Generic puzzle board component.\n */\nclass Board extends React.Component {\n  // Return item at index, if the array prop is defined.\n  getIndex(arr, row, column) {\n    return arr ? arr[row][column] : null;\n  }\n\n  render() {\n    const {\n      // Required Props\n      highlighted,\n      highlight,\n      rows,\n\n      //Optional Props, for custom styling (see README)\n      literalBackgrounds,\n      cellBorders,\n      cellInnerBorders,\n      cellBackgrounds,\n      cellMargin,\n      literalSize,\n      cornerNumbers,\n      rightLabels,\n      bottomLabels,\n      hiddenLiterals,\n      rowsums,\n      endrowsums,\n      colsums,\n      endcolsums,\n      startrows,\n      startcols,\n    } = this.props;\n\n    return (\n      <Card className=\"mt-3 p-5\">\n        <Container fluid style={{ minWidth: \"400px\", padding: \"0px\" }}>\n          {/*'Thin' row to display column indices.*/}\n          <SquareRow>\n            <Col xs={1} className=\"m-0 p-0\" />\n            {startcols && startcols.map((col) => <Col className=\"m-0 p-0\" />)}\n            {rowsums && <Col className=\"m-0 p-0\" /> /* small corner cell*/}\n            {rows[0].cells.map((cell, i) => (\n              <Col key={i} className=\"m-0 p-0\">\n                <small className=\"text-muted\">{i + 1}</small>\n              </Col>\n            ))}\n            {endrowsums && <Col className=\"m-0 p-0\" /> /* small corner cell*/}\n          </SquareRow>\n\n          {startrows &&\n            startrows.map((row) => (\n              // Extra rows for e.g. nonogram\n              <SquareRow>\n                <Col xs={1} className=\"m-0 p-0\" />\n                {startcols && startcols.map((col) => <SquareCol />)}\n                {row.map((val, j) => (\n                  <SquareCol>\n                    <h3 style={{ fontSize: \"2vw\", color: \"gray\" }}>{val}</h3>\n                  </SquareCol>\n                ))}\n                {endrowsums && <SquareCol />}\n              </SquareRow>\n            ))}\n\n          {colsums && (\n            // Extra row for column sums if necessary.\n            <SquareRow>\n              <Col xs={1} className=\"m-0 p-0\" />\n              <SquareCol />\n              {colsums.map((sum, j) => (\n                <SquareCol>\n                  <h3 style={{ fontSize: \"2vw\", color: \"gray\" }}>{sum}</h3>\n                </SquareCol>\n              ))}\n              {endrowsums && <SquareCol />}\n            </SquareRow>\n          )}\n\n          {rows.map((row, i) => (\n            <SquareRow key={i}>\n              {/* 'Thin' column for column indices */}\n              <Col xs={1} key={i} className=\"m-0 p-0\">\n                <small className=\"text-muted\">{i + 1}</small>\n              </Col>\n\n              {startcols &&\n                startcols.map((col) => (\n                  // Extra column for row sums if ncessary.\n                  <SquareCol>\n                    <h3 style={{ fontSize: \"2vw\", color: \"gray\" }}>{col[i]}</h3>\n                  </SquareCol>\n                ))}\n\n              {rowsums && (\n                // Extra column for row sums if ncessary.\n                <SquareCol>\n                  <h3 style={{ fontSize: \"2vw\", color: \"gray\" }}>\n                    {rowsums[i]}\n                  </h3>\n                </SquareCol>\n              )}\n\n              {row.cells.map((cell, j) => (\n                // Main rows of puzzle\n                <Cell\n                  cellContent={cell}\n                  row={i}\n                  column={j}\n                  // Whether this cell is currently highlighted\n                  highlighted={highlighted}\n                  /* Function to highlight explanation when this cell\n                                            is moused over */\n                  highlight={highlight}\n                  // Styling\n                  cellBorders={this.getIndex(cellBorders, i, j)}\n                  cellInnerBorders={this.getIndex(cellInnerBorders, i, j)}\n                  cellBackground={this.getIndex(cellBackgrounds, i, j)}\n                  cornerNumber={this.getIndex(cornerNumbers, i, j)}\n                  rightLabel={this.getIndex(rightLabels, i, j)}\n                  bottomLabel={this.getIndex(bottomLabels, i, j)}\n                  cellMargin={cellMargin}\n                  literalBackgrounds={literalBackgrounds}\n                  literalSize={literalSize}\n                  hiddenLiterals={hiddenLiterals}\n                  setSelectedLiteral={this.props.setSelectedLiteral}\n                />\n              ))}\n              {endrowsums && (\n                // Extra column for end row sums if ncessary.\n                <SquareCol>\n                  <h3 style={{ fontSize: \"2vw\", color: \"gray\" }}>\n                    {endrowsums[i]}\n                  </h3>\n                </SquareCol>\n              )}\n            </SquareRow>\n          ))}\n\n          {endcolsums && (\n            // Extra row for end column sums if necessary.\n            <SquareRow>\n              <Col xs={1} className=\"m-0 p-0\" />\n              <SquareCol />\n              {endcolsums.map((sum, j) => (\n                <SquareCol>\n                  <h3 style={{ fontSize: \"2vw\", color: \"gray\" }}>{sum}</h3>\n                </SquareCol>\n              ))}\n              {endrowsums && <SquareCol />}\n            </SquareRow>\n          )}\n        </Container>\n      </Card>\n    );\n  }\n}\n\nexport default Board;\n","import React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\n/**\n * A single explanation/reason that can be highlighted on mouse over.\n */\nclass Explanation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlighted: this.props.highlighted,\n    };\n  }\n\n  highlight() {\n    this.setState({ highlighted: true });\n    this.props.highlight();\n  }\n\n  deHighlight() {\n    //...unhighlight? dishighlight?\n    this.setState({ highlighted: false });\n    this.props.highlight();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.highlighted !== this.props.highlighted) {\n      this.setState({ highlighted: this.props.highlighted });\n    }\n  }\n\n  render() {\n    const itemStyle = this.state.highlighted\n      ? { backgroundColor: \"cornsilk\" }\n      : null;\n\n    const { decision, reason, index } = this.props;\n\n    return (\n      <ListGroup.Item\n        style={itemStyle}\n        key={index}\n        onMouseEnter={this.highlight.bind(this)}\n        onMouseLeave={this.deHighlight.bind(this)}\n      >\n        {decision}\n        <br />\n        {reason}\n      </ListGroup.Item>\n    );\n  }\n}\n\nexport default Explanation;\n","import React from \"react\";\nimport { Accordion, Card, Button, ListGroup } from \"react-bootstrap\";\nimport NavSwitcher from \"../NavSwitcher\";\nimport Explanation from \"./Explanation\";\n\n/**\n * A sidebar that displays the deductions made on a given step, along with the explanations for that deduction.\n */\nclass ExplanationList extends React.Component {\n  render() {\n    const {\n      simpleDeductions,\n      deduction,\n      choices,\n      smallestMUSSize,\n      extraChoice,\n      boldBorder,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <Card className=\"mt-3\" border={boldBorder ? \"primary\" : \"none\"}>\n          {\n            /*For simple deductions (just one reason), display a collapsible list */\n            simpleDeductions ? (\n              <Accordion defaultActiveKey=\"1\">\n                <Card.Header>\n                  <h5>Made {simpleDeductions.length} simple deductions.</h5>\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                    Show/Hide\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <ListGroup style={{ maxHeight: \"60vh\", overflowY: \"scroll\" }}>\n                    {simpleDeductions.map((deduction, i) => {\n                      return (\n                        <Explanation\n                          highlighted={this.props.highlighted.includes(\n                            i.toString()\n                          )}\n                          decision={deduction.decision}\n                          reason={deduction.reason}\n                          index={i}\n                          key={i}\n                          highlight={() => this.props.highlight(i)}\n                        />\n                      );\n                    })}\n                  </ListGroup>\n                </Accordion.Collapse>\n              </Accordion>\n            ) : (\n              deduction && (\n                /* Otherwise we have an \"interesting\" deductions, \n                            so display the deductions with a list of reasons */\n                <React.Fragment>\n                  <Card.Header>\n                    <h5>Made the following deduction:</h5>\n                  </Card.Header>\n                  <Card.Body>\n                    <div className=\"mb-3\">\n                      <b>{deduction.decision}</b>\n                    </div>\n\n                    <ListGroup\n                      style={{ maxHeight: \"75vh\", overflowY: \"scroll\" }}\n                    >\n                      {deduction.reason.map((reason, i) => (\n                        <Explanation\n                          highlighted={this.props.highlighted.includes(\n                            i.toString()\n                          )}\n                          reason={reason}\n                          index={i}\n                          key={i}\n                          highlight={() => this.props.highlight(i)}\n                        />\n                      ))}\n                    </ListGroup>\n                  </Card.Body>\n                </React.Fragment>\n              )\n            )\n          }\n        </Card>\n\n        {\n          /*If there are other choices, display a NavSwitcher to step through the alternatives */\n          choices && (\n            <Card className=\"mt-3\">\n              <Card.Header>\n                <b>\n                  Found {extraChoice ? choices.length + 1 : choices.length}{\" \"}\n                  choices in total for this step:\n                </b>\n              </Card.Header>\n              <Card.Body>\n                <div className=\"mb-3\">\n                  See the alternative deductions with MUS size at least{\" \"}\n                  {smallestMUSSize}:\n                </div>\n                <NavSwitcher\n                  stepName={\"Alt\"}\n                  className=\"p-3\"\n                  setCurrentStep={this.props.setChoice}\n                  maxSteps={extraChoice ? choices.length : choices.length - 1}\n                  currentStep={this.props.currentChoice}\n                />\n                <div>\n                  <small className=\"text-muted\">\n                    (Note: different MUSs may result in deductions that look\n                    identical)\n                  </small>\n                </div>\n                {this.props.children}\n              </Card.Body>\n            </Card>\n          )\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ExplanationList;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\n\nclass TentsBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: this.props.params.x,\n      y: this.props.params.y,\n      colsums: Object.values(this.props.params.colsums),\n      rowsums: Object.values(this.props.params.rowsums),\n      treecount: this.props.params.treecount,\n    };\n  }\n\n  getBackgrounds() {\n    let backgrounds = {};\n\n    for (let i = 1; i <= this.state.treecount; i++) {\n      backgrounds[\"-\" + i.toString()] = \"url(images/tree.png)\";\n      backgrounds[i.toString()] = \"url(images/tent.png)\";\n    }\n\n    return backgrounds;\n  }\n\n  getCellBorders() {\n    let borders = [];\n\n    for (let i = 0; i < this.state.x; i++) {\n      borders[i] = [];\n      for (let j = 0; j < this.state.y; j++) {\n        borders[i].push({\n          borderTop: i === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderBottom:\n            i === this.state.x - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderLeft: j === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderRight:\n            j === this.state.y - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n          marginLeft: \"-2px\",\n          marginBottom: \"-2px\",\n        });\n      }\n    }\n\n    return borders;\n  }\n\n  render() {\n    return (\n      <Board\n        {...this.props}\n        colsums={this.state.colsums}\n        rowsums={this.state.rowsums}\n        literalBackgrounds={this.getBackgrounds()}\n        cellBorders={this.getCellBorders()}\n      />\n    );\n  }\n}\n\nexport default TentsBoard;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\n\nclass BinairoBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getBackgrounds() {\n    let backgrounds = {\n      0: \"radial-gradient(gray 60%, #000000 61%, #ffffff 66%)\",\n      1: \"radial-gradient(#ffffff 60%, #000000 61%, #ffffff 66%)\",\n    };\n\n    return backgrounds;\n  }\n\n  render() {\n    return <Board {...this.props} literalBackgrounds={this.getBackgrounds()} />;\n  }\n}\n\nexport default BinairoBoard;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\n\nclass KillerBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: Object.values(this.props.params.grid).map((o) => Object.values(o)),\n      hints: Object.values(this.props.params.hints),\n    };\n  }\n\n  getCellBorders() {\n    let borders = [];\n\n    for (let i = 0; i < 9; i++) {\n      borders[i] = [];\n      for (let j = 0; j < 9; j++) {\n        borders[i].push({\n          borderTop: i % 3 === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderBottom: i === 8 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderLeft: j % 3 === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderRight: j === 8 ? \"2px solid black\" : \"2px solid lightgray\",\n          marginLeft: \"-2px\",\n          marginBottom: \"-2px\",\n        });\n      }\n    }\n\n    return borders;\n  }\n\n  getCellInnerBorders() {\n    let borders = [];\n    const { grid } = this.state;\n    for (let i = 0; i < 9; i++) {\n      borders[i] = [];\n      for (let j = 0; j < 9; j++) {\n        borders[i].push({\n          borderTop:\n            i === 0 || grid[i - 1][j] !== grid[i][j]\n              ? \"2px dashed black\"\n              : \"2px dashed white\",\n          borderBottom:\n            i === 8 || grid[i + 1][j] !== grid[i][j]\n              ? \"2px dashed black\"\n              : \"2px dashed white\",\n          borderLeft:\n            j === 0 || grid[i][j - 1] !== grid[i][j]\n              ? \"2px dashed black\"\n              : \"2px dashed white\",\n          borderRight:\n            j === 8 || grid[i][j + 1] !== grid[i][j]\n              ? \"2px dashed black\"\n              : \"2px dashed white\",\n          margin: \"3px\",\n        });\n      }\n    }\n\n    return borders;\n  }\n\n  getCornerNumbers() {\n    let cornerNumbers = [];\n    const { hints, grid } = this.state;\n    let currentHint = 0;\n\n    for (let i = 0; i < 9; i++) {\n      cornerNumbers[i] = [];\n      for (let j = 0; j < 9; j++) {\n        if (grid[i][j] === currentHint + 1) {\n          cornerNumbers[i].push({\n            value: hints[currentHint],\n            style: { top: \"0%\", left: \"0%\" },\n          });\n          currentHint++;\n        } else\n          cornerNumbers[i].push({\n            value: null,\n            style: { top: \"0%\", left: \"0%\" },\n          });\n      }\n    }\n    return cornerNumbers;\n  }\n\n  render() {\n    return (\n      <Board\n        {...this.props}\n        colsums={this.state.colsums}\n        rowsums={this.state.rowsums}\n        cellBorders={this.getCellBorders()}\n        cellInnerBorders={this.getCellInnerBorders()}\n        literalSize={0.7}\n        cornerNumbers={this.getCornerNumbers()}\n      />\n    );\n  }\n}\n\nexport default KillerBoard;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\n\nclass KakuroBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: this.props.params.x_max,\n      y: this.props.params.y_max,\n      rowsums: Object.values(this.props.params.horzsums).map((o) =>\n        Object.values(o)\n      ),\n      colsums: Object.values(this.props.params.vertsums).map((o) =>\n        Object.values(o)\n      ),\n      blanks: Object.values(this.props.params.blanks).map((o) =>\n        Object.values(o)\n      ),\n    };\n  }\n\n  getDiagonalGradient(bottomColor, topColor) {\n    return `linear-gradient(to bottom left, ${bottomColor}, ${bottomColor} 49%,\\\n       lightgray 49%, lightgray 51%, ${topColor} 51%, ${topColor})`;\n  }\n\n  getBackgrounds() {\n    const { rowsums, colsums, blanks } = this.state;\n    let backgrounds = [];\n    for (let i = 0; i < this.state.x; i++) {\n      backgrounds[i] = [];\n      for (let j = 0; j < this.state.y; j++) {\n        if (rowsums[i][j] !== 0) {\n          if (colsums[i][j] !== 0) {\n            backgrounds[i].push(this.getDiagonalGradient(\"white\", \"white\"));\n          } else {\n            backgrounds[i].push(this.getDiagonalGradient(\"white\", \"lightblue\"));\n          }\n        } else {\n          if (colsums[i][j] !== 0) {\n            backgrounds[i].push(this.getDiagonalGradient(\"lightblue\", \"white\"));\n          } else {\n            if (blanks[i][j] === 0) {\n              backgrounds[i].push(\"linear-gradient(lightblue, lightblue)\");\n            } else {\n              backgrounds[i].push(\"none\");\n            }\n          }\n        }\n      }\n    }\n    return backgrounds;\n  }\n\n  getCornerNumbers() {\n    let cornerNumbers = [];\n    const { rowsums, colsums, x, y } = this.state;\n    const extraStyle = {\n      fontWeight: \"bolder\",\n      color: \"gray\",\n      backgroundColor: \"none\",\n      fontSize: \"1.4vw\",\n    };\n\n    for (let i = 0; i < x; i++) {\n      cornerNumbers[i] = [];\n      for (let j = 0; j < y; j++) {\n        if (rowsums[i][j] !== 0) {\n          cornerNumbers[i].push({\n            value: rowsums[i][j],\n            style: { top: \"20%\", right: \"20%\", ...extraStyle },\n          });\n        } else if (i > 0 && colsums[i - 1][j] !== 0) {\n          cornerNumbers[i].push({\n            value: colsums[i - 1][j],\n            style: { top: \"-30%\", left: \"20%\", ...extraStyle },\n          });\n        } else\n          cornerNumbers[i].push({\n            value: null,\n            style: { top: \"-30%\", left: \"20%\", ...extraStyle },\n          });\n      }\n    }\n\n    return cornerNumbers;\n  }\n  \n  render() {\n    return (\n      <Board\n        {...this.props}\n        cellBackgrounds={this.getBackgrounds()}\n        cornerNumbers={this.getCornerNumbers()}\n        hiddenLiterals={[0]}\n      />\n    );\n  }\n}\n\nexport default KakuroBoard;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\n\nclass KakurasuBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      size: this.props.params.dims,\n      colsums: Object.values(this.props.params.col_sums),\n      rowsums: Object.values(this.props.params.row_sums),\n    };\n  }\n\n  getBackgrounds() {\n    let backgrounds = {};\n\n    backgrounds[\"0\"] = \"linear-gradient(white, white)\";\n    backgrounds[\"1\"] = \"linear-gradient(gray, gray)\";\n\n    return backgrounds;\n  }\n\n  getCellBorders() {\n    let borders = [];\n\n    for (let i = 0; i < this.state.size; i++) {\n      borders[i] = [];\n      for (let j = 0; j < this.state.size; j++) {\n        borders[i].push({\n          borderTop: i === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderBottom:\n            i === this.state.x - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderLeft: j === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderRight:\n            j === this.state.y - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n          marginLeft: \"-2px\",\n          marginBottom: \"-2px\",\n        });\n      }\n    }\n\n    return borders;\n  }\n\n  render() {\n    return (\n      <Board\n        {...this.props}\n        colsums={this.state.colsums}\n        rowsums={this.state.rowsums}\n        literalBackgrounds={this.getBackgrounds()}\n        cellBorders={this.getCellBorders()}\n      />\n    );\n  }\n}\n\nexport default KakurasuBoard;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\n\nclass StarBattleBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: Object.values(this.props.params.blocks).map((o) =>\n        Object.values(o)\n      ),\n      gridSize: this.props.params.grid,\n    };\n  }\n\n  getCellBorders() {\n    let borders = [];\n    const { grid, gridSize } = this.state;\n    for (let i = 0; i < gridSize; i++) {\n      borders[i] = [];\n      for (let j = 0; j < gridSize; j++) {\n        borders[i].push({\n          borderTop:\n            i === 0 || grid[i - 1][j] !== grid[i][j]\n              ? \"2px solid black\"\n              : \"2px solid lightgray\",\n          borderBottom:\n            i === gridSize - 1 || grid[i + 1][j] !== grid[i][j]\n              ? \"2px solid black\"\n              : \"2px solid lightgray\",\n          borderLeft:\n            j === 0 || grid[i][j - 1] !== grid[i][j]\n              ? \"2px solid black\"\n              : \"2px solid lightgray\",\n          borderRight:\n            j === gridSize - 1 || grid[i][j + 1] !== grid[i][j]\n              ? \"2px solid black\"\n              : \"2px solid lightgray\",\n          marginLeft: \"-2px\",\n          marginBottom: \"-2px\",\n        });\n      }\n    }\n\n    return borders;\n  }\n\n  getBackgrounds() {\n    let backgrounds = { 1: \"url(images/star.png)\" };\n\n    return backgrounds;\n  }\n\n  render() {\n    return (\n      <Board\n        {...this.props}\n        colsums={this.state.colsums}\n        rowsums={this.state.rowsums}\n        cellBorders={this.getCellBorders()}\n        literalBackgrounds={this.getBackgrounds()}\n      />\n    );\n  }\n}\n\nexport default StarBattleBoard;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\n\nclass FutoshikiBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lessThans: Object.values(this.props.params.lt).map((o) =>\n        Object.values(o)\n      ),\n      size: this.props.params.SIZE,\n    };\n  }\n\n  getRightLabels() {\n    let rightLabels = [];\n    const { size, lessThans } = this.state;\n    for (let i = 0; i < size; i++) {\n      rightLabels[i] = [];\n      for (let j = 0; j < size; j++) {\n        rightLabels[i].push(null);\n      }\n    }\n\n    for (let lessThan of lessThans) {\n      const i1 = lessThan[0];\n      const i2 = lessThan[1];\n      const j1 = lessThan[2];\n      const j2 = lessThan[3];\n\n      if (i1 === j1) {\n        if (i2 < j2) {\n          rightLabels[i1 - 1][i2 - 1] = \"<\";\n        } else {\n          rightLabels[j1 - 1][j2 - 1] = \">\";\n        }\n      }\n    }\n    return rightLabels;\n  }\n\n  getBottomLabels() {\n    let bottomLabels = [];\n    const { size, lessThans } = this.state;\n    for (let i = 0; i < size; i++) {\n      bottomLabels[i] = [];\n      for (let j = 0; j < size; j++) {\n        bottomLabels[i].push(null);\n      }\n    }\n\n    for (let lessThan of lessThans) {\n      const i1 = lessThan[0];\n      const i2 = lessThan[1];\n      const j1 = lessThan[2];\n      const j2 = lessThan[3];\n\n      if (i2 === j2) {\n        if (i1 < j1) {\n          bottomLabels[i1 - 1][i2 - 1] = \"\\u2227\";\n        } else {\n          bottomLabels[j1 - 1][j2 - 1] = \"\\u2228\";\n        }\n      }\n    }\n\n    return bottomLabels;\n  }\n\n  render() {\n    return (\n      <Board\n        {...this.props}\n        cellMargin={{ margin: \"20px\" }}\n        rightLabels={this.getRightLabels()}\n        bottomLabels={this.getBottomLabels()}\n      />\n    );\n  }\n}\n\nexport default FutoshikiBoard;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\n\nclass ThermometerBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colsums: Object.values(this.props.params.colsums),\n      rowsums: Object.values(this.props.params.rowsums),\n      grid: Object.values(this.props.params.therms).map((o) =>\n        Object.values(o)\n      ),\n    };\n  }\n\n  getBackgrounds() {\n    const { grid } = this.state;\n    let backgrounds = [];\n    const xsize = this.state.grid.length;\n    const ysize = this.state.grid[0].length;\n    for (let i = 0; i < xsize; i++) {\n      backgrounds[i] = [];\n      for (let j = 0; j < ysize; j++) {\n        const thermNum = Math.floor(grid[i][j] / 10);\n        const north = i > 0 ? Math.floor(grid[i - 1][j] / 10) : null;\n        const south = i < xsize - 1 ? Math.floor(grid[i + 1][j] / 10) : null;\n        const west = j > 0 ? Math.floor(grid[i][j - 1] / 10) : null;\n        const east = j < ysize - 1 ? Math.floor(grid[i][j + 1] / 10) : null;\n\n        if (grid[i][j] % 10 === 1) {\n          if (north === thermNum) {\n            backgrounds[i].push(\"url(images/themHeadN.png)\");\n          } else if (west === thermNum) {\n            backgrounds[i].push(\"url(images/themHeadW.png)\");\n          } else if (east === thermNum) {\n            backgrounds[i].push(\"url(images/themHeadE.png)\");\n          } else if (south === thermNum) {\n            backgrounds[i].push(\"url(images/themHeadS.png)\");\n          }\n        } else {\n          if (north === thermNum && south !== thermNum) {\n            backgrounds[i].push(\"url(images/themTipS.png)\");\n          } else if (south === thermNum && north !== thermNum) {\n            backgrounds[i].push(\"url(images/themTipN.png)\");\n          } else if (north === thermNum && south === thermNum) {\n            backgrounds[i].push(\"url(images/themV.png)\");\n          } else if (east === thermNum && west !== thermNum) {\n            backgrounds[i].push(\"url(images/themTipW.png)\");\n          } else if (west === thermNum && east !== thermNum) {\n            backgrounds[i].push(\"url(images/themTipE.png)\");\n          } else if (east === thermNum && west === thermNum) {\n            backgrounds[i].push(\"url(images/themH.png)\");\n          }\n        }\n      }\n    }\n\n    return backgrounds;\n  }\n\n  getCellBorders() {\n    let borders = [];\n\n    for (let i = 0; i < this.state.grid.length; i++) {\n      borders[i] = [];\n      for (let j = 0; j < this.state.grid[0].length; j++) {\n        borders[i].push({\n          borderTop: i === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderBottom:\n            i === this.state.x - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderLeft: j === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderRight:\n            j === this.state.y - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n          marginLeft: \"-2px\",\n          marginBottom: \"-2px\",\n        });\n      }\n    }\n\n    return borders;\n  }\n\n  render() {\n    return (\n      <Board\n        highlight={this.props.highlight}\n        key={this.props.key}\n        cellBackgrounds={this.getBackgrounds()}\n        highlighted={this.props.highlighted}\n        colsums={this.state.colsums}\n        rowsums={this.state.rowsums}\n        rows={this.props.rows}\n        cellBorders={this.getCellBorders()}\n      />\n    );\n  }\n}\n\nexport default ThermometerBoard;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\n\nclass SkyscrapersBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      size: this.props.params.SIZE,\n      rowsums: Object.values(this.props.params.CLUES[\"1\"]).map((num) =>\n        num === 0 ? null : num\n      ),\n      colsums: Object.values(this.props.params.CLUES[\"2\"]).map((num) =>\n        num === 0 ? null : num\n      ),\n      endrowsums: Object.values(this.props.params.CLUES[\"3\"]).map((num) =>\n        num === 0 ? null : num\n      ),\n      endcolsums: Object.values(this.props.params.CLUES[\"4\"]).map((num) =>\n        num === 0 ? null : num\n      ),\n    };\n  }\n\n  render() {\n    return (\n      <Board\n        {...this.props}\n        colsums={this.state.colsums}\n        endcolsums={this.state.endcolsums}\n        rowsums={this.state.rowsums}\n        endrowsums={this.state.endrowsums}\n      />\n    );\n  }\n}\n\nexport default SkyscrapersBoard;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\nclass GaramBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: Object.values(this.props.params.presetvals).map((o) =>\n        Object.values(o)\n      ),\n      operations: Object.values(this.props.params.op),\n      opMap: { 1: \"+\", 2: \"-\", 3: \"\\u00D7\" },\n    };\n  }\n\n  getCellBorders() {\n    let borders = [];\n    const { grid } = this.state;\n\n    for (let i = 0; i < grid.length; i++) {\n      borders[i] = [];\n      for (let j = 0; j < grid[0].length; j++) {\n        borders[i].push({\n          borderTop:\n            grid[i][j] === -2 ? \"2px solid transparent\" : \"2px solid lightgray\",\n          borderBottom:\n            grid[i][j] === -2 ? \"2px solid transparent\" : \"2px solid lightgray\",\n          borderLeft:\n            grid[i][j] === -2 ? \"2px solid transparent\" : \"2px solid lightgray\",\n          borderRight:\n            grid[i][j] === -2 ? \"2px solid transparent\" : \"2px solid lightgray\",\n          marginLeft: \"-2px\",\n          marginBottom: \"-2px\",\n        });\n      }\n    }\n\n    return borders;\n  }\n\n  // The positions of the operations is the same every time in garam, so we can hardcode.\n  getRightLabels() {\n    let rightLabels = [];\n    const { grid, opMap, operations } = this.state;\n    for (let i = 0; i < grid.length; i++) {\n      rightLabels[i] = [];\n      for (let j = 0; j < grid[0].length; j++) {\n        rightLabels[i].push(null);\n      }\n    }\n\n    rightLabels[0][1] = \"=\";\n    rightLabels[0][5] = \"=\";\n    rightLabels[1][3] = \"=\";\n    rightLabels[3][1] = \"=\";\n    rightLabels[3][5] = \"=\";\n    rightLabels[5][1] = \"=\";\n    rightLabels[5][5] = \"=\";\n    rightLabels[8][1] = \"=\";\n    rightLabels[8][5] = \"=\";\n\n    rightLabels[0][0] = opMap[operations[0]];\n    rightLabels[0][4] = opMap[operations[1]];\n    rightLabels[1][2] = opMap[operations[6]];\n    rightLabels[3][0] = opMap[operations[7]];\n    rightLabels[3][4] = opMap[operations[8]];\n    rightLabels[5][0] = opMap[operations[11]];\n    rightLabels[5][4] = opMap[operations[12]];\n    rightLabels[6][2] = opMap[operations[17]];\n    rightLabels[8][0] = opMap[operations[18]];\n    rightLabels[8][4] = opMap[operations[19]];\n    return rightLabels;\n  }\n\n  getBottomLabels() {\n    let bottomLabels = [];\n    const { grid, opMap, operations } = this.state;\n\n    for (let i = 0; i < grid.length; i++) {\n      bottomLabels[i] = [];\n      for (let j = 0; j < grid[0].length; j++) {\n        bottomLabels[i].push(null);\n      }\n    }\n\n    bottomLabels[1][0] = \"=\";\n    bottomLabels[1][2] = \"=\";\n    bottomLabels[1][4] = \"=\";\n    bottomLabels[1][6] = \"=\";\n    bottomLabels[4][1] = \"=\";\n    bottomLabels[4][5] = \"=\";\n    bottomLabels[6][0] = \"=\";\n    bottomLabels[6][2] = \"=\";\n    bottomLabels[6][4] = \"=\";\n    bottomLabels[6][6] = \"=\";\n\n    bottomLabels[0][0] = opMap[operations[2]];\n    bottomLabels[0][2] = opMap[operations[3]];\n    bottomLabels[0][4] = opMap[operations[4]];\n    bottomLabels[0][6] = opMap[operations[5]];\n    bottomLabels[3][1] = opMap[operations[9]];\n    bottomLabels[3][5] = opMap[operations[10]];\n    bottomLabels[5][0] = opMap[operations[13]];\n    bottomLabels[5][2] = opMap[operations[14]];\n    bottomLabels[5][4] = opMap[operations[15]];\n    bottomLabels[5][6] = opMap[operations[16]];\n\n    return bottomLabels;\n  }\n\n  render() {\n    return (\n      <Board\n        {...this.props}\n        hiddenLiterals={[-2]}\n        cellBorders={this.getCellBorders()}\n        rightLabels={this.getRightLabels()}\n        bottomLabels={this.getBottomLabels()}\n      />\n    );\n  }\n}\n\nexport default GaramBoard;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\n\nclass NonogramBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rowcounts: Object.values(this.props.params.rowcounts).map((o) =>\n        Object.values(o)\n      ),\n      colcounts: Object.values(this.props.params.colcounts).map((o) =>\n        Object.values(o)\n      ),\n    };\n  }\n\n  getBackgrounds() {\n    let backgrounds = {};\n\n    backgrounds[\"0\"] = \"linear-gradient(white, white)\";\n    backgrounds[\"1\"] = \"linear-gradient(black, black)\";\n\n    return backgrounds;\n  }\n\n  transpose(array) {\n    return array[0].map((_, colIndex) => array.map((row) => row[colIndex]));\n  }\n\n  render() {\n    return (\n      <Board\n        {...this.props}\n        literalBackgrounds={this.getBackgrounds()}\n        hiddenLiterals={[0, 1]}\n        startrows={this.transpose(this.state.colcounts)}\n        startcols={this.transpose(this.state.rowcounts)}\n      />\n    );\n  }\n}\n\nexport default NonogramBoard;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\n\nclass SudokuBoard extends React.Component {\n  getCellBorders() {\n    let borders = [];\n\n    for (let i = 0; i < 9; i++) {\n      borders[i] = [];\n      for (let j = 0; j < 9; j++) {\n        borders[i].push({\n          borderTop: i % 3 === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderBottom: i === 8 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderLeft: j % 3 === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n          borderRight: j === 8 ? \"2px solid black\" : \"2px solid lightgray\",\n          marginLeft: \"-2px\",\n          marginBottom: \"-2px\",\n        });\n      }\n    }\n\n    return borders;\n  }\n\n  render() {\n    return (\n      <Board\n        {...this.props}\n        cellBorders={this.getCellBorders()}\n        literalSize={0.7}\n      />\n    );\n  }\n}\n\nexport default SudokuBoard;\n","import axios from \"axios\";\n\n/**\n * Wrapper functions for axios requests.\n * \n */\nasync function getExamples() {\n  const response = await axios.get(\"examples\");\n  return response.data;\n}\n\nasync function getExampleData(exampleName) {\n  const response = await axios.get(`examples/${exampleName}`);\n  return response.data;\n}\n\nasync function getEprime() {\n  const response = await axios.get(\"api/eprime\");\n  return response.data;\n}\n\nasync function createJob(options) {\n  const response = await axios.post(\"api/job\", options);\n  return response.data;\n}\n\nasync function getJob(jobId) {\n  const response = await axios.get(`api/job/${jobId}`);\n  return response.data;\n}\n\nasync function getJobOutput(jobId) {\n  const response = await axios.get(`api/job/${jobId}/output`);\n  return response.data;\n}\n\nexport {\n  getExamples,\n  getExampleData,\n  getEprime,\n  createJob,\n  getJob,\n  getJobOutput,\n};\n","import React from \"react\";\nimport { Spinner, Alert } from \"react-bootstrap\";\n\nimport * as API from \"../API\";\n\n/**\n * This component represents a waiting screen for a Demystify job, polling its\n * progress at regular intervals and displaying status information.\n */\nclass JobWait extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"pending\",\n      pollDelay: 1000, // How long to wait between polls.\n      pollCount: 0, // How many polls have been made.\n      error: null,\n\n      log: null, // Logging output from Demystify.\n      progress: null, // Description of what stage Demystify is on.\n    };\n  }\n\n  // Start polling at regular intervals.\n  componentDidMount() {\n    this.timer = setInterval(() => this.checkStatus(), this.state.pollDelay);\n  }\n\n  // Update interval if pollDelay has changed.\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pollDelay !== this.state.pollDelay) {\n      clearInterval(this.timer);\n      this.timer = setInterval(() => this.checkStatus(), this.state.pollDelay);\n    }\n  }\n\n  // End polling when JobWait unmounts.\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  // Poll the status of a Demystify job\n  checkStatus() {\n    API.getJob(this.props.jobId).then((res) => {\n      res.status === \"finished\"\n        ? API.getJobOutput(this.props.jobId)\n            .then((output) => {\n              // Job succeeded\n              clearInterval(this.timer);\n              this.props.setInput(output, this.props.mode);\n            })\n            .catch((error) => {\n              // Job errored\n              clearInterval(this.timer);\n              if (error.response) {\n                this.setState({ error: error.response.data });\n              } else {\n                this.setState({ error: error });\n              }\n            })\n        : // Store Demystify log and progress.\n          this.setState({ log: res.log, progress: res.progress });\n    });\n    this.setState({ pollCount: this.state.pollCount + 1 });\n    // Poll less frequently after the first 30 seconds\n    if (this.state.pollCount === 30) {\n      this.setState({ pollDelay: 10000 });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.error !== null ? (\n          <>\n            <h4>Demystify job failed</h4>\n\n            <p>\n              <b>Job ID:</b> {this.props.jobId}\n            </p>\n            <Alert variant=\"warning\" className=\"m-4\">\n              <b>Error message: </b>\n              {this.state.error}\n            </Alert>\n          </>\n        ) : (\n          <>\n            <Spinner animation=\"border\" />\n            <h4>Demystify is running... </h4>\n            <p>\n              <b>Job ID:</b> {this.props.jobId}\n            </p>\n            <p>\n              If you don't want to wait here for the job to complete you can\n              check its progress later at: <br />{\" \"}\n              <a href={window.location + \"api/job/\" + this.props.jobId}>\n                {window.location + \"api/job/\" + this.props.jobId}\n              </a>\n              <br /> and then save the result when it's ready from:\n              <br />{\" \"}\n              <a\n                href={\n                  window.location + \"api/job/\" + this.props.jobId + \"/output\"\n                }\n              >\n                {window.location + \"api/job/\" + this.props.jobId + \"/output\"}\n              </a>\n\n              { // Show logging output in faux command output\n                this.state.log && (\n                <Alert className=\"m-4\" variant=\"info\">\n                  {this.state.progress && <b>{this.state.progress}</b>}\n                  <br />\n                  <div\n                    style={{\n                      // Trick to ensure the box is always scrolled to the bottom\n                      maxHeight: \"8em\",\n                      overflowY: \"scroll\",\n                      display: \"flex\",\n                      flexDirection: \"column-reverse\",\n                      size: \"10pt\",\n                    }}\n                  >\n                    {this.state.log.reverse().map((l) => (\n                      <p style={{ textAlign: \"left\" }}>{l}</p>\n                    ))}\n                  </div>\n                </Alert>\n              )}\n            </p>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default JobWait;\n","import React from \"react\";\nimport NavSwitcher from \"./NavSwitcher\";\nimport Board from \"./Board/Board\";\nimport ExplanationList from \"./Explanations/ExplanationList\";\n\nimport { Row, Col, Card, Button, Alert } from \"react-bootstrap\";\n\nimport TentsBoard from \"./PuzzleBoards/TentsBoard\";\nimport BinairoBoard from \"./PuzzleBoards/BinairoBoard\";\nimport KillerBoard from \"./PuzzleBoards/KillerBoard\";\nimport KakuroBoard from \"./PuzzleBoards/KakuroBoard\";\nimport KakurasuBoard from \"./PuzzleBoards/KakurasuBoard\";\nimport StarBattleBoard from \"./PuzzleBoards/StarBattleBoard\";\nimport FutoshikiBoard from \"./PuzzleBoards/FutoshikiBoard\";\nimport ThermometerBoard from \"./PuzzleBoards/ThermometerBoard\";\nimport SkyscrapersBoard from \"./PuzzleBoards/SkyscrapersBoard\";\nimport GaramBoard from \"./PuzzleBoards/GaramBoard\";\nimport NonogramBoard from \"./PuzzleBoards/NonogramBoard\";\nimport SudokuBoard from \"./PuzzleBoards/SudokuBoard\";\nimport JobWait from \"./JobWait\";\n\nimport * as API from \"../API\";\n\n/**\n * Main puzzle visualiser with a board on the left and explanations on the right.\n */\nclass PuzzleStepper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 0,\n      highlightedLiterals: -1,\n      highlightedExplanations: [],\n      selectedLiteral: null,\n      currentChoice: 0,\n      selectedChoice: 0,\n      type: this.props.type,\n      params: this.props.params,\n      inputObject: this.props.inputObject,\n      continueData: this.props.continueData,\n      isWaiting: false,\n      finishedPuzzle: false,\n      error: null,\n    };\n  }\n\n  // Choose a board if we have defined one for this puzzle type.\n  chooseBoard(boardProps) {\n    switch (this.state.type) {\n      case \"tents.eprime\":\n        return <TentsBoard {...boardProps} />;\n      case \"binairo.eprime\":\n        return <BinairoBoard {...boardProps} />;\n      case \"nice_killer.eprime\":\n        return <KillerBoard {...boardProps} />;\n      case \"star-battle.eprime\":\n        return <StarBattleBoard {...boardProps} />;\n      case \"kakuro.eprime\":\n        return <KakuroBoard {...boardProps} />;\n      case \"kakurasu.eprime\":\n        return <KakurasuBoard {...boardProps} />;\n      case \"nfutoshiki.eprime\":\n        return <FutoshikiBoard {...boardProps} />;\n      case \"thermometer.eprime\":\n        return <ThermometerBoard {...boardProps} />;\n      case \"skyscrapers.eprime\":\n        return <SkyscrapersBoard {...boardProps} />;\n      case \"garam.eprime\":\n        return <GaramBoard {...boardProps} />;\n      case \"nonogram.eprime\":\n        return <NonogramBoard {...boardProps} />;\n      case \"x-sums.eprime\":\n        return <SudokuBoard {...boardProps} />;\n      case \"miracle.eprime\":\n        return <SudokuBoard {...boardProps} />;\n      case \"sudoku.eprime\":\n        return <SudokuBoard {...boardProps} />;\n      // ================================\n      // <-- More Cases can be added here\n      // ================================\n      default:\n        return <Board {...boardProps} />;\n    }\n  }\n\n  /* Detect whether we are at a step where the user should have a choice \n       (mode dependent) \n    */\n  isChoicesStep() {\n    return (\n      this.props.mode === \"manual\" &&\n      !this.state.finishedPuzzle &&\n      this.state.currentStep === this.state.inputObject.length - 1\n    );\n  }\n\n  isLitForceStep() {\n    return (\n      this.props.mode === \"force\" &&\n      !this.state.finishedPuzzle &&\n      this.state.currentStep === this.state.inputObject.length - 1\n    );\n  }\n\n  /* Two-way highlighting system: mouseover an explanation and see relevant literals,\n        mouseover a literals to see relevant explanations. \n    */\n  highlightLiteral(val) {\n    this.setState((prev) => {\n      return {\n        highlightedLiterals: prev.highlightedLiterals === val ? -1 : val,\n      };\n    });\n  }\n\n  highlightExplanation(val) {\n    this.setState((prev) => {\n      return {\n        highlightedExplanations:\n          JSON.stringify(prev.highlightedExplanations) === JSON.stringify(val)\n            ? []\n            : val,\n      };\n    });\n  }\n\n  // Passed to the NavSwitcher for overall steps\n  setCurrentStep(step) {\n    this.setState({ currentStep: step, currentChoice: 0 });\n  }\n\n  // Passed to the NavSwitcher for switching between alternatives.\n  setChoice(number) {\n    this.setState({ currentChoice: number });\n  }\n\n  // Alternative button to pass to NavSwitcher for confirming interactive choice.\n  getEndButton() {\n    if (this.isChoicesStep()) {\n      return (\n        <Button\n          variant=\"success\"\n          disabled={this.state.isWaiting}\n          onClick={this.handleGetNext.bind(this)}\n        >\n          {\"Confirm Choice\"}{\" \"}\n        </Button>\n      );\n    } else if (this.isLitForceStep()) {\n      return (\n        <Button\n          variant=\"success\"\n          disabled={this.state.isWaiting}\n          onClick={this.handleGetNextWithForce.bind(this)}\n        >\n          {\"Confirm Choice\"}{\" \"}\n        </Button>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  // Update the input object and state after a choice has been made.\n  appendInput(obj, mode) {\n    this.setState({\n      currentChoice: 0,\n      selectedChoice: 0,\n      selectedLiteral: null,\n      currentStep:\n        this.props.mode === \"force\"\n          ? this.state.currentStep\n          : this.state.currentStep + 1,\n      continueData: obj,\n      finishedPuzzle: obj.finished,\n      inputObject: [\n        ...this.state.inputObject.slice(0, -1),\n        ...obj.result.steps,\n      ],\n      isWaiting: false,\n    });\n  }\n\n  // Get next step with MUS choice.\n  async handleGetNext() {\n    const { eprimeName, eprime, paramName, param, algorithm, explainedLits } =\n      this.state.continueData;\n    const { currentChoice } = this.state;\n    const result = await API.createJob({\n      eprimeName: eprimeName,\n      eprime: eprime,\n      paramName: paramName,\n      param: param,\n      algorithm: algorithm,\n      numSteps: 1,\n      explainedLits: explainedLits,\n      choice: currentChoice,\n    });\n    this.setState({ isWaiting: true, jobId: result.jobId });\n  }\n\n    // Get next step skipping choices entirely\n    async handleSkip() {\n        const { eprimeName, eprime, paramName, param, algorithm, explainedLits } =\n          this.state.continueData;\n        const { currentChoice } = this.state;\n        const result = await API.createJob({\n          eprimeName: eprimeName,\n          eprime: eprime,\n          paramName: paramName,\n          param: param,\n          algorithm: algorithm,\n          numSteps: 1,\n          explainedLits: explainedLits,\n          choice: 0,\n          appendCurrent: this.props.mode === \"force\"\n        });\n        this.setState({ isWaiting: true, jobId: result.jobId });\n      }\n\n  // Get next step with literal choice.\n  async handleGetNextWithForce() {\n    if (!this.state.selectedLiteral) {\n      this.setState({ error: \"Please choose a literal to continue.\" });\n      return;\n    }\n    const { eprimeName, eprime, paramName, param, algorithm, explainedLits } =\n      this.state.continueData;\n    const { selectedLiteral } = this.state;\n    const litChoice = {\n      row: selectedLiteral.row + 1,\n      column: selectedLiteral.column + 1,\n      value: selectedLiteral.value,\n    };\n\n    const result = await API.createJob({\n      eprimeName: eprimeName,\n      eprime: eprime,\n      paramName: paramName,\n      param: param,\n      algorithm: algorithm,\n      numSteps: 1,\n      explainedLits: explainedLits,\n      litChoice: litChoice,\n    });\n    this.setState({ isWaiting: true, jobId: result.jobId, error: null });\n  }\n\n  /* Retrieve the current step being displayed: depends on mode and whether\n     there are alternative choices */\n  getStepData() {\n    if (this.isChoicesStep()) {\n      return this.state.inputObject[this.state.currentStep].choices[\n        this.state.currentChoice\n      ];\n    } else {\n      return this.state.currentChoice === 0\n        ? this.state.inputObject[this.state.currentStep]\n        : this.state.inputObject[this.state.currentStep].otherChoices[\n            this.state.currentChoice - 1\n          ];\n    }\n  }\n\n  getAlternatives() {\n    if (this.isChoicesStep()) {\n      return this.state.inputObject[this.state.currentStep].choices;\n    } else {\n      return this.state.inputObject[this.state.currentStep].otherChoices;\n    }\n  }\n\n  handleSelectChoice() {\n    this.setState({ selectedChoice: this.state.currentChoice });\n  }\n\n  setSelectedLiteral(row, column, value) {\n    this.setState({\n      selectedLiteral: { row: row, column: column, value: value },\n    });\n  }\n  render() {\n    const stepData = this.getStepData();\n\n    // Core required board props.\n    const boardProps = {\n      params: this.state.params,\n      highlight: this.highlightExplanation.bind(this),\n      key: this.state.highlightedLiterals,\n      highlighted: this.state.highlightedLiterals,\n      rows: stepData.puzzleState.matrices[0].rows,\n      setSelectedLiteral: this.setSelectedLiteral.bind(this),\n    };\n\n    return (\n      <React.Fragment>\n        <NavSwitcher\n          className=\"mt-3 p-3\"\n          stepName={\"step\"}\n          setCurrentStep={this.setCurrentStep.bind(this)}\n          maxSteps={this.state.inputObject.length - 1}\n          currentStep={this.state.currentStep}\n          endButton={this.getEndButton()}\n        />\n        {this.state.isWaiting ? (\n          <Row className=\"mt-4 d-flex justify-content-center align-items-center\">\n            <Card className=\"mt-3\">\n              <Card.Body>\n                <JobWait\n                  jobId={this.state.jobId}\n                  setInput={this.appendInput.bind(this)}\n                  mode={this.state.mode}\n                />\n              </Card.Body>\n            </Card>\n          </Row>\n        ) : (\n          <Row className=\"mb-4\">\n            {/*The main board: adjust width based on screen size */}\n            <Col xs={12} md={8} lg={8} xl={6}>\n              {this.chooseBoard(boardProps)}\n            </Col>\n\n            {/*Sidebar for explanation and/or options*/}\n            <Col>\n              {this.isLitForceStep() && (\n                /* If this a literal choice step, display a prompt with the currently\n                   selected literal. */\n                <Card className=\"mt-3\">\n                  <Card.Body>\n                    <b>\n                      Choose a literal (value on the board) to force\n                      explanations for that literal.\n                    </b>\n                    <br /> <br /> Currently selected literal:\n                    <b>\n                      {this.state.selectedLiteral\n                        ? \" [\" +\n                          (this.state.selectedLiteral.row + 1) +\n                          \", \" +\n                          (this.state.selectedLiteral.column + 1) +\n                          \"] with value \" +\n                          this.state.selectedLiteral.value\n                        : \" none\"}\n                    </b>\n                    <br />\n                    <Button \n                       className=\"mt-4\" \n                       variant=\"secondary\"\n                       onClick={this.handleSkip.bind(this)}>\n                        Skip choice for this step</Button>\n                  </Card.Body>\n                </Card>\n              )}\n\n              {stepData.skippedDeductions && (\n                <Card className=\"mt-3\">\n                  <Card.Body>\n                    <small>Skipped some obvious deductions.</small>\n                  </Card.Body>\n                </Card>\n              )}\n\n              {this.state.error && (\n                <Alert className=\"mt-3\" variant=\"warning\">\n                  {this.state.error}\n                </Alert>\n              )}\n\n              {!this.isLitForceStep() && (\n                // The explanations\n                <ExplanationList\n                  highlight={this.highlightLiteral.bind(this)}\n                  /* Only one of simpleDeductions or deductions should be defined. */\n                  simpleDeductions={stepData.simpleDeductions}\n                  deduction={stepData.deduction}\n                  highlighted={this.state.highlightedExplanations}\n                  boldBorder={\n                    this.isChoicesStep() &&\n                    this.state.currentChoice === this.state.selectedChoice\n                  }\n                  /* Props for displaying alternatives */\n                  choices={this.getAlternatives()}\n                  smallestMUSSize={\n                    this.state.inputObject[this.state.currentStep]\n                      .smallestMUSSize\n                  }\n                  setChoice={this.setChoice.bind(this)}\n                  currentChoice={this.state.currentChoice}\n                  extraChoice={!this.isChoicesStep()}\n                >\n                  {/* If this is a MUS choice step, display another NavSwitcher\n                      to view the choices, along with a selection button. */\n                    this.isChoicesStep() && (\n                    <>\n                      {this.state.currentChoice !==\n                      this.state.selectedChoice ? (\n                        <Button\n                          onClick={this.handleSelectChoice.bind(this)}\n                          className=\"mt-3\"\n                          variant=\"success\"\n                        >\n                          Select explanation\n                        </Button>\n                      ) : (\n                        <Button className=\"mt-3\" disabled variant=\"success\">\n                          Currently selected\n                        </Button>\n                      )}\n                      <p className=\"mt-3\">\n                        Currently selected choice:{\" \"}\n                        {this.state.selectedChoice + 1}\n                      </p>{\" \"}\n                    </>\n                  )}\n                </ExplanationList>\n              )}\n            </Col>\n          </Row>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PuzzleStepper;\n","import React from \"react\";\n\n/**\n * Wrapper class for a standard HTML file input - for uploading JSON and eprime\n * files. \n */\nclass FileUploader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileInput = React.createRef();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Allow other components to reset this to \"No file selected\"\n    if (this.props !== prevProps) {\n      if (this.props.noFile) {\n        this.fileInput.current.value = \"\";\n      }\n    }\n  }\n\n  uploadFile = async (e) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const text = e.target.result;\n        this.props.onUpload(text, this.fileInput.current.files[0].name);\n      } catch {\n        this.props.onError();\n      }\n    };\n    reader.readAsText(e.target.files[0]);\n  };\n\n  render() {\n    return (\n      <input\n        disabled={this.props.disabled}\n        type=\"file\"\n        ref={this.fileInput}\n        onChange={(e) => this.uploadFile(e)}\n      />\n    );\n  }\n}\n\nexport default FileUploader;\n","import React from \"react\";\nimport { Dropdown, Spinner } from \"react-bootstrap\";\n\n/**\n * Wrapper class for dropdown button, maps an array of strings to the items.\n */\nclass DropdownChoices extends React.Component {\n  render() {\n    const { name, choices, makeChoice, disabled, isLoading } = this.props;\n    return (\n      <Dropdown onSelect={(e) => makeChoice(e)}>\n        <Dropdown.Toggle\n          disabled={disabled}\n          variant=\"success\"\n          id=\"dropdown-basic\"\n        >\n          {name}\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu style={{ maxHeight: \"20vh\", overflowY: \"scroll\" }}>\n          {isLoading ? (\n            <div className=\"d-flex justify-content-center\">\n              <Spinner animation=\"border\" />\n            </div>\n          ) : (\n            choices.map((name) => (\n              <Dropdown.Item\n                key={name}\n                eventKey={name}\n                onClick={() => makeChoice(name)}\n              >\n                {name}\n              </Dropdown.Item>\n            ))\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default DropdownChoices;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\n/**\n * A controlled inline form component to switch between options by selecting\n * radio buttons.\n */\nclass RadioChoices extends React.Component {\n  render() {\n    const { name, choices, labels, selected, onSelect } = this.props;\n    return (\n      <Form inline className=\"mx-4 mb-3\">\n        <Form.Label className=\"mr-4\">\n          {name[0].toUpperCase() + name.substring(1) + \":\"}{\" \"}\n        </Form.Label>\n        {choices.map((choice, i) => (\n          <Form.Check\n            className=\"mr-4\"\n            type=\"radio\"\n            name={name}\n            value={choice}\n            checked={selected === choice}\n            onChange={onSelect}\n            label={labels[i]}\n          />\n        ))}\n      </Form>\n    );\n  }\n}\n\nexport default RadioChoices;\n","import React from \"react\";\nimport { Card, Row, ListGroup, Alert, Spinner, Button } from \"react-bootstrap\";\nimport * as API from \"../../API\";\nimport FileUploader from \"./FileUploader\";\nimport DropdownChoices from \"./DropdownChoices\";\nimport JobWait from \"../JobWait\";\nimport RadioChoices from \"./RadioChoices\";\n\n/**\n * Main Menu to display the various options. \n * Currently available is:\n *  - Upload Demystify JSON output and view.\n *  - View a hosted JSON example.\n *  - Build a Sudoku param file and download / run.\n *  - Run demystify live with various options\n *      -- Use hosted eprime/param files or upload own.\n *      -- Mode: default, mus choices, or lit choies (see README)\n *      -- Algorithm: cascade (2 versions) or FORQES (see README)\n */\nclass MainMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Dropdown choices\n      examples: [],\n      eprimeChoices: [],\n      chosenEprime: null,\n\n      // Form input\n      eprime: null,\n      eprimeName: null,\n      param: null,\n      paramName: null,\n      mode: \"default\",\n      algorithm: \"cascade-fast\",\n\n      // Controls spinners / and disables buttons\n      isLoadingExamples: true,\n      isLoadingEprime: true,\n      isLoadingExampleJSON: false,\n      isQueueing: false, // Setting up job\n      isWaiting: false, // Job is running (show JobWait)\n\n      // Other\n      jobId: null,\n      error: \"\",\n    };\n  }\n\n  componentDidMount() {\n    API.getExamples().then((res) =>\n      this.setState({ examples: res }, () =>\n        this.setState({ isLoadingExamples: false })\n      )\n    );\n    API.getEprime().then((res) =>\n      this.setState({ eprimeChoices: res }, () =>\n        this.setState({ isLoadingEprime: false })\n      )\n    );\n  }\n\n  // Ask the user if they definitely want to leave\n  componentDidUpdate = () => {\n    if (this.state.isQueueing || this.state.isWaiting) {\n      window.onbeforeunload = () => {\n        return true;\n      };\n    } else {\n      window.onbeforeunload = undefined;\n    }\n  };\n\n  setError(message) {\n    this.setState({ error: message });\n  }\n\n  // Initialise puzzle stepper from chosen example.\n  async chooseExample(name) {\n    this.setState({ isLoadingExampleJSON: true });\n    const example = await API.getExampleData(name);\n    this.props.setInput({ result: example }, \"default\");\n  }\n\n  // Parse essence option to retrieve eprime and param names.\n  chooseEprime(name) {\n    const both = name.toString().split(\",\");\n    this.setState({\n      eprimeName: both[0],\n      eprime: null,\n      paramName: both[1].replace(/\\s/g, \"\"),\n      param: null,\n      chosenEprime: both[1].replace(/\\s/g, \"\").substr(0, 8) + \"...\",\n    });\n  }\n\n  // Generic state setter from buttons etc.\n  handleOptionChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  // Handle the main \"Run demystify live\" feature\n  async handleGo() {\n    \n    if (!this.state.eprimeName || !this.state.paramName) {\n      this.setError(\"Please select .eprime and .param files to run Demystify.\");\n      return;\n    }\n\n    this.setState({ isQueueing: true });\n    \n    // Gather options\n    const { eprimeName, eprime, paramName, param, mode, algorithm } =\n      this.state;\n    const numSteps = mode === \"default\" ? -1 : 0;\n    const getInitial = mode === \"force\";\n\n    try {\n      const result = await API.createJob({\n        eprimeName: eprimeName,\n        eprime: eprime,\n        paramName: paramName,\n        param: param,\n        algorithm: algorithm,\n        numSteps: numSteps,\n        explainedLits: [],\n        getInitial: getInitial,\n      });\n\n      this.setState({ isWaiting: true, jobId: result.jobId });\n    } catch (err) {\n      this.setError(\"There was a problem running Demystify on the server.\");\n      this.setState({ isQueueing: false });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex flex-column align-items-center\">\n        {/*--------- Heading and logo ----------------*/}\n        <h1 className=\"mt-3\">Demystify Visualiser</h1>\n        <img\n          className=\"mt-3\"\n          style={{ width: \"80px\" }}\n          alt=\"demystify logo\"\n          src=\"favicon.ico\"\n        />\n\n        <Card as={Row} className=\"mt-3 pt-3 w-75\">\n          \n          {// If a job is running, display the JobWait component\n            this.state.isWaiting ? (\n            <JobWait\n              jobId={this.state.jobId}\n              setInput={this.props.setInput}\n              mode={this.state.mode}\n            />\n\n           // Otherwise show the menu options\n          ) : (\n            <ListGroup variant=\"flush\">\n\n              {/*------------ Visualise from JSON ------------*/}\n              <ListGroup.Item>\n                <Row>\n                  <b className=\"mx-4\"> Load Demystify output from JSON file:</b>\n                  <FileUploader\n                    disabled={\n                      this.state.isQueueing || this.state.isLoadingExampleJSON\n                    }\n                    onUpload={(text) =>\n                      this.props.setInput(\n                        { result: JSON.parse(text) },\n                        \"default\"\n                      )\n                    }\n                    onError={() =>\n                      this.setError(\n                        \"Could not read the input file. Ensure it is a JSON file \\\n                         produced by Demystify.\"\n                      )\n                    }\n                  />\n                </Row>\n              </ListGroup.Item>\n\n              {/*------------ Visualise from hosted example ------------*/}\n              <ListGroup.Item>\n                <Row>\n                  <b className=\"mx-4 pt-2\">View a pre-generated example:</b>\n                  <DropdownChoices\n                    name={\"Examples\"}\n                    choices={this.state.examples}\n                    makeChoice={this.chooseExample.bind(this)}\n                    disabled={this.state.isQueueing}\n                    isLoading={this.state.isLoadingExamples}\n                  />\n                  {this.state.isLoadingExampleJSON && (\n                    <Spinner className=\"ml-4\" animation=\"border\" />\n                  )}\n                </Row>\n              </ListGroup.Item>\n\n              {/*------------ Create custom Sudoku instance ------------*/}\n              <ListGroup.Item>\n                <Row>\n                  <b className=\"mx-4 pt-2\">Try your own Sudoku instance:</b>\n                  <Button\n                    variant=\"success\"\n                    onClick={this.props.handleBuildSudoku}\n                  >\n                    Create\n                  </Button>\n                </Row>\n              </ListGroup.Item>\n\n              {/*------------ Run Demystify live ------------*/}\n              <ListGroup.Item>\n\n                <Row>\n                  <b className=\"mx-4 mb-2\">Run Demystify live:</b>\n                </Row>\n\n\n                <Row>\n                  <p className=\"mx-4 pt-2 mb-2\">\n                    Select an eprime/param combination:\n                  </p>\n                  <DropdownChoices\n                    name={\n                      this.state.chosenEprime\n                        ? this.state.chosenEprime\n                        : \"Essence\"\n                    }\n                    choices={this.state.eprimeChoices}\n                    makeChoice={this.chooseEprime.bind(this)}\n                    disabled={this.state.isQueueing}\n                    isLoading={this.state.isLoadingEprime}\n                  />\n                </Row>\n\n                <Row>\n                  <b className=\"mx-4 mb-2\">OR</b>\n                </Row>\n\n                <Row>\n                  <p className=\"mx-4\">Upload puzzle description (.eprime): </p>\n                  <FileUploader\n                    disabled={\n                      this.state.isQueueing || this.state.isLoadingExampleJSON\n                    }\n                    onUpload={(text, name) =>\n                      this.setState({\n                        chosenEprime: null,\n                        eprime: text,\n                        eprimeName: name,\n                      })\n                    }\n                    onError={() =>\n                      this.setError(\n                        \"Could not read the input file. Ensure it is a valid \\\n                          .eprime file.\"\n                      )\n                    }\n                    noFile={this.state.eprime === null} // Reset the upload\n                  />\n                </Row>\n\n\n                <Row>\n                  <p className=\"mx-4\">and puzzle instance (.param): </p>\n                  <FileUploader\n                    disabled={\n                      this.state.isQueueing || this.state.isLoadingExampleJSON\n                    }\n                    onUpload={(text, name) =>\n                      this.setState({\n                        chosenEprime: null,\n                        param: text,\n                        paramName: name,\n                      })\n                    }\n                    onError={() =>\n                      this.setError(\n                        \"Could not read the input file. Ensure it is a valid \\\n                          .param file.\"\n                      )\n                    }\n                    noFile={this.state.param === null} // Reset the upload\n                  />\n                </Row>\n\n\n                <Row>\n                  <RadioChoices\n                    name={\"mode\"}\n                    choices={[\"default\", \"manual\", \"force\"]}\n                    labels={[\n                      \"Use default MUS choices\",\n                      \"Choose MUSes manually\",\n                      \"Force literal choices.\",\n                    ]}\n                    selected={this.state.mode}\n                    onSelect={this.handleOptionChange.bind(this)}\n                  />\n                </Row>\n\n                <Row>\n                  <RadioChoices\n                    name={\"algorithm\"}\n                    choices={[\"cascade-fast\", \"cascade-more\", \"forqes\"]}\n                    labels={[\n                      \"Cascade - faster\",\n                      \"Cascade - more choices\",\n                      \"FORQES\",\n                    ]}\n                    selected={this.state.algorithm}\n                    onSelect={this.handleOptionChange.bind(this)}\n                  />\n                </Row>\n\n                <Row>\n                  <Button\n                    disabled={\n                      this.state.isQueueing || this.state.isLoadingExampleJSON\n                    }\n                    className=\"mx-4\"\n                    variant=\"success\"\n                    onClick={this.handleGo.bind(this)}\n                  >\n                    Go\n                  </Button>\n                  {this.state.isQueueing && (\n                    <React.Fragment>\n                      <Spinner animation=\"border\" />\n                      <p className=\"ml-4\">Setting up Demystify job...</p>\n                    </React.Fragment>\n                  )}\n                </Row>\n\n              </ListGroup.Item>\n            </ListGroup>\n          )}\n        </Card>\n\n        { // Display any errors\n          this.state.error.length > 0 && (\n          <Alert variant=\"warning\" className=\"mt-3 p-4 w-75 text-center\">\n            {this.state.error}\n          </Alert>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MainMenu;\n","import React from \"react\";\nimport SquareRow from \"./Board/SquareRow\";\nimport SquareCol from \"./Board/SquareCol\";\nimport { Card, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\nimport JobWait from \"./JobWait\";\nimport * as API from \"../API\";\n\n/**\n * A hardcoded Sudoku grid with numerical inputs that allow creation of a param\n * file which can then be downloaded or used to run demystify.\n * \n * NB: For building custom examples of other puzzles it is probably more \n * straightforward to write .param files directly.\n */\nclass SudokuBuilder extends React.Component {\n  state = {\n    // Create 9x9 array of empty strings.\n    grid: Array.apply(null, Array(9)).map((v, i) =>\n      Array.apply(null, Array(9)).map((w, j) => \"\")\n    ),\n\n    isRunning: false,\n    isWaiting: false,\n    error: null,\n  };\n\n  // See SudokuBoard.jsx\n  getSudokuBorders(i, j) {\n    return {\n      borderTop: i % 3 === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n      borderBottom: i === 8 ? \"2px solid black\" : \"2px solid lightgray\",\n      borderLeft: j % 3 === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n      borderRight: j === 8 ? \"2px solid black\" : \"2px solid lightgray\",\n      marginLeft: \"-2px\",\n      marginBottom: \"-2px\",\n    };\n  }\n\n  handleChange(i, j, e) {\n    // Match single digits or empty string\n    if (/^\\d$|^$/.test(e.target.value)) {\n      this.updateGrid(i, j, e.target.value);\n    }\n  }\n\n  updateGrid(i, j, v) {\n    let newGrid = this.state.grid;\n    newGrid[i][j] = v;\n    this.setState({ grid: newGrid });\n  }\n\n  // Convert grid state to essence prime param string.\n  getParamString() {\n    const { grid } = this.state;\n    return (\n      \"letting fixed be \\n\\n [\" +\n      grid.map(\n        (row) => \"\\n    [\" + row.map((v) => (v === \"\" ? \"0\" : v)) + \"]\"\n      ) +\n      \"\\n]\"\n    );\n  }\n\n  // Download the param string.\n  handleSave() {\n    const element = document.createElement(\"a\");\n    const file = new Blob([this.getParamString()], {\n      type: \"text/plain;charset=utf-8\",\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"sudoku_builder.param\";\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  // Run demystify with sudoku rules and the specified instance as a param file.\n  async handleRun() {\n    this.setState({ isRunning: true });\n\n    try {\n      const result = await API.createJob({\n        eprimeName: \"sudoku.eprime\",\n        eprime: null,\n        paramName: \"sudoku_builder_\" + Date.now() + \".param\",\n        param: this.getParamString(),\n        algorithm: \"cascade\",\n        numSteps: -1,\n        explainedLits: [],\n      });\n\n      this.setState({ isWaiting: true, jobId: result.jobId });\n    } catch (err) {\n      this.setError(\"There was a problem running Demystify on the server.\");\n      this.setState({ isRunning: false });\n    }\n  }\n\n  setError(err) {\n    this.setState({ error: err });\n  }\n  \n  render() {\n    const { grid } = this.state;\n    return (\n      <>\n        {/* Top menu panel*/}\n        <Row className=\"d-flex justify-content-center\">\n          <Col xs={12} lg={8}>\n            <Card className=\"mt-3 pt-3 w-100\">\n              <Card.Body className=\"d-flex justify-content-between\">\n                <Button\n                  disabled={this.state.isRunning}\n                  onClick={this.handleSave.bind(this)}\n                  variant=\"success\"\n                >\n                  Save as .param file\n                </Button>\n                <p className=\"mt-2\" style={{ textAlign: \"center\" }}>\n                  Fill in your desired starting grid values:{\" \"}\n                </p>\n                <Button\n                  disabled={this.state.isRunning}\n                  onClick={this.handleRun.bind(this)}\n                  variant=\"success\"\n                >\n                  Run Demystify\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n\n        {this.state.error && (\n          <Alert className=\"mt-3\" variant=\"warning\">\n            {this.state.error}\n          </Alert>\n        )}\n\n        {/* Main board panel*/}\n        <Row className=\"d-flex justify-content-center\">\n          <Col xs={12} sm={8} md={8} lg={5}>\n            <Card className=\"mt-3 pt-3\">\n              <Card.Body>\n                {this.state.isWaiting ? (\n                  <JobWait\n                    jobId={this.state.jobId}\n                    setInput={this.props.setInput}\n                    mode={this.state.mode}\n                  />\n                ) : (\n                  grid.map((row, i) => (\n                    <SquareRow>\n                      {row.map((v, j) => (\n                        <SquareCol borders={this.getSudokuBorders(i, j)}>\n                          <Form.Control\n                            className=\"m-0 w-100 h-100\"\n                            style={{\n                              border: 0,\n                              textAlign: \"center\",\n                              fontWeight: \"bold\",\n                              fontSize: \"2vw\",\n                            }}\n                            value={v}\n                            onFocus={() => this.updateGrid(i, j, \"\")}\n                            type=\"text\"\n                            size=\"1\"\n                            onChange={(e) => this.handleChange(i, j, e)}\n                          />\n                        </SquareCol>\n                      ))}\n                    </SquareRow>\n                  ))\n                )}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default SudokuBuilder;\n","import React from \"react\";\n\nimport { Container } from \"react-bootstrap\";\nimport PuzzleStepper from \"./PuzzleStepper\";\n\nimport MainMenu from \"./Menu/MainMenu\";\nimport SudokuBuilder from \"./SudokuBuilder\";\n\n/**\n * Currently the main content component for this application.\n */\nclass DemystifyVisualiser extends React.Component {\n  state = {\n    inputObject: [],\n    type: \"\",\n    params: {},\n    error: false,\n    mode: \"default\",\n    continueData: null,\n    buildSudoku: false,\n  };\n\n  // Load the steps, the type of puzzle, and the params (configuration) of the puzzle\n  setJSONInput(obj, mode) {\n    const result = obj.result;\n\n    this.setState(\n      {\n        continueData: obj,\n        inputObject: result.steps,\n        type: result.name,\n        params: result.params,\n        mode: mode,\n      },\n      () =>\n        !(this.state.inputObject && this.state.type && this.state.params) &&\n        this.setError()\n    );\n\n    // If we already finished the puzzle, switch to non-interactive\n    obj.finished && this.setState({ mode: \"default\" });\n  }\n\n  // Avoid invalid JSON\n  setError() {\n    this.setState({ error: true });\n  }\n\n  conponentDidUpdate(prevProps, prevState) {\n    if (prevState.error) this.setState({ error: false });\n  }\n\n  handleBuildSudoku() {\n    this.setState({ buildSudoku: true });\n  }\n  render = () => {\n    return (\n      <Container fluid style={{ textAlign: \"center\" }}>\n        {\n          /*If the puzzle has not been correctly loaded, display the main menu*/\n          this.state.inputObject.length === 0 || this.state.error ? (\n            /*...unless the build Sudoku options has been chosen.*/\n            this.state.buildSudoku ? (\n              <SudokuBuilder setInput={this.setJSONInput.bind(this)} />\n            ) : (\n              <MainMenu\n                setInput={this.setJSONInput.bind(this)}\n                handleBuildSudoku={this.handleBuildSudoku.bind(this)}\n              />\n            )\n          ) : (\n            /*Otherwise display the main puzzle visualiser*/\n            <PuzzleStepper\n              inputObject={this.state.inputObject}\n              continueData={this.state.continueData}\n              type={this.state.type}\n              params={this.state.params}\n              mode={this.state.mode}\n            />\n          )\n        }\n      </Container>\n    );\n  };\n}\n\nexport default DemystifyVisualiser;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport DemystifyVisualiser from \"./components/DemystifyVisualiser\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DemystifyVisualiser />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}