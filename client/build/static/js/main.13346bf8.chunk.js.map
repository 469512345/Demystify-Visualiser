{"version":3,"sources":["API.js","components/FileLoader.jsx","components/NavSwitcher.jsx","components/Board/Literal.jsx","components/Board/SquareCol.jsx","components/Board/SquareRow.jsx","components/Board/Cell.jsx","components/Board/Board.jsx","components/Explanations/Explanation.jsx","components/Explanations/ExplanationList.jsx","components/PuzzleBoards/TentsBoard.jsx","components/PuzzleBoards/BinairoBoard.jsx","components/PuzzleBoards/KillerBoard.jsx","components/PuzzleBoards/KakuroBoard.jsx","components/PuzzleBoards/StarBattleBoard.jsx","components/PuzzleBoards/FutoshikiBoard.jsx","components/PuzzleBoards/ThermometerBoard.jsx","components/PuzzleBoards/SkyscrapersBoard.jsx","components/PuzzleStepper.jsx","components/DemystifyViewer.jsx","reportWebVitals.js","index.js"],"names":["getExamples","a","axios","get","response","data","getExampleData","exampleName","FileLoader","props","readFile","e","preventDefault","reader","FileReader","onload","text","target","result","setInput","JSON","parse","setError","readAsText","files","state","isLoading","examples","API","then","res","setState","items","map","name","Dropdown","Item","Alert","className","variant","example","this","Card","ListGroup","Row","type","onChange","onSelect","chooseExample","Toggle","id","Menu","Spinner","animation","eventKey","onClick","React","Component","NavSwitcher","currentStep","newValue","maxSteps","setCurrentStep","prevProps","Form","inline","onSubmit","Button","lastStep","bind","stepName","Group","Label","nextStep","Literal","highlighted","prev","highlightExplanation","value","status","Col","style","color","textDecoration","fontWeight","fontStyle","backgroundColor","onMouseEnter","toggleHighlight","onMouseLeave","SquareCol","borders","border","marginBottom","marginLeft","margin","display","justifyContent","alignItems","backgroundImage","background","backgroundSize","cornerNumber","position","borderRadius","minWidth","fontSize","paddingRight","paddingLeft","zIndex","rightLabel","top","right","bottomLabel","bottom","innerBorders","padding","width","children","paddingBottom","SquareRow","Cell","cellRows","cellContent","length","cellValues","exp","highlight","literalBackgrounds","cellBackground","isSingleton","singletonValue","getSingletonValue","toString","scale","literalSize","console","log","hiddenLiterals","includes","cellBorders","cellInnerBorders","cellMargin","chooseBackground","size","isHidden","getFontSize","Container","fluid","row","i","literal","explanations","Board","arr","column","rows","cellBackgrounds","cornerNumbers","rightLabels","bottomLabels","rowsums","endrowsums","colsums","endcolsums","xs","cells","cell","sum","j","getIndex","Explanation","itemStyle","decision","reason","index","deHighlight","ExplanationList","simpleDeductions","deductions","otherChoices","smallestMUSSize","Fragment","Accordion","defaultActiveKey","Header","as","Collapse","maxHeight","overflowY","deduction","Body","setAlternative","currentAlternative","TentsBoard","x","params","y","treecount","backgrounds","push","borderTop","borderBottom","borderLeft","borderRight","getBackgrounds","getCellBorders","key","BinairoBoard","KillerBoard","grid","hints","currentHint","left","getCellInnerBorders","getCornerNumbers","KakuroBoard","x_max","y_max","horzsums","vertsums","blanks","bottomColor","topColor","getDiagonalGradient","extraStyle","blocks","gridSize","FutoshikiBoard","lessThans","lt","SIZE","lessThan","i1","i2","j1","j2","getRightLabels","getBottomLabels","ThermometerBoard","therms","xsize","ysize","thermNum","Math","floor","north","south","west","east","SkyscrapersBoard","CLUES","num","PuzzleStepper","highlightedLiterals","highlightedExplanations","inputObject","val","stringify","step","number","boardProps","StarBattleBoard","stepData","puzzleState","matrices","md","lg","xl","chooseBoard","skippedDeductions","highlightLiteral","DemystifyViewer","error","render","textAlign","obj","steps","prevState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13346bf8.chunk.js","sourcesContent":["import axios from \"axios\";\n\nasync function getExamples() {\n    const response = await axios.get(\"examples\");\n    return response.data;\n}\n\nasync function getExampleData(exampleName) {\n    const response = await axios.get(`examples/${exampleName}`);\n    return response.data;\n}\n\nexport { getExamples, getExampleData};\n\n","import React from 'react';\nimport { Card, Row, ListGroup, Dropdown, Alert, Spinner } from 'react-bootstrap'\nimport * as API from \"../API\";\n\n/**\n * Load a JSON input from the user's filesystem or preloaded examples.\n */\nclass FileLoader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            examples: []\n        };\n    }\n\n    componentDidMount() {\n        API.getExamples()\n        .then(res => this.setState({examples: res}, \n            () => this.setState({isLoading: false})));\n    }\n    // Read a JSON file on the user's filesystem\n    readFile = async (e) => {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n            try {\n                const text = (e.target.result)\n                this.props.setInput(JSON.parse(text));\n            } catch {\n                this.props.setError();\n            }\n        };\n        reader.readAsText(e.target.files[0])\n\n    }\n\n    async getExamples() {\n        const examples = await API.getExamples();\n        \n        try {\n            const items = examples.map(name => \n            <Dropdown.Item>\n                {name}\n            </Dropdown.Item>);\n            return items;\n        } catch {\n            return (\n            <Alert className=\"m-0\" variant=\"warning\">\n                Error fetching examples.\n            </Alert>)\n        }\n    }\n\n    async chooseExample(name) {\n        const example = await API.getExampleData(name);\n        this.props.setInput(example);\n    }\n\n    render() {\n        return (\n            <Card className=\"mt-3 pt-3\">\n                <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                        {/* Basic file selection. */}\n                        <Row className=\"d-flex justify-content-center\">\n                            <p className=\"mx-4\">  Load Demystify output from JSON file:</p>\n                            <input type=\"file\" onChange={(e) => this.readFile(e)} />\n                        </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                        <Row className=\"d-flex justify-content-center\">\n                            <p className=\"mx-4 pt-2\">Or choose a preloaded example:</p>\n                            <Dropdown onSelect={(e) => this.chooseExample(e)}>\n                                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                    Examples\n                                </Dropdown.Toggle>\n                                \n                                {/* Again, hardcoded options should be fetched from somewhere in future.*/}\n                                <Dropdown.Menu>\n                                    {this.state.isLoading ? \n                                        <div className=\"d-flex justify-content-center\">\n                                            <Spinner animation=\"border\" />\n                                        </div>\n                                        :\n                                        this.state.examples.map((name) => \n                                            <Dropdown.Item key={name} eventKey={name} onClick={() => this.chooseExample(name)}>\n                                                {name}\n                                            </Dropdown.Item>)}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Row>\n                    </ListGroup.Item>\n                </ListGroup>\n            </Card>\n        )\n    }\n}\n\nexport default FileLoader;","import React from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\n/**\n * A navigation bar to advance or deadvance steps.\n */\nclass NavSwitcher extends React.Component {\n    state = {\n        currentStep: this.props.currentStep,\n    }\n\n    // Advance\n    nextStep() {\n        const newValue = this.state.currentStep + 1;\n        if (newValue <= this.props.maxSteps) {\n            this.setState({ currentStep: newValue });\n            this.props.setCurrentStep(newValue);\n        }\n    }\n\n    // Deadvance\n    lastStep() {\n        const newValue = this.state.currentStep - 1;\n        if (newValue >= 0) {\n            this.setState({ currentStep: newValue });\n            this.props.setCurrentStep(newValue);\n        }\n    }\n\n    // Ensure current step is kept up to date.\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentStep !== this.props.currentStep) {\n            this.setState({ currentStep: this.props.currentStep });\n        }\n    }\n\n    render() {\n        return (\n            <Card className={this.props.className}>\n\n                <Form inline onSubmit={e => e.preventDefault()} className=\"d-flex justify-content-between\">\n                    <Button variant=\"primary\" onClick={this.lastStep.bind(this)}>\n                        Last {this.props.stepName}\n                    </Button>\n\n                    {/* Steps are indexed from 0 in JSON but display starting from 1 to the user. */}\n                    <Form.Group>\n                        <Form.Label className=\"w-70 mr-2\">Current {this.props.stepName}:</Form.Label>\n                        <Form.Label className=\"w-70 mr-2\">{this.state.currentStep + 1}</Form.Label>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" onClick={this.nextStep.bind(this)}>\n                        Next {this.props.stepName}\n                    </Button>\n\n                </Form>\n\n            </Card>\n        )\n    }\n}\n\nexport default NavSwitcher;","import React from 'react';\nimport { Col } from 'react-bootstrap';\n\n/**\n * A small \"possible\" value to display in the grid within each cell.\n * Style indicates in what way it is involved in the current step.\n */\nclass Literal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlighted: this.props.highlighted\n        }\n    }\n\n    // Highlight/Unhighlight this literal and corresponding explanation\n    toggleHighlight() {\n        this.setState((prev) => { return {highlighted: !prev.highlighted }});\n        this.props.highlightExplanation();\n    }\n\n    // Check whether this literal should be highlighted.\n    componentDidUpdate(prevProps) {\n        if(prevProps.highlighted !== this.props.highlighted) {\n            this.setState({highlighted: this.props.highlighted});\n        }\n    }\n\n    render() {\n        const { value, status } = this.props;\n        return <Col className=\"m-0 p-0\" style={{\n            // Styling dependent on literal status.\n            color:  (status === \"involved\") ? \"blue\" :\n                    (status === \"negative\") ? \"red\" :\n                    (status === \"positive\") ? \"green\" : \"black\",\n            textDecoration:\n                (status === \"negative\") ? \"line-through\" : \"none\",\n            fontWeight:\n                (status === \"positive\") ? \"bolder\" : \"normal\",\n            fontStyle:\n                (status === \"involved\") ? \"italic\" : \"normal\",\n            backgroundColor: this.state.highlighted ? \"cornsilk\" : null\n        }}\n            onMouseEnter={this.toggleHighlight.bind(this)} \n            onMouseLeave={this.toggleHighlight.bind(this)}\n        >{value}\n        </Col>\n    }\n\n}\n\nexport default Literal;","import React from 'react';\nimport {Col} from 'react-bootstrap';\n\n/**\n * A Square cell container, with optional extra styling.\n */\nclass SquareCol extends React.Component {\n    \n    render() {\n\n        const borders = this.props.borders ? this.props.borders :\n        {\n            border: \"2px solid lightgray\",\n            marginBottom: \"-2px\", // Deal with \"doubled\" borders.\n            marginLeft: \"-2px\"\n        }\n\n        const margin = this.props.margin ? this.props.margin : {}\n\n        return (\n            <Col className=\"m-0 p-0\" >\n                <div\n                    style={{\n                        ...borders,\n                        ...margin,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        backgroundImage: this.props.background,\n                        backgroundSize:\"100% 100%\",\n                    }}\n                >   \n                    { // Small optional number to overlay on the cell.\n                    this.props.cornerNumber && <div style={{\n                        position: \"absolute\",\n                        fontWeight: \"bolder\",\n                        color: \"white\",\n                        backgroundColor: \"#0275d8\",\n                        borderRadius: \"10px\",\n                        minWidth: \"1vw\",\n                        fontSize: \"0.8vw\",\n                        paddingRight: \"1px\",\n                        paddingLeft: \"1px\",\n                        zIndex: \"2\",\n                        ...this.props.cornerNumber.style,\n                    }}>\n                        {this.props.cornerNumber.value}\n                    </div>}\n\n                    { // Optional label between this cell and next on the right.\n                    this.props.rightLabel && <div style={{\n                        position: \"absolute\",\n                        top: \"35%\",\n                        right: \"-5%\",\n                        fontSize: \"2vw\"\n                    }}>\n                        {this.props.rightLabel}\n                    </div>}\n\n                    { // Optional label between this cell and the next below.\n                    this.props.bottomLabel && <div style={{\n                        position: \"absolute\",\n                        bottom: \"-15%\",\n                        right: \"42%\",\n                        fontSize: \"2vw\"\n                    }}>\n                        {this.props.bottomLabel}\n                    </div>}\n\n                    <div style={{\n                        ...this.props.innerBorders,\n                        padding: \"0px\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}>\n                        {this.props.children /* Main cell content */} \n                        \n                        {/*This div ensure the cell is always square\n                            CSS trick: https://stackoverflow.com/a/28985475/12309539*/}\n                        <div style={{\n                        display: \"block\",\n                        paddingBottom: \"100%\"\n                        }}></div>\n                    </div>\n                    \n                    \n                </div>\n            </Col >\n        )\n    }\n}\n\nexport default SquareCol;","import React from 'react';\nimport {Row} from 'react-bootstrap';\n\n/**\n * Saves typing out the bootstrap class name multiple times.\n */\nclass SquareRow extends React.Component {\n    render() {\n        return (\n            <Row \n                style={this.props.style}\n                className=\"p-0 m-0 d-flex flex-direction-row align-items-center justify-content-center\">\n                {this.props.children}\n            </Row>\n        );\n    }\n}\n\nexport default SquareRow;","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Literal from './Literal';\nimport SquareCol from './SquareCol';\nimport SquareRow from './SquareRow';\n\n/**\n * Cell component, where a cell is itself a grid of possible values.\n * (1 x 1) grid if the value becomes or is known.\n */\nclass Cell extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlighted: this.props.highlighted,\n        }\n    }\n\n    // Whether the cell grid is 1x1 i.e. the value is known.\n    isSingleton() {\n        const cellRows = this.props.cellContent.cellRows;\n\n        return cellRows.length === 1 &&\n                cellRows[0].cellValues.length === 1\n    }\n\n    // Get the first value of the cell grid.\n    getSingletonValue() {\n        const cellRows = this.props.cellContent.cellRows;\n        return cellRows[0].cellValues[0].value\n    }\n\n    // Check whether the cell should be highlighted\n    componentDidUpdate(prevProps) {\n        if (prevProps.highlighted !== this.props.highlighted) {\n            this.setState({ highlighted: this.props.highlighted });\n        }\n    }\n\n    // Call the parent highlight function\n    highlight(exp) {\n        this.props.highlight(exp);\n    }\n\n    /* Choose the cell background, either by reading a mapping for a singleton,\n        or taking the indexed cellBackground. */\n    chooseBackground() {\n        const { literalBackgrounds, cellBackground } = this.props;\n        const isSingleton = this.isSingleton();\n        const singletonValue = this.getSingletonValue();\n\n        if (literalBackgrounds && isSingleton) {\n            return literalBackgrounds[singletonValue.toString()]\n        } else if (cellBackground) {\n            return cellBackground;\n        } else {\n            return null;\n        }\n    }\n\n    /* Known cells should be 3 times larger. */\n    getFontSize(scale) {\n        const { literalSize } = this.props;\n        if (literalSize) {\n            console.log((literalSize * scale).toString() + \"vw\")\n            return (literalSize * scale).toString() + \"vw\"\n        } else {\n            return scale.toString() + \"vw\"\n        }\n    }\n\n    /* Check if a singleton value should be hidden */\n    isHidden(value) {\n        const { hiddenLiterals } = this.props;\n        return hiddenLiterals && hiddenLiterals.includes(value);\n    }\n\n    render() {\n        const {\n            cellContent,\n            cellBorders,\n            cellInnerBorders,\n            cellMargin,\n            cornerNumber,\n            rightLabel,\n            bottomLabel,\n            literalSize } = this.props;\n\n        const {highlighted} = this.state;\n\n        const isSingleton = this.isSingleton();\n        const singletonValue = this.getSingletonValue();\n\n        return (\n            <SquareCol\n                background={this.chooseBackground()}\n                borders={cellBorders}\n                innerBorders={cellInnerBorders}\n                margin={cellMargin}\n                size={literalSize}\n                cornerNumber={cornerNumber}\n                rightLabel={rightLabel}\n                bottomLabel={bottomLabel}>\n\n                {isSingleton ?\n                    // Display a single value if it is known and not hidden.\n                    (\n                        (!this.isHidden(singletonValue)) &&\n                        <h1 style={{ fontSize: this.getFontSize(2) }}>\n                            {singletonValue}\n                        </h1>\n                    ) :\n                    // Otherwise display a grid of possibilities\n                    <Container fluid className=\"p-0 align-items-center\">\n                        {cellContent.cellRows.map((row, i) =>\n                            <SquareRow key={i} style={{ fontSize: this.getFontSize(1) }}>\n                                {row.cellValues.map((literal, i) =>\n                                    // Possibilities are positive/negative literals.\n                                    <Literal\n                                        key={i}\n                                        value={literal.value}\n                                        status={literal.status} // positive / negative\n                                        highlighted={literal.explanations.includes(highlighted.toString())}\n                                        highlightExplanation={() => this.highlight(literal.explanations)}\n                                    />\n                                )}\n                            </SquareRow>\n                        )}\n                    </Container>\n                }\n            </SquareCol>\n        )\n    }\n}\n\nexport default Cell;","import React from 'react';\nimport { Card, Container, Col } from 'react-bootstrap'\nimport Cell from './Cell';\nimport SquareCol from './SquareCol';\nimport SquareRow from './SquareRow';\n\n/**\n * Generic puzzle board component. \n */\nclass Board extends React.Component {\n\n    // Return item at index, if the array prop is defined. \n    getIndex(arr, row, column) {\n        return arr ? arr[row][column] : null;\n    }\n\n    render() {\n        const {\n            // Required Props \n            highlighted, \n            highlight,\n            rows,\n\n            //Optional Props, for custom styling (see README)\n            literalBackgrounds,\n            cellBorders,\n            cellInnerBorders,\n            cellBackgrounds,\n            cellMargin,\n            literalSize,\n            cornerNumbers,\n            rightLabels,\n            bottomLabels,\n            hiddenLiterals,\n            rowsums,\n            endrowsums,\n            colsums,\n            endcolsums\n            \n        } = this.props;\n        \n        return (\n            <Card className=\"mt-3 p-5\">\n                <Container fluid style={{minWidth: \"400px\", padding: \"0px\"}}>\n                    {/*'Thin' row to display column indices.*/}\n                    <SquareRow>\n                        <Col xs={1} className=\"m-0 p-0\" />\n                        {rowsums && <Col className=\"m-0 p-0\" /> /* small corner cell*/}\n                        {rows[0].cells.map((cell, i) =>\n                            <Col key={i} className=\"m-0 p-0\">\n                                <small className=\"text-muted\">{i + 1}</small>\n                            </Col>)}\n                        {endrowsums && <Col className=\"m-0 p-0\" /> /* small corner cell*/}\n                    </SquareRow>\n\n                    {colsums &&\n                        // Extra row for column sums if necessary.\n                        <SquareRow>\n                            <Col xs={1} className=\"m-0 p-0\" />\n                            <SquareCol />\n                            {colsums.map((sum, j) =>\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"3vw\", color: \"gray\" }}>\n                                        {sum}\n                                    </h3>\n                                </SquareCol>)}\n                            {endrowsums && <SquareCol />}\n                        </SquareRow>}\n\n                    {rows.map((row, i) =>\n                        <SquareRow key={i}>\n                            {/* 'Thin' column for column indices */}\n                            <Col xs={1} key={i} className=\"m-0 p-0\">\n                                <small className=\"text-muted\">{i + 1}</small>\n                            </Col>\n\n                            {rowsums &&\n                                // Extra column for row sums if ncessary.\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"3vw\", color: \"gray\" }}>\n                                        {rowsums[i]}\n                                    </h3>\n                                </SquareCol>}\n                            {row.cells.map((cell, j) =>\n                                    // Main rows of puzzle\n                                    <Cell\n                                        cellContent={cell} \n                                        row={i} \n                                        column={j} \n\n                                        // Whether this cell is currently highlighted\n                                        highlighted={highlighted} \n                                        \n                                        /* Function to highlight explanation when this cell\n                                            is moused over */\n                                        highlight={highlight}\n                                        \n                                        // Styling \n                                        cellBorders={this.getIndex(cellBorders, i, j)}\n                                        cellInnerBorders={this.getIndex(cellInnerBorders, i, j)}\n                                        cellBackground={this.getIndex(cellBackgrounds, i, j)}\n                                        cornerNumber={this.getIndex(cornerNumbers, i, j)}\n                                        rightLabel={this.getIndex(rightLabels, i, j)}\n                                        bottomLabel={this.getIndex(bottomLabels, i, j)}\n                                        cellMargin={cellMargin}\n                                        literalBackgrounds={literalBackgrounds}\n                                        literalSize={literalSize}\n                                        hiddenLiterals={hiddenLiterals}\n                                        />      \n                                )}\n                            {endrowsums &&\n                                // Extra column for end row sums if ncessary.\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"3vw\", color: \"gray\" }}>\n                                        {endrowsums[i]}\n                                    </h3>\n                                </SquareCol>}\n                        </SquareRow>)}\n\n                        {endcolsums &&\n                        // Extra row for end column sums if necessary.\n                        <SquareRow>\n                            <Col xs={1} className=\"m-0 p-0\" />\n                            <SquareCol />\n                            {endcolsums.map((sum, j) =>\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"3vw\", color: \"gray\" }}>\n                                        {sum}\n                                    </h3>\n                                </SquareCol>)}\n                            {endrowsums && <SquareCol />}\n                        </SquareRow>}\n                </Container>\n            </Card>\n        )\n    }\n}\n\nexport default Board;","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\n/**\n * A single explanation/reason that can be highlighted on mouse over.\n */\nclass Explanation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlighted: this.props.highlighted\n        }\n    }\n\n    highlight() {\n        this.setState({highlighted: true});\n        this.props.highlight();\n    }\n\n    deHighlight() { //...unhighlight? dishighlight?\n        this.setState({highlighted: false});\n        this.props.highlight();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.highlighted !== this.props.highlighted) { \n            this.setState({highlighted: this.props.highlighted});\n        }\n    }\n\n    render() {\n        const itemStyle =\n            this.state.highlighted ?\n                { backgroundColor: \"cornsilk\" } : null\n                \n        const {decision, reason, index} = this.props\n\n        return <ListGroup.Item\n            style={itemStyle}\n            key={index}\n            onMouseEnter={this.highlight.bind(this)}\n            onMouseLeave={this.deHighlight.bind(this)}>\n            {decision}\n            <br />\n            {reason}\n        </ListGroup.Item>\n    }\n}\n\nexport default Explanation;","import React from 'react';\nimport { Accordion, Card, Button, ListGroup } from 'react-bootstrap';\nimport NavSwitcher from '../NavSwitcher';\nimport Explanation from './Explanation';\n\n/**\n * A sidebar that displays the deductions made on a given step, along with the explanations for that deduction.\n */\nclass ExplanationList extends React.Component {\n\n    render() {\n        const { simpleDeductions, deductions, otherChoices, smallestMUSSize} = this.props;\n        return (\n            <React.Fragment>\n                <Card className=\"mt-3\" >\n\n                    { /*For simple deductions (just one reason), display a collapsible list */\n                        simpleDeductions ?\n                        <Accordion defaultActiveKey=\"1\">\n                            <Card.Header>\n                                <h5>Made {simpleDeductions.length} simple deductions.</h5>\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                    Show/Hide\n                            </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"0\">\n                                <ListGroup style={{ maxHeight: \"60vh\", overflowY: \"scroll\" }}>\n                                    {\n                                        simpleDeductions.map((deduction, i) => {\n\n                                            return <Explanation\n                                                highlighted={this.props.highlighted.includes(i.toString())}\n                                                decision={deduction.decision}\n                                                reason={deduction.reason}\n                                                index={i}\n                                                key={i}\n                                                highlight={() => this.props.highlight(i)} />\n                                        })\n                                    }\n                                </ListGroup>\n                            </Accordion.Collapse>\n                        </Accordion>\n                        : deductions &&\n                        /* Otherwise we have an \"interesting\" deductions, \n                            so display the deductions with a list of reasons */\n                        <React.Fragment>\n                            <Card.Header>\n                                <h5>Made the following deduction:</h5>\n\n                            </Card.Header>\n                            <Card.Body>\n                                <div className=\"mb-3\">\n                                    <b >{deductions.decision}</b>\n                                </div>\n\n                                <ListGroup style={{ maxHeight: \"75vh\", overflowY: \"scroll\" }}>\n                                    {deductions.reason.map((reason, i) =>\n                                        <Explanation\n                                            highlighted={this.props.highlighted.includes(i.toString())}\n                                            reason={reason}\n                                            index={i}\n                                            key={i}\n                                            highlight={() => this.props.highlight(i)} />)}\n                                </ListGroup>\n                            </Card.Body>\n                        </React.Fragment>\n                    }\n                </Card>\n\n                {/*If there are other choices, display a NavSwitcher to step through the alternatives */\n                otherChoices && \n                    <Card className=\"mt-3\">\n                    <Card.Header>\n                        <b>Found {otherChoices.length + 1} choices in total for this step:</b>\n                    </Card.Header>\n                    <Card.Body>\n                        <div className=\"mb-3\">\n                            See the alternative deductions with MUS size {smallestMUSSize}:\n                            \n                        </div>\n                        <NavSwitcher \n                            stepName={\"Alt\"} \n                            className=\"p-3\" \n                            setCurrentStep={this.props.setAlternative} \n                            maxSteps={otherChoices.length}\n                            currentStep={this.props.currentAlternative}\n                            />\n                        <div>\n                            <small className=\"text-muted\">\n                                (Note: different MUSs may result in deductions that look identical)\n                            </small>\n                        </div>\n\n                    </Card.Body>\n\n                </Card>}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ExplanationList;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass TentsBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: this.props.params.x,\n            y: this.props.params.y,\n            colsums: this.props.params.colsums,\n            rowsums: this.props.params.rowsums,\n            treecount: this.props.params.treecount\n        }\n    }\n\n    getBackgrounds() {\n        let backgrounds = {};\n\n        for(let i = 1; i <= this.state.treecount; i++) {\n            backgrounds[\"-\" + i.toString()] = \"url(/images/tree.png)\"\n            backgrounds[i.toString()] = \"url(/images/tent.png)\"\n        }\n        \n        return backgrounds;\n    }\n\n    \n\n    getCellBorders() {\n        let borders = []\n\n        for(let i = 0; i < this.state.x; i++) {\n            borders[i] = []\n            for(let j = 0; j < this.state.y; j++) {\n                borders[i].push(\n                    {\n                        borderTop: i===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===this.state.x - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===this.state.y - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n    \n\n    render() {\n        console.log(\"here\")\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                literalBackgrounds={this.getBackgrounds()}\n                cellBorders={this.getCellBorders()}\n                />)\n    }\n}\n\nexport default TentsBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass BinairoBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                />)\n    }\n}\n\nexport default BinairoBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass KillerBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: this.props.params.grid,\n            hints: this.props.params.hints\n        }\n    }\n\n    getCellBorders() {\n        let borders = []\n\n        for(let i = 0; i < 9; i++) {\n            borders[i] = []\n            for(let j = 0; j < 9; j++) {\n                borders[i].push(\n                    {\n                        borderTop: i%3===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===8 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j%3===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===8 ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    getCellInnerBorders() {\n        let borders = []\n        const {grid} = this.state;\n        for(let i = 0; i < 9; i++) {\n            borders[i] = []\n            for(let j = 0; j < 9; j++) {\n                borders[i].push(\n                    {\n                        borderTop: \n                            i===0 || grid[i-1][j] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        borderBottom: i===8 || grid[i+1][j] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        borderLeft: j===0 || grid[i][j-1] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        borderRight: j===8 || grid[i][j+1] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        margin: \"3px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    getCornerNumbers() {\n        let cornerNumbers = []\n        const {hints, grid} = this.state;\n        let currentHint = 0;\n\n        for(let i = 0; i < 9; i++) {\n            cornerNumbers[i] = []\n            for(let j = 0; j < 9; j++) {\n                if(grid[i][j] === currentHint + 1) {\n                    cornerNumbers[i].push({value: hints[currentHint], style: {top: \"0%\", left: \"0%\"}})\n                    currentHint++\n                } else \n                    cornerNumbers[i].push({value: null, style: {top: \"0%\", left: \"0%\"}})\n            }\n        }\n\n        console.log(cornerNumbers)\n        return cornerNumbers\n    }\n    \n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                cellBorders={this.getCellBorders()}\n                cellInnerBorders={this.getCellInnerBorders()}\n                literalSize={0.7}\n                cornerNumbers={this.getCornerNumbers()}\n                />)\n    }\n}\n\nexport default KillerBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass KakuroBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: this.props.params.x_max,\n            y: this.props.params.y_max,\n            rowsums: this.props.params.horzsums,\n            colsums: this.props.params.vertsums,\n            blanks: this.props.params.blanks\n        }\n    }\n\n    getDiagonalGradient(bottomColor, topColor) {\n        return `linear-gradient(to bottom left, ${bottomColor}, ${bottomColor} 49%, lightgray 49%, lightgray 51%, ${topColor} 51%, ${topColor})`\n    }\n   \n    getBackgrounds() {\n        const {rowsums, colsums, blanks} = this.state;\n        let backgrounds = []\n        for(let i = 0; i < this.state.x; i++) {\n            backgrounds[i] = []\n            for(let j = 0; j < this.state.y; j++) {\n                if(rowsums[i][j]!==0) {\n                    if(colsums[i][j]!==0) {\n                        backgrounds[i].push(this.getDiagonalGradient(\"white\", \"white\"))\n                    } else {\n                        backgrounds[i].push(this.getDiagonalGradient(\"white\", \"lightblue\"))\n                    }\n                } else {\n                    if(colsums[i][j]!==0) {\n                        backgrounds[i].push(this.getDiagonalGradient(\"lightblue\", \"white\"))\n                    } else {\n                        if(blanks[i][j]===0) {\n                            backgrounds[i].push(\"linear-gradient(lightblue, lightblue)\")\n                        } else {\n                            backgrounds[i].push(\"none\")\n                        }\n                    }\n\n                }\n                \n            }\n        }\n        /*return borders;\n            {\"0\": \"linear-gradient(to bottom left, white, white 49%, lightgray 49%, lightgray 51%, lightblue 51%, lightblue)\"}*/\n        \n\n        return backgrounds;\n    }\n\n    getCornerNumbers() {\n        let cornerNumbers = []\n        const {rowsums, colsums, x, y} = this.state;\n        const extraStyle = {\n            fontWeight: \"bolder\",\n            color: \"gray\",\n            backgroundColor: \"none\",\n            fontSize: \"1.4vw\"}\n\n        for(let i = 0; i < x; i++) {\n            cornerNumbers[i] = []\n            for(let j = 0; j < y; j++) {\n                if(rowsums[i][j] !== 0) {\n                    cornerNumbers[i].push({value: rowsums[i][j], style: {top: \"20%\", right: \"20%\", ...extraStyle}})\n                } else if(i > 0 && colsums[i-1][j] !== 0) {\n                    cornerNumbers[i].push({value: colsums[i-1][j], style: {top: \"-30%\", left: \"20%\", ...extraStyle}})\n                } else \n                    cornerNumbers[i].push({value: null,  style: {top: \"-30%\", left: \"20%\", ...extraStyle}})\n\n            \n            }\n        }\n\n        console.log(cornerNumbers)\n        return cornerNumbers\n    }\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                cellBackgrounds={this.getBackgrounds()}\n                cornerNumbers={this.getCornerNumbers()}\n                hiddenLiterals={[0]}\n                />)\n    }\n}\n\nexport default KakuroBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass KakuroBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: this.props.params.blocks,\n            gridSize: this.props.params.grid,\n        }\n    }\n\n    getCellBorders() {\n        let borders = []\n        const {grid, gridSize} = this.state;\n        for(let i = 0; i < gridSize; i++) {\n            borders[i] = []\n            for(let j = 0; j < gridSize; j++) {\n                borders[i].push(\n                    {\n                        borderTop: \n                            i===0 || grid[i-1][j] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===gridSize - 1 || grid[i+1][j] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j===0 || grid[i][j-1] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===gridSize - 1 || grid[i][j+1] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\"\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    getBackgrounds() {\n        let backgrounds = {\"1\": \"url(/images/star.png)\"}\n        \n        return backgrounds;\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                cellBorders={this.getCellBorders()}\n                literalBackgrounds={this.getBackgrounds()}\n                />)\n    }\n}\n\nexport default KakuroBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass FutoshikiBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lessThans: this.props.params.lt,\n            size: this.props.params.SIZE\n        }\n    }\n\n    getRightLabels() {\n        let rightLabels = []\n        const {size, lessThans} = this.state;\n        for(let i = 0; i < size; i++) {\n            rightLabels[i] = []\n            for(let j = 0; j < size; j++) {\n                rightLabels[i].push(\n                   null\n                )\n            }\n        }\n\n        for(let lessThan of lessThans) {\n            const i1 = lessThan[0];\n            const i2 = lessThan[1];\n            const j1 = lessThan[2];\n            const j2 = lessThan[3];\n\n            if(i1===j1) {\n                if(i2 < j2) {\n                    rightLabels[i1-1][i2-1] = \"<\"\n                } else {\n                    rightLabels[j1-1][j2-1] = \">\"\n                }\n            }\n        }\n        console.log(rightLabels);\n        return rightLabels;\n    }\n\n    getBottomLabels() {\n        let bottomLabels = []\n        const {size, lessThans} = this.state;\n        for(let i = 0; i < size; i++) {\n            bottomLabels[i] = []\n            for(let j = 0; j < size; j++) {\n                bottomLabels[i].push(\n                   null\n                )\n            }\n        }\n\n        for(let lessThan of lessThans) {\n            const i1 = lessThan[0];\n            const i2 = lessThan[1];\n            const j1 = lessThan[2];\n            const j2 = lessThan[3];\n\n            if(i2===j2) {\n                if(i1 < j1) {\n                    bottomLabels[i1-1][i2-1] = \"\\u2227\"\n                } else {\n                    bottomLabels[j1-1][j2-1] = \"\\u2228\"\n                }\n            }\n        }\n\n        return bottomLabels;\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                cellMargin={{margin: \"20px\"}}\n                rightLabels={this.getRightLabels()}\n                bottomLabels={this.getBottomLabels()}\n                />)\n    }\n}\n\nexport default FutoshikiBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass ThermometerBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colsums: this.props.params.colsums,\n            rowsums: this.props.params.rowsums,\n            grid: this.props.params.therms\n        }\n    }\n\n    getBackgrounds() {\n        const {grid} = this.state;\n        let backgrounds = []\n        const xsize = this.state.grid.length;\n        const ysize = this.state.grid[0].length;\n        for(let i = 0; i < xsize; i++) {\n            backgrounds[i] = []\n            for(let j = 0; j < ysize; j++) {\n                const thermNum = Math.floor(grid[i][j] / 10)\n                const north = i > 0 ? Math.floor(grid[i-1][j] / 10) : null\n                const south = i < xsize - 1 ? Math.floor(grid[i+1][j] / 10) : null\n                const west = j > 0 ? Math.floor(grid[i][j-1] / 10) : null\n                const east = j < ysize - 1 ? Math.floor(grid[i][j+1] / 10) : null\n\n                if(grid[i][j] % 10 == 1) {\n                    console.log(thermNum)\n                    if(north === thermNum) {\n                        backgrounds[i].push(\"url(/images/themHeadN.png\")\n                    } else if(west === thermNum) {\n                        backgrounds[i].push(\"url(/images/themHeadW.png\")\n                    } else if(east === thermNum) {\n                        backgrounds[i].push(\"url(/images/themHeadE.png\")\n                    } else if(south === thermNum) {\n                        backgrounds[i].push(\"url(/images/themHeadS.png\")\n                    }\n                } else {\n                    if(north === thermNum && south !== thermNum) {\n                        backgrounds[i].push(\"url(/images/themTipS.png\")    \n                    } else if(south === thermNum && north !== thermNum) {\n                        backgrounds[i].push(\"url(/images/themTipN.png\")\n                    } else if(north === thermNum && south === thermNum) {\n                        backgrounds[i].push(\"url(/images/themV.png\")\n                    } else if(east === thermNum && west !== thermNum) {\n                        backgrounds[i].push(\"url(/images/themTipW.png\")    \n                    } else if(west === thermNum && east !== thermNum) {\n                        backgrounds[i].push(\"url(/images/themTipE.png\")\n                    } else if(east === thermNum && west === thermNum) {\n                        backgrounds[i].push(\"url(/images/themH.png\")\n                    }\n                }\n                \n            }\n        }\n        console.log(backgrounds);\n        return backgrounds;\n    }\n\n    getCellBorders() {\n        let borders = []\n\n        for(let i = 0; i < 9; i++) {\n            borders[i] = []\n            for(let j = 0; j < 9; j++) {\n                borders[i].push(\n                    {\n                        borderTop: i===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===this.state.x - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===this.state.y - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                cellBackgrounds={this.getBackgrounds()}\n                highlighted={this.props.highlighted} \n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                rows={this.props.rows}\n                cellBorders={this.getCellBorders()}\n                />)\n    }\n}\n\nexport default ThermometerBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass SkyscrapersBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            size: this.props.params.SIZE,\n            rowsums: this.props.params.CLUES[0].map(num => num === 0 ? null : num),\n            colsums: this.props.params.CLUES[1].map(num => num === 0 ? null : num),\n            endrowsums: this.props.params.CLUES[2].map(num => num === 0 ? null : num),\n            endcolsums: this.props.params.CLUES[3].map(num => num === 0 ? null : num),\n        }\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                colsums={this.state.colsums}\n                endcolsums={this.state.endcolsums}\n                rowsums={this.state.rowsums}\n                endrowsums={this.state.endrowsums}\n                \n                />)\n    }\n}\n\nexport default SkyscrapersBoard;","import React from 'react';\nimport NavSwitcher from './NavSwitcher';\nimport Board from './Board/Board';\nimport ExplanationList from \"./Explanations/ExplanationList\";\n\nimport { Row, Col, Card } from 'react-bootstrap';\n\nimport TentsBoard from './PuzzleBoards/TentsBoard';\nimport BinairoBoard from './PuzzleBoards/BinairoBoard';\nimport KillerBoard from './PuzzleBoards/KillerBoard';\nimport KakuroBoard from './PuzzleBoards/KakuroBoard';\nimport StarBattleBoard from './PuzzleBoards/StarBattleBoard';\nimport FutoshikiBoard from './PuzzleBoards/FutoshikiBoard';\nimport ThermometerBoard from './PuzzleBoards/ThermometerBoard';\nimport SkyscrapersBoard from './PuzzleBoards/SkyscrapersBoard';\n\n/**\n * Main puzzle visualiser with a board on the left and explanations on the right.\n */\nclass PuzzleStepper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentStep: 0,\n            highlightedLiterals: -1,\n            highlightedExplanations: [],\n            currentAlternative: 0,\n            type: this.props.type,\n            params: this.props.params,\n            inputObject: this.props.inputObject\n        }\n    }\n\n    /* Two-way highlighting system: mouseover an explanation and see relevant literals,\n        mouseover a literals to see relevant explanations. \n    */\n    highlightLiteral(val) {\n        this.setState((prev) => { return { highlightedLiterals: prev.highlightedLiterals === val ? -1 : val } });\n    }\n\n    highlightExplanation(val) {\n        this.setState((prev) => \n            { return { \n                highlightedExplanations:\n                    JSON.stringify(prev.highlightedExplanations)===JSON.stringify(val) ? \n                        [] : val } });\n    }\n\n    // Passed to the NavSwitcher for overall steps\n    setCurrentStep(step) {\n        this.setState({ currentStep: step, currentAlternative: 0});\n    }\n\n    // Passed to the NavSwitcher for switching between alternatives.\n    setAlternative(number) {\n        this.setState({currentAlternative: number})\n    }\n\n    // Choose a board if we have defined one for this puzzle type.\n    chooseBoard(boardProps) {\n        switch(this.state.type) {\n            case \"tents.eprime\":\n                return <TentsBoard {...boardProps}/>\n            case \"binairo.eprime\":\n                return <BinairoBoard {...boardProps}/>\n            case \"nice_killer.eprime\":\n                return <KillerBoard {...boardProps}/>\n            case \"star-battle.eprime\":\n                return <StarBattleBoard {...boardProps}/>\n            case \"kakuro.eprime\":\n                return <KakuroBoard {...boardProps}/>\n            case \"nfutoshiki.eprime\":\n                return <FutoshikiBoard {...boardProps}/>\n            case \"thermometer.eprime\":\n                return <ThermometerBoard {...boardProps}/>\n            case \"skyscrapers.eprime\":\n                return <SkyscrapersBoard {...boardProps}/>\n            default:\n                return <Board {...boardProps}/>\n        }\n    }\n    render() {\n        const stepData = this.state.currentAlternative=== 0 ?\n            this.state.inputObject[this.state.currentStep]\n            : this.state.inputObject[this.state.currentStep].otherChoices[this.state.currentAlternative - 1]\n\n        // Core required board props. \n        const boardProps = {\n            params: this.state.params,\n            highlight: this.highlightExplanation.bind(this),\n            key: this.state.highlightedLiterals,\n            highlighted: this.state.highlightedLiterals, \n            rows: stepData.puzzleState.matrices[0].rows\n        }\n        return (\n            <React.Fragment>\n                <NavSwitcher \n                    className=\"mt-3 p-3\" \n                    stepName={\"step\"} \n                    setCurrentStep={this.setCurrentStep.bind(this)} \n                    maxSteps={this.state.inputObject.length - 1} \n                    currentStep={this.state.currentStep}/>\n\n                <Row className=\"mb-4\">\n                    {/*The main board: adjust width based on screen size */}\n                    <Col xs={12} md={8} lg={8} xl={6}>\n                        {this.chooseBoard(boardProps)} \n                    </Col>\n\n                    {/*The explanations*/}\n                    <Col>\n                        {stepData.skippedDeductions &&\n                            <Card className=\"mt-3\">\n                                <Card.Body>\n                                    <small>Skipped some obvious deductions.</small>\n                                </Card.Body>\n                            </Card>\n                        }\n\n                        <ExplanationList\n                            highlight={this.highlightLiteral.bind(this)}\n\n                            /* Only one of simpleDeductions or deductions should be defined. */\n                            simpleDeductions={stepData.simpleDeductions}\n                            deductions={stepData.deductions}\n\n                            highlighted={this.state.highlightedExplanations} \n\n                            /* Props for displaying alternatives */\n                            otherChoices={this.state.inputObject[this.state.currentStep].otherChoices}\n                            smallestMUSSize={this.state.inputObject[this.state.currentStep].smallestMUSSize}\n                            setAlternative={this.setAlternative.bind(this)}\n                            currentAlternative={this.state.currentAlternative}\n                            />\n                        \n                        \n                    </Col>\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PuzzleStepper;","import React from 'react';\n\nimport FileLoader from './FileLoader';\n\nimport { Container, Alert } from 'react-bootstrap';\nimport PuzzleStepper from './PuzzleStepper';\n\n/**\n * Currently the main content component for this application.\n */\nclass DemystifyViewer extends React.Component {\n  state = {\n    inputObject: [],\n    type: \"\",\n    params: {},\n    error: false,\n  }\n  \n  // Load the steps, the type of puzzle, and the params (configuration) of the puzzle\n  setInput(obj) {\n    this.setState({ inputObject: obj.steps, type: obj.name, params: obj.params },\n      () => !(this.state.inputObject && this.state.type && this.state.params)  \n      && this.setError()) \n  }\n\n  // Avoid invalid JSON\n  setError() {\n    this.setState({error: true});\n  }\n\n  conponentDidUpdate(prevProps, prevState) {\n    if(prevState.error) this.setState({error: false});\n  }\n\n  render = () => {\n    return (\n      <Container fluid style={{textAlign: \"center\"}}>\n        \n        {/*If the puzzle has not been correctly loaded, display the initial screen*/\n          (this.state.inputObject.length === 0 || this.state.error) ?\n          <React.Fragment>\n            <h1 className=\"mt-3\">Demystify Visualiser</h1>\n            \n            <FileLoader setInput={this.setInput.bind(this)} setError={this.setError.bind(this)} />\n            \n            {this.state.error && \n              <Alert variant=\"warning\" className=\"mt-3 p-4 text-center\">\n                Could not read the input file (ensure it is a JSON file produced by Demystify).\n              </Alert> }\n          </React.Fragment>\n          \n          :\n          /*Otherwise display the main puzzle visualiser*/\n          <PuzzleStepper\n            inputObject={this.state.inputObject}\n            type={this.state.type}\n            params={this.state.params} />\n        }\n      </Container>\n    )\n  }\n}\n\nexport default DemystifyViewer\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport DemystifyViewer from './components/DemystifyViewer';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DemystifyViewer/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}