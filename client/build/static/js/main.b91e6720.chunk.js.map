{"version":3,"sources":["components/NavSwitcher.jsx","components/Board/Literal.jsx","components/Board/SquareCol.jsx","components/Board/SquareRow.jsx","components/Board/Cell.jsx","components/Board/Board.jsx","components/Explanations/Explanation.jsx","components/Explanations/ExplanationList.jsx","components/PuzzleBoards/TentsBoard.jsx","components/PuzzleBoards/BinairoBoard.jsx","components/PuzzleBoards/KillerBoard.jsx","components/PuzzleBoards/KakuroBoard.jsx","components/PuzzleBoards/StarBattleBoard.jsx","components/PuzzleBoards/FutoshikiBoard.jsx","components/PuzzleBoards/ThermometerBoard.jsx","components/PuzzleBoards/SkyscrapersBoard.jsx","components/PuzzleStepper.jsx","API.js","components/FileUploader.jsx","components/MainMenu.jsx","components/DemystifyViewer.jsx","reportWebVitals.js","index.js"],"names":["NavSwitcher","state","currentStep","props","newValue","this","maxSteps","setState","setCurrentStep","prevProps","Card","className","Form","inline","onSubmit","e","preventDefault","Button","variant","onClick","lastStep","bind","stepName","Group","Label","nextStep","React","Component","Literal","highlighted","prev","highlightExplanation","value","status","Col","style","color","textDecoration","fontWeight","fontStyle","backgroundColor","onMouseEnter","toggleHighlight","onMouseLeave","SquareCol","borders","border","marginBottom","marginLeft","margin","display","justifyContent","alignItems","backgroundImage","background","backgroundSize","cornerNumber","position","borderRadius","minWidth","fontSize","paddingRight","paddingLeft","zIndex","rightLabel","top","right","bottomLabel","bottom","innerBorders","padding","width","children","paddingBottom","SquareRow","Row","Cell","cellRows","cellContent","length","cellValues","exp","highlight","literalBackgrounds","cellBackground","isSingleton","singletonValue","getSingletonValue","toString","scale","literalSize","console","log","hiddenLiterals","includes","cellBorders","cellInnerBorders","cellMargin","chooseBackground","size","isHidden","getFontSize","Container","fluid","map","row","i","literal","explanations","Board","arr","column","rows","cellBackgrounds","cornerNumbers","rightLabels","bottomLabels","rowsums","endrowsums","colsums","endcolsums","xs","cells","cell","sum","j","getIndex","Explanation","itemStyle","decision","reason","index","ListGroup","Item","deHighlight","ExplanationList","simpleDeductions","deductions","otherChoices","smallestMUSSize","Fragment","Accordion","defaultActiveKey","Header","Toggle","as","eventKey","Collapse","maxHeight","overflowY","deduction","Body","setAlternative","currentAlternative","TentsBoard","x","params","y","treecount","backgrounds","push","borderTop","borderBottom","borderLeft","borderRight","getBackgrounds","getCellBorders","key","BinairoBoard","KillerBoard","grid","hints","currentHint","left","getCellInnerBorders","getCornerNumbers","KakuroBoard","x_max","y_max","horzsums","vertsums","blanks","bottomColor","topColor","getDiagonalGradient","extraStyle","blocks","gridSize","FutoshikiBoard","lessThans","lt","SIZE","lessThan","i1","i2","j1","j2","getRightLabels","getBottomLabels","ThermometerBoard","therms","xsize","ysize","thermNum","Math","floor","north","south","west","east","SkyscrapersBoard","CLUES","num","PuzzleStepper","highlightedLiterals","highlightedExplanations","type","inputObject","val","JSON","stringify","step","number","boardProps","StarBattleBoard","stepData","puzzleState","matrices","md","lg","xl","chooseBoard","skippedDeductions","highlightLiteral","getExamples","a","axios","get","response","data","getExampleData","exampleName","runDemystifyOnInput","eprimename","eprime","paramname","param","post","FileUploader","uploadFile","reader","FileReader","onload","text","target","result","onUpload","fileInput","current","files","name","onError","readAsText","createRef","disabled","ref","onChange","MainMenu","componentDidUpdate","isRunning","window","onbeforeunload","undefined","isLoadingExamples","examples","error","API","then","res","setError","setInput","message","items","Dropdown","Alert","example","src","parse","onSelect","chooseExample","id","Menu","Spinner","animation","handleGo","DemystifyViewer","render","textAlign","setJSONInput","obj","steps","prevState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b91e6720.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\n/**\n * A navigation bar to advance or deadvance steps.\n */\nclass NavSwitcher extends React.Component {\n    state = {\n        currentStep: this.props.currentStep,\n    }\n\n    // Advance\n    nextStep() {\n        const newValue = this.state.currentStep + 1;\n        if (newValue <= this.props.maxSteps) {\n            this.setState({ currentStep: newValue });\n            this.props.setCurrentStep(newValue);\n        }\n    }\n\n    // Deadvance\n    lastStep() {\n        const newValue = this.state.currentStep - 1;\n        if (newValue >= 0) {\n            this.setState({ currentStep: newValue });\n            this.props.setCurrentStep(newValue);\n        }\n    }\n\n    // Ensure current step is kept up to date.\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentStep !== this.props.currentStep) {\n            this.setState({ currentStep: this.props.currentStep });\n        }\n    }\n\n    render() {\n        return (\n            <Card className={this.props.className}>\n\n                <Form inline onSubmit={e => e.preventDefault()} className=\"d-flex justify-content-between\">\n                    <Button variant=\"primary\" onClick={this.lastStep.bind(this)}>\n                        Last {this.props.stepName}\n                    </Button>\n\n                    {/* Steps are indexed from 0 in JSON but display starting from 1 to the user. */}\n                    <Form.Group>\n                        <Form.Label className=\"w-70 mr-2\">Current {this.props.stepName}:</Form.Label>\n                        <Form.Label className=\"w-70 mr-2\">{this.state.currentStep + 1}</Form.Label>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" onClick={this.nextStep.bind(this)}>\n                        Next {this.props.stepName}\n                    </Button>\n\n                </Form>\n\n            </Card>\n        )\n    }\n}\n\nexport default NavSwitcher;","import React from 'react';\nimport { Col } from 'react-bootstrap';\n\n/**\n * A small \"possible\" value to display in the grid within each cell.\n * Style indicates in what way it is involved in the current step.\n */\nclass Literal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlighted: this.props.highlighted\n        }\n    }\n\n    // Highlight/Unhighlight this literal and corresponding explanation\n    toggleHighlight() {\n        this.setState((prev) => { return {highlighted: !prev.highlighted }});\n        this.props.highlightExplanation();\n    }\n\n    // Check whether this literal should be highlighted.\n    componentDidUpdate(prevProps) {\n        if(prevProps.highlighted !== this.props.highlighted) {\n            this.setState({highlighted: this.props.highlighted});\n        }\n    }\n\n    render() {\n        const { value, status } = this.props;\n        return <Col className=\"m-0 p-0\" style={{\n            // Styling dependent on literal status.\n            color:  (status === \"involved\") ? \"blue\" :\n                    (status === \"negative\") ? \"red\" :\n                    (status === \"positive\") ? \"green\" : \"black\",\n            textDecoration:\n                (status === \"negative\") ? \"line-through\" : \"none\",\n            fontWeight:\n                (status === \"positive\") ? \"bolder\" : \"normal\",\n            fontStyle:\n                (status === \"involved\") ? \"italic\" : \"normal\",\n            backgroundColor: this.state.highlighted ? \"cornsilk\" : null\n        }}\n            onMouseEnter={this.toggleHighlight.bind(this)} \n            onMouseLeave={this.toggleHighlight.bind(this)}\n        >{value}\n        </Col>\n    }\n\n}\n\nexport default Literal;","import React from 'react';\nimport {Col} from 'react-bootstrap';\n\n/**\n * A Square cell container, with optional extra styling.\n */\nclass SquareCol extends React.Component {\n    \n    render() {\n\n        const borders = this.props.borders ? this.props.borders :\n        {\n            border: \"2px solid lightgray\",\n            marginBottom: \"-2px\", // Deal with \"doubled\" borders.\n            marginLeft: \"-2px\"\n        }\n\n        const margin = this.props.margin ? this.props.margin : {}\n\n        return (\n            <Col className=\"m-0 p-0\" >\n                <div\n                    style={{\n                        ...borders,\n                        ...margin,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        backgroundImage: this.props.background,\n                        backgroundSize:\"100% 100%\",\n                    }}\n                >   \n                    { // Small optional number to overlay on the cell.\n                    this.props.cornerNumber && <div style={{\n                        position: \"absolute\",\n                        fontWeight: \"bolder\",\n                        color: \"white\",\n                        backgroundColor: \"#0275d8\",\n                        borderRadius: \"10px\",\n                        minWidth: \"1vw\",\n                        fontSize: \"0.8vw\",\n                        paddingRight: \"1px\",\n                        paddingLeft: \"1px\",\n                        zIndex: \"2\",\n                        ...this.props.cornerNumber.style,\n                    }}>\n                        {this.props.cornerNumber.value}\n                    </div>}\n\n                    { // Optional label between this cell and next on the right.\n                    this.props.rightLabel && <div style={{\n                        position: \"absolute\",\n                        top: \"35%\",\n                        right: \"-5%\",\n                        fontSize: \"2vw\"\n                    }}>\n                        {this.props.rightLabel}\n                    </div>}\n\n                    { // Optional label between this cell and the next below.\n                    this.props.bottomLabel && <div style={{\n                        position: \"absolute\",\n                        bottom: \"-15%\",\n                        right: \"42%\",\n                        fontSize: \"2vw\"\n                    }}>\n                        {this.props.bottomLabel}\n                    </div>}\n\n                    <div style={{\n                        ...this.props.innerBorders,\n                        padding: \"0px\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}>\n                        {this.props.children /* Main cell content */} \n                        \n                        {/*This div ensure the cell is always square\n                            CSS trick: https://stackoverflow.com/a/28985475/12309539*/}\n                        <div style={{\n                        display: \"block\",\n                        paddingBottom: \"100%\"\n                        }}></div>\n                    </div>\n                    \n                    \n                </div>\n            </Col >\n        )\n    }\n}\n\nexport default SquareCol;","import React from 'react';\nimport {Row} from 'react-bootstrap';\n\n/**\n * Saves typing out the bootstrap class name multiple times.\n */\nclass SquareRow extends React.Component {\n    render() {\n        return (\n            <Row \n                style={this.props.style}\n                className=\"p-0 m-0 d-flex flex-direction-row align-items-center justify-content-center\">\n                {this.props.children}\n            </Row>\n        );\n    }\n}\n\nexport default SquareRow;","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Literal from './Literal';\nimport SquareCol from './SquareCol';\nimport SquareRow from './SquareRow';\n\n/**\n * Cell component, where a cell is itself a grid of possible values.\n * (1 x 1) grid if the value becomes or is known.\n */\nclass Cell extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlighted: this.props.highlighted,\n        }\n    }\n\n    // Whether the cell grid is 1x1 i.e. the value is known.\n    isSingleton() {\n        const cellRows = this.props.cellContent.cellRows;\n\n        return cellRows.length === 1 &&\n                cellRows[0].cellValues.length === 1\n    }\n\n    // Get the first value of the cell grid.\n    getSingletonValue() {\n        const cellRows = this.props.cellContent.cellRows;\n        return cellRows[0].cellValues[0].value\n    }\n\n    // Check whether the cell should be highlighted\n    componentDidUpdate(prevProps) {\n        if (prevProps.highlighted !== this.props.highlighted) {\n            this.setState({ highlighted: this.props.highlighted });\n        }\n    }\n\n    // Call the parent highlight function\n    highlight(exp) {\n        this.props.highlight(exp);\n    }\n\n    /* Choose the cell background, either by reading a mapping for a singleton,\n        or taking the indexed cellBackground. */\n    chooseBackground() {\n        const { literalBackgrounds, cellBackground } = this.props;\n        const isSingleton = this.isSingleton();\n        const singletonValue = this.getSingletonValue();\n\n        if (literalBackgrounds && isSingleton) {\n            return literalBackgrounds[singletonValue.toString()]\n        } else if (cellBackground) {\n            return cellBackground;\n        } else {\n            return null;\n        }\n    }\n\n    /* Known cells should be 3 times larger. */\n    getFontSize(scale) {\n        const { literalSize } = this.props;\n        if (literalSize) {\n            console.log((literalSize * scale).toString() + \"vw\")\n            return (literalSize * scale).toString() + \"vw\"\n        } else {\n            return scale.toString() + \"vw\"\n        }\n    }\n\n    /* Check if a singleton value should be hidden */\n    isHidden(value) {\n        const { hiddenLiterals } = this.props;\n        return hiddenLiterals && hiddenLiterals.includes(value);\n    }\n\n    render() {\n        const {\n            cellContent,\n            cellBorders,\n            cellInnerBorders,\n            cellMargin,\n            cornerNumber,\n            rightLabel,\n            bottomLabel,\n            literalSize } = this.props;\n\n        const {highlighted} = this.state;\n\n        const isSingleton = this.isSingleton();\n        const singletonValue = this.getSingletonValue();\n\n        return (\n            <SquareCol\n                background={this.chooseBackground()}\n                borders={cellBorders}\n                innerBorders={cellInnerBorders}\n                margin={cellMargin}\n                size={literalSize}\n                cornerNumber={cornerNumber}\n                rightLabel={rightLabel}\n                bottomLabel={bottomLabel}>\n\n                {isSingleton ?\n                    // Display a single value if it is known and not hidden.\n                    (\n                        (!this.isHidden(singletonValue)) &&\n                        <h1 style={{ fontSize: this.getFontSize(2) }}>\n                            {singletonValue}\n                        </h1>\n                    ) :\n                    // Otherwise display a grid of possibilities\n                    <Container fluid className=\"p-0 align-items-center\">\n                        {cellContent.cellRows.map((row, i) =>\n                            <SquareRow key={i} style={{ fontSize: this.getFontSize(1) }}>\n                                {row.cellValues.map((literal, i) =>\n                                    // Possibilities are positive/negative literals.\n                                    <Literal\n                                        key={i}\n                                        value={literal.value}\n                                        status={literal.status} // positive / negative\n                                        highlighted={literal.explanations.includes(highlighted.toString())}\n                                        highlightExplanation={() => this.highlight(literal.explanations)}\n                                    />\n                                )}\n                            </SquareRow>\n                        )}\n                    </Container>\n                }\n            </SquareCol>\n        )\n    }\n}\n\nexport default Cell;","import React from 'react';\nimport { Card, Container, Col } from 'react-bootstrap'\nimport Cell from './Cell';\nimport SquareCol from './SquareCol';\nimport SquareRow from './SquareRow';\n\n/**\n * Generic puzzle board component. \n */\nclass Board extends React.Component {\n\n    // Return item at index, if the array prop is defined. \n    getIndex(arr, row, column) {\n        return arr ? arr[row][column] : null;\n    }\n\n    render() {\n        const {\n            // Required Props \n            highlighted, \n            highlight,\n            rows,\n\n            //Optional Props, for custom styling (see README)\n            literalBackgrounds,\n            cellBorders,\n            cellInnerBorders,\n            cellBackgrounds,\n            cellMargin,\n            literalSize,\n            cornerNumbers,\n            rightLabels,\n            bottomLabels,\n            hiddenLiterals,\n            rowsums,\n            endrowsums,\n            colsums,\n            endcolsums\n            \n        } = this.props;\n        \n        return (\n            <Card className=\"mt-3 p-5\">\n                <Container fluid style={{minWidth: \"400px\", padding: \"0px\"}}>\n                    {/*'Thin' row to display column indices.*/}\n                    <SquareRow>\n                        <Col xs={1} className=\"m-0 p-0\" />\n                        {rowsums && <Col className=\"m-0 p-0\" /> /* small corner cell*/}\n                        {rows[0].cells.map((cell, i) =>\n                            <Col key={i} className=\"m-0 p-0\">\n                                <small className=\"text-muted\">{i + 1}</small>\n                            </Col>)}\n                        {endrowsums && <Col className=\"m-0 p-0\" /> /* small corner cell*/}\n                    </SquareRow>\n\n                    {colsums &&\n                        // Extra row for column sums if necessary.\n                        <SquareRow>\n                            <Col xs={1} className=\"m-0 p-0\" />\n                            <SquareCol />\n                            {colsums.map((sum, j) =>\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"3vw\", color: \"gray\" }}>\n                                        {sum}\n                                    </h3>\n                                </SquareCol>)}\n                            {endrowsums && <SquareCol />}\n                        </SquareRow>}\n\n                    {rows.map((row, i) =>\n                        <SquareRow key={i}>\n                            {/* 'Thin' column for column indices */}\n                            <Col xs={1} key={i} className=\"m-0 p-0\">\n                                <small className=\"text-muted\">{i + 1}</small>\n                            </Col>\n\n                            {rowsums &&\n                                // Extra column for row sums if ncessary.\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"3vw\", color: \"gray\" }}>\n                                        {rowsums[i]}\n                                    </h3>\n                                </SquareCol>}\n                            {row.cells.map((cell, j) =>\n                                    // Main rows of puzzle\n                                    <Cell\n                                        cellContent={cell} \n                                        row={i} \n                                        column={j} \n\n                                        // Whether this cell is currently highlighted\n                                        highlighted={highlighted} \n                                        \n                                        /* Function to highlight explanation when this cell\n                                            is moused over */\n                                        highlight={highlight}\n                                        \n                                        // Styling \n                                        cellBorders={this.getIndex(cellBorders, i, j)}\n                                        cellInnerBorders={this.getIndex(cellInnerBorders, i, j)}\n                                        cellBackground={this.getIndex(cellBackgrounds, i, j)}\n                                        cornerNumber={this.getIndex(cornerNumbers, i, j)}\n                                        rightLabel={this.getIndex(rightLabels, i, j)}\n                                        bottomLabel={this.getIndex(bottomLabels, i, j)}\n                                        cellMargin={cellMargin}\n                                        literalBackgrounds={literalBackgrounds}\n                                        literalSize={literalSize}\n                                        hiddenLiterals={hiddenLiterals}\n                                        />      \n                                )}\n                            {endrowsums &&\n                                // Extra column for end row sums if ncessary.\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"3vw\", color: \"gray\" }}>\n                                        {endrowsums[i]}\n                                    </h3>\n                                </SquareCol>}\n                        </SquareRow>)}\n\n                        {endcolsums &&\n                        // Extra row for end column sums if necessary.\n                        <SquareRow>\n                            <Col xs={1} className=\"m-0 p-0\" />\n                            <SquareCol />\n                            {endcolsums.map((sum, j) =>\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"3vw\", color: \"gray\" }}>\n                                        {sum}\n                                    </h3>\n                                </SquareCol>)}\n                            {endrowsums && <SquareCol />}\n                        </SquareRow>}\n                </Container>\n            </Card>\n        )\n    }\n}\n\nexport default Board;","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\n/**\n * A single explanation/reason that can be highlighted on mouse over.\n */\nclass Explanation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlighted: this.props.highlighted\n        }\n    }\n\n    highlight() {\n        this.setState({highlighted: true});\n        this.props.highlight();\n    }\n\n    deHighlight() { //...unhighlight? dishighlight?\n        this.setState({highlighted: false});\n        this.props.highlight();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.highlighted !== this.props.highlighted) { \n            this.setState({highlighted: this.props.highlighted});\n        }\n    }\n\n    render() {\n        const itemStyle =\n            this.state.highlighted ?\n                { backgroundColor: \"cornsilk\" } : null\n                \n        const {decision, reason, index} = this.props\n\n        return <ListGroup.Item\n            style={itemStyle}\n            key={index}\n            onMouseEnter={this.highlight.bind(this)}\n            onMouseLeave={this.deHighlight.bind(this)}>\n            {decision}\n            <br />\n            {reason}\n        </ListGroup.Item>\n    }\n}\n\nexport default Explanation;","import React from 'react';\nimport { Accordion, Card, Button, ListGroup } from 'react-bootstrap';\nimport NavSwitcher from '../NavSwitcher';\nimport Explanation from './Explanation';\n\n/**\n * A sidebar that displays the deductions made on a given step, along with the explanations for that deduction.\n */\nclass ExplanationList extends React.Component {\n\n    render() {\n        const { simpleDeductions, deductions, otherChoices, smallestMUSSize} = this.props;\n        return (\n            <React.Fragment>\n                <Card className=\"mt-3\" >\n\n                    { /*For simple deductions (just one reason), display a collapsible list */\n                        simpleDeductions ?\n                        <Accordion defaultActiveKey=\"1\">\n                            <Card.Header>\n                                <h5>Made {simpleDeductions.length} simple deductions.</h5>\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                    Show/Hide\n                            </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"0\">\n                                <ListGroup style={{ maxHeight: \"60vh\", overflowY: \"scroll\" }}>\n                                    {\n                                        simpleDeductions.map((deduction, i) => {\n\n                                            return <Explanation\n                                                highlighted={this.props.highlighted.includes(i.toString())}\n                                                decision={deduction.decision}\n                                                reason={deduction.reason}\n                                                index={i}\n                                                key={i}\n                                                highlight={() => this.props.highlight(i)} />\n                                        })\n                                    }\n                                </ListGroup>\n                            </Accordion.Collapse>\n                        </Accordion>\n                        : deductions &&\n                        /* Otherwise we have an \"interesting\" deductions, \n                            so display the deductions with a list of reasons */\n                        <React.Fragment>\n                            <Card.Header>\n                                <h5>Made the following deduction:</h5>\n\n                            </Card.Header>\n                            <Card.Body>\n                                <div className=\"mb-3\">\n                                    <b >{deductions.decision}</b>\n                                </div>\n\n                                <ListGroup style={{ maxHeight: \"75vh\", overflowY: \"scroll\" }}>\n                                    {deductions.reason.map((reason, i) =>\n                                        <Explanation\n                                            highlighted={this.props.highlighted.includes(i.toString())}\n                                            reason={reason}\n                                            index={i}\n                                            key={i}\n                                            highlight={() => this.props.highlight(i)} />)}\n                                </ListGroup>\n                            </Card.Body>\n                        </React.Fragment>\n                    }\n                </Card>\n\n                {/*If there are other choices, display a NavSwitcher to step through the alternatives */\n                otherChoices && \n                    <Card className=\"mt-3\">\n                    <Card.Header>\n                        <b>Found {otherChoices.length + 1} choices in total for this step:</b>\n                    </Card.Header>\n                    <Card.Body>\n                        <div className=\"mb-3\">\n                            See the alternative deductions with MUS size {smallestMUSSize}:\n                            \n                        </div>\n                        <NavSwitcher \n                            stepName={\"Alt\"} \n                            className=\"p-3\" \n                            setCurrentStep={this.props.setAlternative} \n                            maxSteps={otherChoices.length}\n                            currentStep={this.props.currentAlternative}\n                            />\n                        <div>\n                            <small className=\"text-muted\">\n                                (Note: different MUSs may result in deductions that look identical)\n                            </small>\n                        </div>\n\n                    </Card.Body>\n\n                </Card>}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ExplanationList;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass TentsBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: this.props.params.x,\n            y: this.props.params.y,\n            colsums: this.props.params.colsums,\n            rowsums: this.props.params.rowsums,\n            treecount: this.props.params.treecount\n        }\n    }\n\n    getBackgrounds() {\n        let backgrounds = {};\n\n        for(let i = 1; i <= this.state.treecount; i++) {\n            backgrounds[\"-\" + i.toString()] = \"url(images/tree.png)\"\n            backgrounds[i.toString()] = \"url(images/tent.png)\"\n        }\n        \n        return backgrounds;\n    }\n\n    \n\n    getCellBorders() {\n        let borders = []\n\n        for(let i = 0; i < this.state.x; i++) {\n            borders[i] = []\n            for(let j = 0; j < this.state.y; j++) {\n                borders[i].push(\n                    {\n                        borderTop: i===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===this.state.x - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===this.state.y - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n    \n\n    render() {\n        console.log(\"here\")\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                literalBackgrounds={this.getBackgrounds()}\n                cellBorders={this.getCellBorders()}\n                />)\n    }\n}\n\nexport default TentsBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass BinairoBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                />)\n    }\n}\n\nexport default BinairoBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass KillerBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: this.props.params.grid,\n            hints: this.props.params.hints\n        }\n    }\n\n    getCellBorders() {\n        let borders = []\n\n        for(let i = 0; i < 9; i++) {\n            borders[i] = []\n            for(let j = 0; j < 9; j++) {\n                borders[i].push(\n                    {\n                        borderTop: i%3===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===8 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j%3===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===8 ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    getCellInnerBorders() {\n        let borders = []\n        const {grid} = this.state;\n        for(let i = 0; i < 9; i++) {\n            borders[i] = []\n            for(let j = 0; j < 9; j++) {\n                borders[i].push(\n                    {\n                        borderTop: \n                            i===0 || grid[i-1][j] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        borderBottom: i===8 || grid[i+1][j] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        borderLeft: j===0 || grid[i][j-1] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        borderRight: j===8 || grid[i][j+1] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        margin: \"3px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    getCornerNumbers() {\n        let cornerNumbers = []\n        const {hints, grid} = this.state;\n        let currentHint = 0;\n\n        for(let i = 0; i < 9; i++) {\n            cornerNumbers[i] = []\n            for(let j = 0; j < 9; j++) {\n                if(grid[i][j] === currentHint + 1) {\n                    cornerNumbers[i].push({value: hints[currentHint], style: {top: \"0%\", left: \"0%\"}})\n                    currentHint++\n                } else \n                    cornerNumbers[i].push({value: null, style: {top: \"0%\", left: \"0%\"}})\n            }\n        }\n\n        console.log(cornerNumbers)\n        return cornerNumbers\n    }\n    \n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                cellBorders={this.getCellBorders()}\n                cellInnerBorders={this.getCellInnerBorders()}\n                literalSize={0.7}\n                cornerNumbers={this.getCornerNumbers()}\n                />)\n    }\n}\n\nexport default KillerBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass KakuroBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: this.props.params.x_max,\n            y: this.props.params.y_max,\n            rowsums: this.props.params.horzsums,\n            colsums: this.props.params.vertsums,\n            blanks: this.props.params.blanks\n        }\n    }\n\n    getDiagonalGradient(bottomColor, topColor) {\n        return `linear-gradient(to bottom left, ${bottomColor}, ${bottomColor} 49%, lightgray 49%, lightgray 51%, ${topColor} 51%, ${topColor})`\n    }\n   \n    getBackgrounds() {\n        const {rowsums, colsums, blanks} = this.state;\n        let backgrounds = []\n        for(let i = 0; i < this.state.x; i++) {\n            backgrounds[i] = []\n            for(let j = 0; j < this.state.y; j++) {\n                if(rowsums[i][j]!==0) {\n                    if(colsums[i][j]!==0) {\n                        backgrounds[i].push(this.getDiagonalGradient(\"white\", \"white\"))\n                    } else {\n                        backgrounds[i].push(this.getDiagonalGradient(\"white\", \"lightblue\"))\n                    }\n                } else {\n                    if(colsums[i][j]!==0) {\n                        backgrounds[i].push(this.getDiagonalGradient(\"lightblue\", \"white\"))\n                    } else {\n                        if(blanks[i][j]===0) {\n                            backgrounds[i].push(\"linear-gradient(lightblue, lightblue)\")\n                        } else {\n                            backgrounds[i].push(\"none\")\n                        }\n                    }\n\n                }\n                \n            }\n        }\n        /*return borders;\n            {\"0\": \"linear-gradient(to bottom left, white, white 49%, lightgray 49%, lightgray 51%, lightblue 51%, lightblue)\"}*/\n        \n\n        return backgrounds;\n    }\n\n    getCornerNumbers() {\n        let cornerNumbers = []\n        const {rowsums, colsums, x, y} = this.state;\n        const extraStyle = {\n            fontWeight: \"bolder\",\n            color: \"gray\",\n            backgroundColor: \"none\",\n            fontSize: \"1.4vw\"}\n\n        for(let i = 0; i < x; i++) {\n            cornerNumbers[i] = []\n            for(let j = 0; j < y; j++) {\n                if(rowsums[i][j] !== 0) {\n                    cornerNumbers[i].push({value: rowsums[i][j], style: {top: \"20%\", right: \"20%\", ...extraStyle}})\n                } else if(i > 0 && colsums[i-1][j] !== 0) {\n                    cornerNumbers[i].push({value: colsums[i-1][j], style: {top: \"-30%\", left: \"20%\", ...extraStyle}})\n                } else \n                    cornerNumbers[i].push({value: null,  style: {top: \"-30%\", left: \"20%\", ...extraStyle}})\n\n            \n            }\n        }\n\n        console.log(cornerNumbers)\n        return cornerNumbers\n    }\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                cellBackgrounds={this.getBackgrounds()}\n                cornerNumbers={this.getCornerNumbers()}\n                hiddenLiterals={[0]}\n                />)\n    }\n}\n\nexport default KakuroBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass KakuroBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: this.props.params.blocks,\n            gridSize: this.props.params.grid,\n        }\n    }\n\n    getCellBorders() {\n        let borders = []\n        const {grid, gridSize} = this.state;\n        for(let i = 0; i < gridSize; i++) {\n            borders[i] = []\n            for(let j = 0; j < gridSize; j++) {\n                borders[i].push(\n                    {\n                        borderTop: \n                            i===0 || grid[i-1][j] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===gridSize - 1 || grid[i+1][j] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j===0 || grid[i][j-1] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===gridSize - 1 || grid[i][j+1] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\"\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    getBackgrounds() {\n        let backgrounds = {\"1\": \"url(images/star.png)\"}\n        \n        return backgrounds;\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                cellBorders={this.getCellBorders()}\n                literalBackgrounds={this.getBackgrounds()}\n                />)\n    }\n}\n\nexport default KakuroBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass FutoshikiBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lessThans: this.props.params.lt,\n            size: this.props.params.SIZE\n        }\n    }\n\n    getRightLabels() {\n        let rightLabels = []\n        const {size, lessThans} = this.state;\n        for(let i = 0; i < size; i++) {\n            rightLabels[i] = []\n            for(let j = 0; j < size; j++) {\n                rightLabels[i].push(\n                   null\n                )\n            }\n        }\n\n        for(let lessThan of lessThans) {\n            const i1 = lessThan[0];\n            const i2 = lessThan[1];\n            const j1 = lessThan[2];\n            const j2 = lessThan[3];\n\n            if(i1===j1) {\n                if(i2 < j2) {\n                    rightLabels[i1-1][i2-1] = \"<\"\n                } else {\n                    rightLabels[j1-1][j2-1] = \">\"\n                }\n            }\n        }\n        console.log(rightLabels);\n        return rightLabels;\n    }\n\n    getBottomLabels() {\n        let bottomLabels = []\n        const {size, lessThans} = this.state;\n        for(let i = 0; i < size; i++) {\n            bottomLabels[i] = []\n            for(let j = 0; j < size; j++) {\n                bottomLabels[i].push(\n                   null\n                )\n            }\n        }\n\n        for(let lessThan of lessThans) {\n            const i1 = lessThan[0];\n            const i2 = lessThan[1];\n            const j1 = lessThan[2];\n            const j2 = lessThan[3];\n\n            if(i2===j2) {\n                if(i1 < j1) {\n                    bottomLabels[i1-1][i2-1] = \"\\u2227\"\n                } else {\n                    bottomLabels[j1-1][j2-1] = \"\\u2228\"\n                }\n            }\n        }\n\n        return bottomLabels;\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                cellMargin={{margin: \"20px\"}}\n                rightLabels={this.getRightLabels()}\n                bottomLabels={this.getBottomLabels()}\n                />)\n    }\n}\n\nexport default FutoshikiBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass ThermometerBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colsums: this.props.params.colsums,\n            rowsums: this.props.params.rowsums,\n            grid: this.props.params.therms\n        }\n    }\n\n    getBackgrounds() {\n        const {grid} = this.state;\n        let backgrounds = []\n        const xsize = this.state.grid.length;\n        const ysize = this.state.grid[0].length;\n        for(let i = 0; i < xsize; i++) {\n            backgrounds[i] = []\n            for(let j = 0; j < ysize; j++) {\n                const thermNum = Math.floor(grid[i][j] / 10)\n                const north = i > 0 ? Math.floor(grid[i-1][j] / 10) : null\n                const south = i < xsize - 1 ? Math.floor(grid[i+1][j] / 10) : null\n                const west = j > 0 ? Math.floor(grid[i][j-1] / 10) : null\n                const east = j < ysize - 1 ? Math.floor(grid[i][j+1] / 10) : null\n\n                if(grid[i][j] % 10 === 1) {\n                    if(north === thermNum) {\n                        backgrounds[i].push(\"url(images/themHeadN.png\")\n                    } else if(west === thermNum) {\n                        backgrounds[i].push(\"url(images/themHeadW.png\")\n                    } else if(east === thermNum) {\n                        backgrounds[i].push(\"url(images/themHeadE.png\")\n                    } else if(south === thermNum) {\n                        backgrounds[i].push(\"url(images/themHeadS.png\")\n                    }\n                } else {\n                    if(north === thermNum && south !== thermNum) {\n                        backgrounds[i].push(\"url(images/themTipS.png\")    \n                    } else if(south === thermNum && north !== thermNum) {\n                        backgrounds[i].push(\"url(images/themTipN.png\")\n                    } else if(north === thermNum && south === thermNum) {\n                        backgrounds[i].push(\"url(images/themV.png\")\n                    } else if(east === thermNum && west !== thermNum) {\n                        backgrounds[i].push(\"url(images/themTipW.png\")    \n                    } else if(west === thermNum && east !== thermNum) {\n                        backgrounds[i].push(\"url(images/themTipE.png\")\n                    } else if(east === thermNum && west === thermNum) {\n                        backgrounds[i].push(\"url(images/themH.png\")\n                    }\n                }\n                \n            }\n        }\n\n        return backgrounds;\n    }\n\n    getCellBorders() {\n        let borders = []\n\n        for(let i = 0; i < 9; i++) {\n            borders[i] = []\n            for(let j = 0; j < 9; j++) {\n                borders[i].push(\n                    {\n                        borderTop: i===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===this.state.x - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===this.state.y - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                cellBackgrounds={this.getBackgrounds()}\n                highlighted={this.props.highlighted} \n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                rows={this.props.rows}\n                cellBorders={this.getCellBorders()}\n                />)\n    }\n}\n\nexport default ThermometerBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass SkyscrapersBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            size: this.props.params.SIZE,\n            rowsums: this.props.params.CLUES[0].map(num => num === 0 ? null : num),\n            colsums: this.props.params.CLUES[1].map(num => num === 0 ? null : num),\n            endrowsums: this.props.params.CLUES[2].map(num => num === 0 ? null : num),\n            endcolsums: this.props.params.CLUES[3].map(num => num === 0 ? null : num),\n        }\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                highlighted={this.props.highlighted} \n                rows={this.props.rows}\n                colsums={this.state.colsums}\n                endcolsums={this.state.endcolsums}\n                rowsums={this.state.rowsums}\n                endrowsums={this.state.endrowsums}\n                \n                />)\n    }\n}\n\nexport default SkyscrapersBoard;","import React from 'react';\nimport NavSwitcher from './NavSwitcher';\nimport Board from './Board/Board';\nimport ExplanationList from \"./Explanations/ExplanationList\";\n\nimport { Row, Col, Card } from 'react-bootstrap';\n\nimport TentsBoard from './PuzzleBoards/TentsBoard';\nimport BinairoBoard from './PuzzleBoards/BinairoBoard';\nimport KillerBoard from './PuzzleBoards/KillerBoard';\nimport KakuroBoard from './PuzzleBoards/KakuroBoard';\nimport StarBattleBoard from './PuzzleBoards/StarBattleBoard';\nimport FutoshikiBoard from './PuzzleBoards/FutoshikiBoard';\nimport ThermometerBoard from './PuzzleBoards/ThermometerBoard';\nimport SkyscrapersBoard from './PuzzleBoards/SkyscrapersBoard';\n\n/**\n * Main puzzle visualiser with a board on the left and explanations on the right.\n */\nclass PuzzleStepper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentStep: 0,\n            highlightedLiterals: -1,\n            highlightedExplanations: [],\n            currentAlternative: 0,\n            type: this.props.type,\n            params: this.props.params,\n            inputObject: this.props.inputObject\n        }\n    }\n\n    /* Two-way highlighting system: mouseover an explanation and see relevant literals,\n        mouseover a literals to see relevant explanations. \n    */\n    highlightLiteral(val) {\n        this.setState((prev) => { return { highlightedLiterals: prev.highlightedLiterals === val ? -1 : val } });\n    }\n\n    highlightExplanation(val) {\n        this.setState((prev) => \n            { return { \n                highlightedExplanations:\n                    JSON.stringify(prev.highlightedExplanations)===JSON.stringify(val) ? \n                        [] : val } });\n    }\n\n    // Passed to the NavSwitcher for overall steps\n    setCurrentStep(step) {\n        this.setState({ currentStep: step, currentAlternative: 0});\n    }\n\n    // Passed to the NavSwitcher for switching between alternatives.\n    setAlternative(number) {\n        this.setState({currentAlternative: number})\n    }\n\n    // Choose a board if we have defined one for this puzzle type.\n    chooseBoard(boardProps) {\n        switch(this.state.type) {\n            case \"tents.eprime\":\n                return <TentsBoard {...boardProps}/>\n            case \"binairo.eprime\":\n                return <BinairoBoard {...boardProps}/>\n            case \"nice_killer.eprime\":\n                return <KillerBoard {...boardProps}/>\n            case \"star-battle.eprime\":\n                return <StarBattleBoard {...boardProps}/>\n            case \"kakuro.eprime\":\n                return <KakuroBoard {...boardProps}/>\n            case \"nfutoshiki.eprime\":\n                return <FutoshikiBoard {...boardProps}/>\n            case \"thermometer.eprime\":\n                return <ThermometerBoard {...boardProps}/>\n            case \"skyscrapers.eprime\":\n                return <SkyscrapersBoard {...boardProps}/>\n            default:\n                return <Board {...boardProps}/>\n        }\n    }\n    render() {\n        const stepData = this.state.currentAlternative=== 0 ?\n            this.state.inputObject[this.state.currentStep]\n            : this.state.inputObject[this.state.currentStep].otherChoices[this.state.currentAlternative - 1]\n\n        // Core required board props. \n        const boardProps = {\n            params: this.state.params,\n            highlight: this.highlightExplanation.bind(this),\n            key: this.state.highlightedLiterals,\n            highlighted: this.state.highlightedLiterals, \n            rows: stepData.puzzleState.matrices[0].rows\n        }\n        return (\n            <React.Fragment>\n                <NavSwitcher \n                    className=\"mt-3 p-3\" \n                    stepName={\"step\"} \n                    setCurrentStep={this.setCurrentStep.bind(this)} \n                    maxSteps={this.state.inputObject.length - 1} \n                    currentStep={this.state.currentStep}/>\n\n                <Row className=\"mb-4\">\n                    {/*The main board: adjust width based on screen size */}\n                    <Col xs={12} md={8} lg={8} xl={6}>\n                        {this.chooseBoard(boardProps)} \n                    </Col>\n\n                    {/*The explanations*/}\n                    <Col>\n                        {stepData.skippedDeductions &&\n                            <Card className=\"mt-3\">\n                                <Card.Body>\n                                    <small>Skipped some obvious deductions.</small>\n                                </Card.Body>\n                            </Card>\n                        }\n\n                        <ExplanationList\n                            highlight={this.highlightLiteral.bind(this)}\n\n                            /* Only one of simpleDeductions or deductions should be defined. */\n                            simpleDeductions={stepData.simpleDeductions}\n                            deductions={stepData.deductions}\n\n                            highlighted={this.state.highlightedExplanations} \n\n                            /* Props for displaying alternatives */\n                            otherChoices={this.state.inputObject[this.state.currentStep].otherChoices}\n                            smallestMUSSize={this.state.inputObject[this.state.currentStep].smallestMUSSize}\n                            setAlternative={this.setAlternative.bind(this)}\n                            currentAlternative={this.state.currentAlternative}\n                            />\n                        \n                        \n                    </Col>\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PuzzleStepper;","import axios from \"axios\";\n\nasync function getExamples() {\n    const response = await axios.get(\"examples\");\n    return response.data;\n}\n\nasync function getExampleData(exampleName) {\n    const response = await axios.get(`examples/${exampleName}`);\n    return response.data;\n}\n\nasync function runDemystifyOnInput(eprimename, eprime, paramname, param) {\n    const response = await axios.post(\"run\", {\n        eprimename: eprimename,\n        eprime: eprime,\n        paramname: paramname,\n        param: param\n    })\n    return response.data\n}\n\nexport { getExamples, getExampleData, runDemystifyOnInput};\n\n","import React from 'react';\n\nclass FileUploader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n    }\n\n    uploadFile = async (e) => {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n            try {\n                const text = (e.target.result);\n                this.props.onUpload(text, this.fileInput.current.files[0].name);\n            } catch {\n                this.props.onError();\n            }\n        };\n        reader.readAsText(e.target.files[0])\n    }\n\n    render() {\n        return <input \n                disabled={this.props.disabled} \n                type=\"file\" \n                ref={this.fileInput} \n                onChange={(e) => this.uploadFile(e)} />\n    }\n}\n\nexport default FileUploader;","import React from 'react';\nimport { Card, Row, ListGroup, Dropdown, Alert, Spinner, Button } from 'react-bootstrap'\nimport * as API from \"../API\";\nimport FileUploader from './FileUploader';\n\n/**\n * Load a JSON input from the user's filesystem or preloaded examples.\n */\nclass MainMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadingExamples: true,\n            examples: [],\n            eprime: null,\n            eprimename: null,\n            param: null,\n            paramname: null,\n            error: \"\",\n            isRunning: false,\n        };\n    }\n\n    componentDidMount() {\n        API.getExamples()\n            .then(res => this.setState({ examples: res },\n                () => this.setState({ isLoadingExamples: false })));\n    }\n\n    async handleGo() {\n        if(!this.state.eprime || ! this.state.param) {\n            this.setError(\n                \"Please upload .eprime and .param files to run Demystify.\");\n            return;\n        }\n\n        this.setState({isRunning: true});\n        const {eprimename, eprime, paramname, param} = this.state;\n\n        try {\n            const result = await API.runDemystifyOnInput(eprimename, eprime, paramname, param);\n            this.props.setInput(result);\n        } catch(err) {\n            this.setError(\n                \"There was a problem running Demystify on the server. (Currently most things are too long).\");\n            this.setState({isRunning: false});\n        }\n    }\n\n    setError(message) {\n        this.setState({error: message});\n    }\n\n    componentDidUpdate = () => {\n        if (this.state.isRunning) {\n          window.onbeforeunload = () => {return true;}\n        } else {\n          window.onbeforeunload = undefined\n        }\n      }\n\n    async getExamples() {\n        const examples = await API.getExamples();\n\n        try {\n            const items = examples.map(name =>\n                <Dropdown.Item>\n                    {name}\n                </Dropdown.Item>);\n            return items;\n        } catch {\n            return (\n                <Alert className=\"m-0\" variant=\"warning\">\n                    Error fetching examples.\n                </Alert>)\n        }\n    }\n\n    async chooseExample(name) {\n        const example = await API.getExampleData(name);\n        this.props.setInput(example);\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex flex-column align-items-center\">\n                <h1 className=\"mt-3\">Demystify Visualiser</h1>\n                <img className=\"mt-3\" style={{width: \"100px\"}} src=\"favicon.ico\"/>\n                <Card as={Row} className=\"mt-3 pt-3 w-75\">\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <Row>\n                            {/* Basic file selection. */}\n                            <b className=\"mx-4\">  Load Demystify output from JSON file:</b>\n                            <FileUploader\n                                disabled={this.state.isRunning}\n                                onUpload={(text) => this.props.setInput(JSON.parse(text))}\n                                onError={() => this.setError(\n                                    \"Could not read the input file. Ensure it is a JSON file produced by Demystify.\")}\n                            />\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <b className=\"mx-4 pt-2\">View a pre-generated example:</b>\n                                <Dropdown onSelect={(e) => this.chooseExample(e)}>\n                                    <Dropdown.Toggle disabled={this.state.isRunning} variant=\"success\" id=\"dropdown-basic\">\n                                        Examples\n                                </Dropdown.Toggle>\n\n                            \n                                    <Dropdown.Menu>\n                                        {this.state.isLoadingExamples ?\n                                            <div className=\"d-flex justify-content-center\">\n                                                <Spinner animation=\"border\" />\n                                            </div>\n                                            :\n                                            this.state.examples.map((name) =>\n                                                <Dropdown.Item key={name} eventKey={name} onClick={() => this.chooseExample(name)}>\n                                                    {name}\n                                                </Dropdown.Item>)}\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n        \n                                <Row>\n                                    <b className=\"mx-4 mb-4\">Run Demystify live:</b>\n                                </Row>\n                                <Row>\n                                    <p className=\"mx-4\">Puzzle description (.eprime): </p>\n                                    <FileUploader\n                                        disabled={this.state.isRunning}\n                                        onUpload={(text, name) => this.setState({eprime: text, eprimename: name})}\n                                        onError={() => this.setError(\n                                        \"Could not read the input file. Ensure it is a valid .eprime file.\")}\n                                    />\n                                </Row>\n                                \n                                <Row>\n                                    <p className=\"mx-4\">Puzzle instance (.param): </p>\n                                    <FileUploader \n                                        disabled={this.state.isRunning}\n                                        onUpload={(text, name) => this.setState({param: text, paramname: name})}\n                                        onError={() => this.setError(\n                                        \"Could not read the input file. Ensure it is a valid .param file.\")}\n                                    />\n                                </Row>\n                                <Row>\n                                    <Button \n                                        disabled={this.state.isRunning}\n                                        className=\"mx-4\" \n                                        variant=\"success\" \n                                        onClick={this.handleGo.bind(this)}>\n                                            Go\n                                    </Button>\n                                    {this.state.isRunning &&\n                                        <React.Fragment>\n                                            <Spinner animation=\"border\" />\n                                            <p className=\"ml-4\">Demystify is running... This may take some time to complete.</p>\n                                        </React.Fragment>\n                                        \n                                    }\n                                </Row>\n                                \n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n                {this.state.error.length > 0 &&\n                        <Alert variant=\"warning\" className=\"mt-3 p-4 w-75 text-center\">\n                            {this.state.error}\n                        </Alert>}\n            </div>\n        )\n    }\n}\n\nexport default MainMenu;","import React from 'react';\n\nimport { Container} from 'react-bootstrap';\nimport PuzzleStepper from './PuzzleStepper';\nimport MainMenu from './MainMenu';\n\n/**\n * Currently the main content component for this application.\n */\nclass DemystifyViewer extends React.Component {\n  state = {\n    inputObject: [],\n    type: \"\",\n    params: {},\n    error: false,\n  }\n  \n  // Load the steps, the type of puzzle, and the params (configuration) of the puzzle\n  setJSONInput(obj) {\n    this.setState({ inputObject: obj.steps, type: obj.name, params: obj.params },\n      () => !(this.state.inputObject && this.state.type && this.state.params)  \n      && this.setError()) \n  }\n\n  // Avoid invalid JSON\n  setError() {\n    this.setState({error: true});\n  }\n\n  conponentDidUpdate(prevProps, prevState) {\n    if(prevState.error) this.setState({error: false});\n  }\n\n  render = () => {\n    return (\n      <Container fluid style={{textAlign: \"center\"}}>\n        \n        {/*If the puzzle has not been correctly loaded, display the main menu*/\n          (this.state.inputObject.length === 0 || this.state.error) ?\n            <MainMenu setInput={this.setJSONInput.bind(this)} />\n          :\n          /*Otherwise display the main puzzle visualiser*/\n          <PuzzleStepper\n            inputObject={this.state.inputObject}\n            type={this.state.type}\n            params={this.state.params} />\n        }\n      </Container>\n    )\n  }\n}\n\nexport default DemystifyViewer\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport DemystifyViewer from './components/DemystifyViewer';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DemystifyViewer/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}