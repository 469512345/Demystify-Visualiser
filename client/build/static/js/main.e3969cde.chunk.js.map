{"version":3,"sources":["components/NavSwitcher.jsx","components/Board/Literal.jsx","components/Board/SquareCol.jsx","components/Board/SquareRow.jsx","components/Board/Cell.jsx","components/Board/Board.jsx","components/Explanations/Explanation.jsx","components/Explanations/ExplanationList.jsx","components/PuzzleBoards/TentsBoard.jsx","components/PuzzleBoards/BinairoBoard.jsx","components/PuzzleBoards/KillerBoard.jsx","components/PuzzleBoards/KakuroBoard.jsx","components/PuzzleBoards/StarBattleBoard.jsx","components/PuzzleBoards/FutoshikiBoard.jsx","components/PuzzleBoards/ThermometerBoard.jsx","components/PuzzleBoards/SkyscrapersBoard.jsx","components/PuzzleBoards/GaramBoard.jsx","components/PuzzleBoards/NonogramBoard.jsx","components/PuzzleBoards/SudokuBoard.jsx","API.js","components/JobWait.jsx","components/PuzzleStepper.jsx","components/Menu/FileUploader.jsx","components/Menu/DropdownChoices.jsx","components/Menu/RadioChoices.jsx","components/Menu/MainMenu.jsx","components/SudokuBuilder.jsx","components/DemystifyVisualiser.jsx","reportWebVitals.js","index.js"],"names":["NavSwitcher","state","currentStep","props","newValue","this","maxSteps","setState","setCurrentStep","prevProps","Card","className","Form","inline","onSubmit","e","preventDefault","Button","disabled","variant","onClick","lastStep","bind","stepName","Group","Label","endButton","nextStep","React","Component","Literal","highlighted","prev","highlightExplanation","setSelectedLiteral","value","status","Col","handleClick","style","color","textShadow","textDecoration","fontWeight","fontStyle","backgroundColor","onMouseEnter","toggleHighlight","onMouseLeave","SquareCol","borders","border","marginBottom","marginLeft","margin","background1","background2","background","length","backgroundImage","display","justifyContent","alignItems","backgroundSize","cornerNumber","position","borderRadius","minWidth","fontSize","paddingRight","paddingLeft","zIndex","rightLabel","top","right","bottomLabel","bottom","innerBorders","padding","width","children","paddingBottom","SquareRow","Row","Cell","cellRows","cellContent","cellValues","containsKnown","some","row","markers","includes","filter","exp","highlight","highlightBackground","literalBackgrounds","cellBackground","explanations","toString","isSingleton","singletonValue","getSingletonValue","scale","literalSize","hiddenLiterals","column","cellBorders","cellInnerBorders","cellMargin","chooseBackground","size","isHidden","getFontSize","Container","fluid","map","i","literal","Board","arr","rows","cellBackgrounds","cornerNumbers","rightLabels","bottomLabels","rowsums","endrowsums","colsums","endcolsums","startrows","startcols","xs","col","cells","cell","val","j","sum","getIndex","Explanation","itemStyle","decision","reason","index","ListGroup","Item","deHighlight","ExplanationList","simpleDeductions","deduction","choices","smallestMUSSize","extraChoice","boldBorder","Fragment","Accordion","defaultActiveKey","Header","Toggle","as","eventKey","Collapse","maxHeight","overflowY","Body","setChoice","currentChoice","TentsBoard","x","params","y","Object","values","treecount","backgrounds","push","borderTop","borderBottom","borderLeft","borderRight","getBackgrounds","getCellBorders","BinairoBoard","KillerBoard","grid","o","hints","currentHint","left","getCellInnerBorders","getCornerNumbers","KakuroBoard","x_max","y_max","horzsums","vertsums","blanks","bottomColor","topColor","getDiagonalGradient","extraStyle","StarBattleBoard","blocks","gridSize","FutoshikiBoard","lessThans","lt","SIZE","lessThan","i1","i2","j1","j2","getRightLabels","getBottomLabels","ThermometerBoard","therms","xsize","ysize","thermNum","Math","floor","north","south","west","east","key","SkyscrapersBoard","CLUES","num","GaramBoard","presetvals","operations","op","opMap","1","2","3","NonogramBoard","rowcounts","colcounts","array","_","colIndex","transpose","SudokuBoard","getExamples","a","axios","get","response","data","getExampleData","exampleName","createJob","options","post","jobId","JobWait","pollDelay","pollCount","error","log","progress","timer","setInterval","checkStatus","prevState","clearInterval","API","then","res","output","setInput","mode","catch","Alert","Spinner","animation","href","window","location","flexDirection","reverse","l","textAlign","PuzzleStepper","highlightedLiterals","highlightedExplanations","selectedLiteral","selectedChoice","type","inputObject","continueData","isWaiting","finishedPuzzle","JSON","stringify","step","number","boardProps","isChoicesStep","handleGetNext","isLitForceStep","handleGetNextWithForce","obj","finished","slice","result","steps","eprimeName","eprime","paramName","param","algorithm","explainedLits","numSteps","choice","litChoice","otherChoices","stepData","getStepData","puzzleState","matrices","getEndButton","appendInput","md","lg","xl","chooseBoard","skippedDeductions","highlightLiteral","getAlternatives","handleSelectChoice","FileUploader","uploadFile","reader","FileReader","onload","text","target","onUpload","fileInput","current","files","name","onError","readAsText","createRef","noFile","ref","onChange","DropdownChoices","makeChoice","isLoading","Dropdown","onSelect","id","Menu","RadioChoices","labels","selected","toUpperCase","substring","Check","checked","label","MainMenu","componentDidUpdate","isQueueing","onbeforeunload","undefined","examples","eprimeChoices","chosenEprime","isLoadingExamples","isLoadingExampleJSON","isLoadingEprime","setError","isRunning","getInitial","message","items","example","both","split","replace","substr","alt","src","parse","chooseExample","handleBuildSudoku","chooseEprime","handleOptionChange","handleGo","SudokuBuilder","Array","apply","v","w","test","updateGrid","newGrid","element","document","createElement","file","Blob","getParamString","URL","createObjectURL","download","body","appendChild","click","Date","now","err","handleSave","handleRun","sm","getSudokuBorders","Control","onFocus","handleChange","DemystifyVisualiser","buildSudoku","render","setJSONInput","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e3969cde.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\n/**\n * A navigation bar to advance or deadvance steps.\n */\nclass NavSwitcher extends React.Component {\n    state = {\n        currentStep: this.props.currentStep,\n    }\n\n    // Advance\n    nextStep() {\n        const newValue = this.state.currentStep + 1;\n        if (newValue <= this.props.maxSteps) {\n            this.setState({ currentStep: newValue });\n            this.props.setCurrentStep(newValue);\n        }\n    }\n\n    // Deadvance\n    lastStep() {\n        const newValue = this.state.currentStep - 1;\n        if (newValue >= 0) {\n            this.setState({ currentStep: newValue });\n            this.props.setCurrentStep(newValue);\n        }\n    }\n\n    // Ensure current step is kept up to date.\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentStep !== this.props.currentStep) {\n            this.setState({ currentStep: this.props.currentStep });\n        }\n    }\n\n    render() {\n        return (\n            <Card className={this.props.className}>\n\n                <Form inline onSubmit={e => e.preventDefault()} className=\"d-flex justify-content-between\">\n                    <Button disabled={this.state.currentStep === 0} variant=\"primary\" onClick={this.lastStep.bind(this)}>\n                        Last {this.props.stepName}\n                    </Button>\n\n                    {/* Steps are indexed from 0 in JSON but display starting from 1 to the user. */}\n                    <Form.Group>\n                        <Form.Label className=\"w-70 mr-2\">Current {this.props.stepName}:</Form.Label>\n                        <Form.Label className=\"w-70 mr-2\">{this.state.currentStep + 1}</Form.Label>\n                    </Form.Group>\n                    \n                    {this.props.endButton ?\n                    this.props.endButton:\n                    <Button disabled={this.state.currentStep === this.props.maxSteps} variant=\"primary\" onClick={this.nextStep.bind(this)}>\n                        Next {this.props.stepName}\n                    </Button>}\n\n                </Form>\n\n            </Card>\n        )\n    }\n}\n\nexport default NavSwitcher;","import React from 'react';\nimport { Col } from 'react-bootstrap';\n\n/**\n * A small \"possible\" value to display in the grid within each cell.\n * Style indicates in what way it is involved in the current step.\n */\nclass Literal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlighted: this.props.highlighted\n        }\n    }\n\n    // Highlight/Unhighlight this literal and corresponding explanation\n    toggleHighlight() {\n        this.setState((prev) => { return {highlighted: !prev.highlighted }});\n        this.props.highlightExplanation();\n    }\n\n    // Check whether this literal should be highlighted.\n    componentDidUpdate(prevProps) {\n        if(prevProps.highlighted !== this.props.highlighted) {\n            this.setState({highlighted: this.props.highlighted});\n        }\n    }\n\n    handleClick() {\n        this.props.setSelectedLiteral()\n    }\n    render() {\n        const { value, status } = this.props;\n        return <Col className=\"m-0 p-0\" onClick={this.handleClick.bind(this)} style={{\n            // Styling dependent on literal status.\n            color:  (status === \"involved\") ? \"blue\" :\n                    (status === \"negative\") ? \"red\" :\n                    (status === \"positive\") ? \"green\" : \"black\",\n            textShadow: (status === \"involved\") ? \"0 0 4px #00FEFE\" : \n                        (status === \"positive\") ? \"0 0 4px #90EE90\" : \"none\",\n            textDecoration:\n                (status === \"negative\") ? \"line-through\" : \"none\",\n            fontWeight:\n                (status === \"positive\") ? \"bolder\" : \"normal\",\n            fontStyle:\n                (status === \"involved\") ? \"italic\" : \"normal\",\n            backgroundColor: this.state.highlighted ? \"cornsilk\" : null\n        }}\n            onMouseEnter={this.toggleHighlight.bind(this)} \n            onMouseLeave={this.toggleHighlight.bind(this)}\n        >{value}\n        </Col>\n    }\n\n}\n\nexport default Literal;","import React from 'react';\nimport {Col} from 'react-bootstrap';\n\n/**\n * A Square cell container, with optional extra styling.\n */\nclass SquareCol extends React.Component {\n    \n    render() {\n        const borders = this.props.borders ? this.props.borders :\n        {\n            border: \"2px solid lightgray\",\n            marginBottom: \"-2px\", // Deal with \"doubled\" borders.\n            marginLeft: \"-2px\"\n        }\n\n        const margin = this.props.margin ? this.props.margin : {}\n        \n        let background1 = null\n        let background2 = null\n\n        if (this.props.background) {\n            if (this.props.background.length > 1) {\n                background1 = this.props.background[0]\n                background2 = this.props.background[1]\n            } else {\n                background1 = this.props.background[0]\n            }\n        } else {\n            background1 = this.props.background\n        }\n\n        return (\n            <Col className=\"m-0 p-0\" >\n                <div\n                    style={{\n                        backgroundImage: background2\n                    }}\n                >\n                <div\n                    style={{\n                        ...borders,\n                        ...margin,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        backgroundImage: background1,\n                        backgroundSize:\"100% 100%\",\n                    }}\n                >   \n                    { // Small optional number to overlay on the cell.\n                    this.props.cornerNumber && <div style={{\n                        position: \"absolute\",\n                        fontWeight: \"bolder\",\n                        color: \"white\",\n                        backgroundColor: \"#0275d8\",\n                        borderRadius: \"10px\",\n                        minWidth: \"1vw\",\n                        fontSize: \"0.8vw\",\n                        paddingRight: \"1px\",\n                        paddingLeft: \"1px\",\n                        zIndex: \"2\",\n                        ...this.props.cornerNumber.style,\n                    }}>\n                        {this.props.cornerNumber.value}\n                    </div>}\n\n                    { // Optional label between this cell and next on the right.\n                    this.props.rightLabel && <div style={{\n                        position: \"absolute\",\n                        top: \"35%\",\n                        right: \"-5%\",\n                        fontSize: \"2vw\",\n                        zIndex: \"2\",\n                    }}>\n                        {this.props.rightLabel}\n                    </div>}\n\n                    { // Optional label between this cell and the next below.\n                    this.props.bottomLabel && <div style={{\n                        position: \"absolute\",\n                        bottom: \"-15%\",\n                        right: \"42%\",\n                        fontSize: \"2vw\"\n                    }}>\n                        {this.props.bottomLabel}\n                    </div>}\n\n                    <div style={{\n                        ...this.props.innerBorders,\n                        padding: \"0px\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}>\n                        {this.props.children /* Main cell content */} \n                        \n                        {/*This div ensure the cell is always square\n                            CSS trick: https://stackoverflow.com/a/28985475/12309539*/}\n                        <div style={{\n                        display: \"block\",\n                        paddingBottom: \"100%\"\n                        }}></div>\n                    </div>\n                    \n                    \n                </div>\n                </div>\n            </Col >\n        )\n    }\n}\n\nexport default SquareCol;","import React from 'react';\nimport {Row} from 'react-bootstrap';\n\n/**\n * Saves typing out the bootstrap class name multiple times.\n */\nclass SquareRow extends React.Component {\n    render() {\n        return (\n            <Row \n                style={this.props.style}\n                className=\"p-0 m-0 d-flex flex-direction-row align-items-center justify-content-center\">\n                {this.props.children}\n            </Row>\n        );\n    }\n}\n\nexport default SquareRow;","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Literal from './Literal';\nimport SquareCol from './SquareCol';\nimport SquareRow from './SquareRow';\n\n/**\n * Cell component, where a cell is itself a grid of possible values.\n * (1 x 1) grid if the value becomes or is known.\n */\nclass Cell extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlighted: this.props.highlighted,\n        }\n    }\n\n    // Whether the cell grid is 1x1 i.e. the value is known.\n    isSingleton() {\n        const cellRows = this.props.cellContent.cellRows;\n\n        return (cellRows.length === 1 &&\n                cellRows[0].cellValues.length === 1) || this.containsKnown(cellRows)\n    }\n\n    // Additional check in case for some reason (e.g. with PyExplain) the grid isn't 1x1 but the value\n    // is nevertheless known.\n    containsKnown(cellRows) {\n        return cellRows.some(row => row.cellValues.some(value => value.markers.includes(\"pik\")))\n    }\n\n    // Get the first value of the cell grid.\n    getSingletonValue() {\n        const cellRows = this.props.cellContent.cellRows;\n        let result;\n        if(this.containsKnown(cellRows)) {\n            result = cellRows.filter(row => row.cellValues.some(value => value.markers.includes(\"pik\")))[0].cellValues\n            .filter(value => value.markers.includes(\"pik\"))[0].value\n        } else {\n            result = cellRows[0].cellValues[0].value\n        }\n        \n        return result\n    }\n\n    // Check whether the cell should be highlighted\n    componentDidUpdate(prevProps) {\n        if (prevProps.highlighted !== this.props.highlighted) {\n            this.setState({ highlighted: this.props.highlighted });\n        }\n    }\n\n    // Call the parent highlight function\n    highlight(exp) {\n        this.props.highlight(exp);\n    }\n\n    /* Choose the cell background, either by reading a mapping for a singleton,\n        or taking the indexed cellBackground. */\n    chooseBackground() {\n\n        const { cellContent, literalBackgrounds, cellBackground } = this.props;\n        const { highlighted } = this.state;\n        let highlightBackground\n\n        if (cellContent.cellRows.some(\n            row => row.cellValues.some(\n                value => value.explanations.includes(\n                    highlighted.toString())))) {\n            highlightBackground = \"linear-gradient(cornsilk, cornsilk)\"\n        } else {\n            highlightBackground = \"\"\n        }\n\n        const isSingleton = this.isSingleton();\n        const singletonValue = this.getSingletonValue();\n\n        if (literalBackgrounds && isSingleton) {\n            return [literalBackgrounds[singletonValue.toString()], highlightBackground]\n        } else if (cellBackground) {\n            return [cellBackground, highlightBackground]\n        } else {\n            return [highlightBackground];\n        }\n    }\n\n    /* Known cells should be 3 times larger. */\n    getFontSize(scale) {\n        const { literalSize } = this.props;\n        if (literalSize) {\n            return (literalSize * scale).toString() + \"vw\"\n        } else {\n            return scale.toString() + \"vw\"\n        }\n    }\n\n    /* Check if a singleton value should be hidden */\n    isHidden(value) {\n        const { hiddenLiterals } = this.props;\n        return hiddenLiterals && hiddenLiterals.includes(value);\n    }\n\n    render() {\n        const {\n            row,\n            column,\n            cellContent,\n            cellBorders,\n            cellInnerBorders,\n            cellMargin,\n            cornerNumber,\n            rightLabel,\n            bottomLabel,\n            literalSize } = this.props;\n\n        const {highlighted} = this.state;\n\n        const isSingleton = this.isSingleton();\n        const singletonValue = this.getSingletonValue();\n\n        return (\n            <SquareCol\n                background={this.chooseBackground()}\n                borders={cellBorders}\n                innerBorders={cellInnerBorders}\n                margin={cellMargin}\n                size={literalSize}\n                cornerNumber={cornerNumber}\n                rightLabel={rightLabel}\n                bottomLabel={bottomLabel}>\n\n                {isSingleton ?\n                    // Display a single value if it is known and not hidden.\n                    (\n                        (!this.isHidden(singletonValue)) &&\n                        <h1 style={{ fontSize: this.getFontSize(2) }}>\n                            {singletonValue}\n                        </h1>\n                    ) :\n                    // Otherwise display a grid of possibilities\n                    <Container fluid className=\"p-0 align-items-center\">\n                        {cellContent.cellRows.map((row, i) =>\n                            <SquareRow key={i} style={{ fontSize: this.getFontSize(1) }}>\n                                {row.cellValues.map((literal, i) =>\n                                    // Possibilities are positive/negative literals.\n                                    <Literal\n                                        key={i}\n                                        row={this.props.row}\n                                        column={column}\n                                        value={literal.value}\n                                        status={literal.status} // positive / negative\n                                        highlighted={literal.explanations.includes(highlighted.toString())}\n                                        highlightExplanation={() => this.highlight(literal.explanations)}\n                                        setSelectedLiteral={() => this.props.setSelectedLiteral(this.props.row, column, literal.value)}\n                                    />\n                                )}\n                            </SquareRow>\n                        )}\n                    </Container>\n                }\n            </SquareCol>\n        )\n    }\n}\n\nexport default Cell;","import React from 'react';\nimport { Card, Container, Col } from 'react-bootstrap'\nimport Cell from './Cell';\nimport SquareCol from './SquareCol';\nimport SquareRow from './SquareRow';\n\n/**\n * Generic puzzle board component. \n */\nclass Board extends React.Component {\n\n    // Return item at index, if the array prop is defined. \n    getIndex(arr, row, column) {\n        return arr ? arr[row][column] : null;\n    }\n\n    render() {\n        const {\n            // Required Props \n            highlighted, \n            highlight,\n            rows,\n\n            //Optional Props, for custom styling (see README)\n            literalBackgrounds,\n            cellBorders,\n            cellInnerBorders,\n            cellBackgrounds,\n            cellMargin,\n            literalSize,\n            cornerNumbers,\n            rightLabels,\n            bottomLabels,\n            hiddenLiterals,\n            rowsums,\n            endrowsums,\n            colsums,\n            endcolsums,\n            startrows,\n            startcols,\n      \n        } = this.props;\n        \n        return (\n            <Card className=\"mt-3 p-5\">\n                <Container fluid style={{minWidth: \"400px\", padding: \"0px\"}}>\n                    {/*'Thin' row to display column indices.*/}\n                    <SquareRow>\n                        <Col xs={1} className=\"m-0 p-0\" />\n                        {startcols && startcols.map(col =>\n                                <Col className=\"m-0 p-0\"/>)}\n                        {rowsums && <Col className=\"m-0 p-0\" /> /* small corner cell*/}\n                        {rows[0].cells.map((cell, i) =>\n                            <Col key={i} className=\"m-0 p-0\">\n                                <small className=\"text-muted\">{i + 1}</small>\n                            </Col>)}\n                        {endrowsums && <Col className=\"m-0 p-0\" /> /* small corner cell*/}\n                    </SquareRow>\n                    \n                    {startrows && startrows.map(row =>\n                        // Extra rows for e.g. nonogram\n                        <SquareRow>\n                            <Col xs={1} className=\"m-0 p-0\" />\n                            {startcols && startcols.map(col =>\n                                <SquareCol/>)}\n                            {row.map((val, j) =>\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"2vw\", color: \"gray\" }}>\n                                        {val}\n                                    </h3>\n                                </SquareCol>)}\n                            {endrowsums && <SquareCol />}\n                        </SquareRow>)}\n\n                    {colsums &&\n                        // Extra row for column sums if necessary.\n                        <SquareRow>\n                            <Col xs={1} className=\"m-0 p-0\" />\n                            <SquareCol />\n                            {colsums.map((sum, j) =>\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"2vw\", color: \"gray\" }}>\n                                        {sum}\n                                    </h3>\n                                </SquareCol>)}\n                            {endrowsums && <SquareCol />}\n                        </SquareRow>}\n\n                    {rows.map((row, i) =>\n                        <SquareRow key={i}>\n                            {/* 'Thin' column for column indices */}\n                            <Col xs={1} key={i} className=\"m-0 p-0\">\n                                <small className=\"text-muted\">{i + 1}</small>\n                            </Col>\n\n                            {startcols && startcols.map(col =>\n                                // Extra column for row sums if ncessary.\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"2vw\", color: \"gray\" }}>\n                                        {col[i]}\n                                    </h3>\n                                </SquareCol>)}\n\n                            {rowsums &&\n                                // Extra column for row sums if ncessary.\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"2vw\", color: \"gray\" }}>\n                                        {rowsums[i]}\n                                    </h3>\n                                </SquareCol>}\n\n                            {row.cells.map((cell, j) =>\n                                    // Main rows of puzzle\n                                    <Cell\n                                        cellContent={cell} \n                                        row={i} \n                                        column={j} \n\n                                        // Whether this cell is currently highlighted\n                                        highlighted={highlighted} \n                                        \n                                        /* Function to highlight explanation when this cell\n                                            is moused over */\n                                        highlight={highlight}\n                                        \n                                        // Styling \n                                        cellBorders={this.getIndex(cellBorders, i, j)}\n                                        cellInnerBorders={this.getIndex(cellInnerBorders, i, j)}\n                                        cellBackground={this.getIndex(cellBackgrounds, i, j)}\n                                        cornerNumber={this.getIndex(cornerNumbers, i, j)}\n                                        rightLabel={this.getIndex(rightLabels, i, j)}\n                                        bottomLabel={this.getIndex(bottomLabels, i, j)}\n                                        cellMargin={cellMargin}\n                                        literalBackgrounds={literalBackgrounds}\n                                        literalSize={literalSize}\n                                        hiddenLiterals={hiddenLiterals}\n                                        setSelectedLiteral={this.props.setSelectedLiteral}\n                                        />      \n                                )}\n                            {endrowsums &&\n                                // Extra column for end row sums if ncessary.\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"2vw\", color: \"gray\" }}>\n                                        {endrowsums[i]}\n                                    </h3>\n                                </SquareCol>}\n                        </SquareRow>)}\n\n                        {endcolsums &&\n                        // Extra row for end column sums if necessary.\n                        <SquareRow>\n                            <Col xs={1} className=\"m-0 p-0\" />\n                            <SquareCol />\n                            {endcolsums.map((sum, j) =>\n                                <SquareCol>\n                                    <h3 style={{ fontSize: \"2vw\", color: \"gray\" }}>\n                                        {sum}\n                                    </h3>\n                                </SquareCol>)}\n                            {endrowsums && <SquareCol />}\n                        </SquareRow>}\n                </Container>\n            </Card>\n        )\n    }\n}\n\nexport default Board;","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\n/**\n * A single explanation/reason that can be highlighted on mouse over.\n */\nclass Explanation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlighted: this.props.highlighted\n        }\n    }\n\n    highlight() {\n        this.setState({highlighted: true});\n        this.props.highlight();\n    }\n\n    deHighlight() { //...unhighlight? dishighlight?\n        this.setState({highlighted: false});\n        this.props.highlight();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.highlighted !== this.props.highlighted) { \n            this.setState({highlighted: this.props.highlighted});\n        }\n    }\n\n    render() {\n        const itemStyle =\n            this.state.highlighted ?\n                { backgroundColor: \"cornsilk\" } : null\n                \n        const {decision, reason, index} = this.props\n\n        return <ListGroup.Item\n            style={itemStyle}\n            key={index}\n            onMouseEnter={this.highlight.bind(this)}\n            onMouseLeave={this.deHighlight.bind(this)}>\n            {decision}\n            <br />\n            {reason}\n        </ListGroup.Item>\n    }\n}\n\nexport default Explanation;","import React from 'react';\nimport { Accordion, Card, Button, ListGroup } from 'react-bootstrap';\nimport NavSwitcher from '../NavSwitcher';\nimport Explanation from './Explanation';\n\n/**\n * A sidebar that displays the deductions made on a given step, along with the explanations for that deduction.\n */\nclass ExplanationList extends React.Component {\n\n    render() {\n        const { simpleDeductions, deduction, choices, smallestMUSSize, extraChoice, boldBorder} = this.props;\n        return (\n            <React.Fragment>\n                <Card className=\"mt-3\" border={boldBorder ? \"primary\" : \"none\"}>\n\n                    { /*For simple deductions (just one reason), display a collapsible list */\n                        simpleDeductions ?\n                        <Accordion defaultActiveKey=\"1\">\n                            <Card.Header>\n                                <h5>Made {simpleDeductions.length} simple deductions.</h5>\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                    Show/Hide\n                            </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"0\">\n                                <ListGroup style={{ maxHeight: \"60vh\", overflowY: \"scroll\" }}>\n                                    {\n                                        simpleDeductions.map((deduction, i) => {\n\n                                            return <Explanation\n                                                highlighted={this.props.highlighted.includes(i.toString())}\n                                                decision={deduction.decision}\n                                                reason={deduction.reason}\n                                                index={i}\n                                                key={i}\n                                                highlight={() => this.props.highlight(i)} />\n                                        })\n                                    }\n                                </ListGroup>\n                            </Accordion.Collapse>\n                        </Accordion>\n                        : deduction &&\n                        /* Otherwise we have an \"interesting\" deductions, \n                            so display the deductions with a list of reasons */\n                        <React.Fragment>\n                            <Card.Header>\n                                <h5>Made the following deduction:</h5>\n\n                            </Card.Header>\n                            <Card.Body>\n                                <div className=\"mb-3\">\n                                    <b >{deduction.decision}</b>\n                                </div>\n\n                                <ListGroup style={{ maxHeight: \"75vh\", overflowY: \"scroll\" }}>\n                                    {deduction.reason.map((reason, i) =>\n                                        <Explanation\n                                            highlighted={this.props.highlighted.includes(i.toString())}\n                                            reason={reason}\n                                            index={i}\n                                            key={i}\n                                            highlight={() => this.props.highlight(i)} />)}\n                                </ListGroup>\n                            </Card.Body>\n                        </React.Fragment>\n                    }\n                </Card>\n\n                {/*If there are other choices, display a NavSwitcher to step through the alternatives */\n                choices && \n                    <Card className=\"mt-3\">\n                    <Card.Header>\n                        <b>Found {extraChoice ? choices.length + 1 : choices.length} choices in total for this step:</b>\n                    </Card.Header>\n                    <Card.Body>\n                        <div className=\"mb-3\">\n                            See the alternative deductions with MUS size at least {smallestMUSSize}:\n                            \n                        </div>\n                        <NavSwitcher \n                            stepName={\"Alt\"} \n                            className=\"p-3\" \n                            setCurrentStep={this.props.setChoice} \n                            maxSteps={extraChoice? choices.length : choices.length - 1}\n                            currentStep={this.props.currentChoice}\n                            />\n                        <div>\n                            <small className=\"text-muted\">\n                                (Note: different MUSs may result in deductions that look identical)\n                            </small>\n                        </div>\n                        {this.props.children}\n                    </Card.Body>\n                \n                </Card>}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ExplanationList;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass TentsBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: this.props.params.x,\n            y: this.props.params.y,\n            colsums: Object.values(this.props.params.colsums),\n            rowsums: Object.values(this.props.params.rowsums),\n            treecount: this.props.params.treecount\n        }\n    }\n\n    getBackgrounds() {\n        let backgrounds = {};\n\n        for(let i = 1; i <= this.state.treecount; i++) {\n            backgrounds[\"-\" + i.toString()] = \"url(images/tree.png)\"\n            backgrounds[i.toString()] = \"url(images/tent.png)\"\n        }\n        \n        return backgrounds;\n    }\n\n    \n\n    getCellBorders() {\n        let borders = []\n\n        for(let i = 0; i < this.state.x; i++) {\n            borders[i] = []\n            for(let j = 0; j < this.state.y; j++) {\n                borders[i].push(\n                    {\n                        borderTop: i===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===this.state.x - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===this.state.y - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n    \n\n    render() {\n        return (<Board\n                {...this.props}\n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                literalBackgrounds={this.getBackgrounds()}\n                cellBorders={this.getCellBorders()}\n                />)\n    }\n}\n\nexport default TentsBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass BinairoBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n\n    getBackgrounds() {\n        let backgrounds = \n            {\"0\": \"radial-gradient(gray 60%, #000000 61%, #ffffff 66%)\",\n            \"1\": \"radial-gradient(#ffffff 60%, #000000 61%, #ffffff 66%)\"\n            }\n        \n        return backgrounds;\n    }\n\n    render() {\n        return (<Board\n                {...this.props}\n                literalBackgrounds={this.getBackgrounds()}\n                />)\n    }\n}\n\nexport default BinairoBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass KillerBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: Object.values(this.props.params.grid)\n                .map(o => Object.values(o)),\n            hints: Object.values(this.props.params.hints)\n        }\n    }\n\n    getCellBorders() {\n        let borders = []\n\n        for(let i = 0; i < 9; i++) {\n            borders[i] = []\n            for(let j = 0; j < 9; j++) {\n                borders[i].push(\n                    {\n                        borderTop: i%3===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===8 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j%3===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===8 ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    getCellInnerBorders() {\n        let borders = []\n        const {grid} = this.state;\n        for(let i = 0; i < 9; i++) {\n            borders[i] = []\n            for(let j = 0; j < 9; j++) {\n                borders[i].push(\n                    {\n                        borderTop: \n                            i===0 || grid[i-1][j] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        borderBottom: i===8 || grid[i+1][j] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        borderLeft: j===0 || grid[i][j-1] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        borderRight: j===8 || grid[i][j+1] !== grid[i][j] ? \"2px dashed black\" : \"2px dashed white\",\n                        margin: \"3px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    getCornerNumbers() {\n        let cornerNumbers = []\n        const {hints, grid} = this.state;\n        let currentHint = 0;\n\n        for(let i = 0; i < 9; i++) {\n            cornerNumbers[i] = []\n            for(let j = 0; j < 9; j++) {\n                if(grid[i][j] === currentHint + 1) {\n                    cornerNumbers[i].push({value: hints[currentHint], style: {top: \"0%\", left: \"0%\"}})\n                    currentHint++\n                } else \n                    cornerNumbers[i].push({value: null, style: {top: \"0%\", left: \"0%\"}})\n            }\n        }\n        return cornerNumbers\n    }\n    \n\n    render() {\n        return (<Board\n                {...this.props}\n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                cellBorders={this.getCellBorders()}\n                cellInnerBorders={this.getCellInnerBorders()}\n                literalSize={0.7}\n                cornerNumbers={this.getCornerNumbers()}\n                />)\n    }\n}\n\nexport default KillerBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass KakuroBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: this.props.params.x_max,\n            y: this.props.params.y_max,\n            rowsums: Object.values(this.props.params.horzsums).map(\n                o => Object.values(o)),\n            colsums: Object.values(this.props.params.vertsums).map(\n                o => Object.values(o)),\n            blanks:  Object.values(this.props.params.blanks).map(\n                o => Object.values(o))\n        }\n    }\n\n    getDiagonalGradient(bottomColor, topColor) {\n        return `linear-gradient(to bottom left, ${bottomColor}, ${bottomColor} 49%, lightgray 49%, lightgray 51%, ${topColor} 51%, ${topColor})`\n    }\n   \n    getBackgrounds() {\n        const {rowsums, colsums, blanks} = this.state;\n        let backgrounds = []\n        for(let i = 0; i < this.state.x; i++) {\n            backgrounds[i] = []\n            for(let j = 0; j < this.state.y; j++) {\n                if(rowsums[i][j]!==0) {\n                    if(colsums[i][j]!==0) {\n                        backgrounds[i].push(this.getDiagonalGradient(\"white\", \"white\"))\n                    } else {\n                        backgrounds[i].push(this.getDiagonalGradient(\"white\", \"lightblue\"))\n                    }\n                } else {\n                    if(colsums[i][j]!==0) {\n                        backgrounds[i].push(this.getDiagonalGradient(\"lightblue\", \"white\"))\n                    } else {\n                        if(blanks[i][j]===0) {\n                            backgrounds[i].push(\"linear-gradient(lightblue, lightblue)\")\n                        } else {\n                            backgrounds[i].push(\"none\")\n                        }\n                    }\n\n                }\n                \n            }\n        }\n        /*return borders;\n            {\"0\": \"linear-gradient(to bottom left, white, white 49%, lightgray 49%, lightgray 51%, lightblue 51%, lightblue)\"}*/\n        \n\n        return backgrounds;\n    }\n\n    getCornerNumbers() {\n        let cornerNumbers = []\n        const {rowsums, colsums, x, y} = this.state;\n        const extraStyle = {\n            fontWeight: \"bolder\",\n            color: \"gray\",\n            backgroundColor: \"none\",\n            fontSize: \"1.4vw\"}\n\n        for(let i = 0; i < x; i++) {\n            cornerNumbers[i] = []\n            for(let j = 0; j < y; j++) {\n                if(rowsums[i][j] !== 0) {\n                    cornerNumbers[i].push({value: rowsums[i][j], style: {top: \"20%\", right: \"20%\", ...extraStyle}})\n                } else if(i > 0 && colsums[i-1][j] !== 0) {\n                    cornerNumbers[i].push({value: colsums[i-1][j], style: {top: \"-30%\", left: \"20%\", ...extraStyle}})\n                } else \n                    cornerNumbers[i].push({value: null,  style: {top: \"-30%\", left: \"20%\", ...extraStyle}})\n\n            \n            }\n        }\n\n        return cornerNumbers\n    }\n    render() {\n        return (<Board\n                {...this.props}\n                cellBackgrounds={this.getBackgrounds()}\n                cornerNumbers={this.getCornerNumbers()}\n                hiddenLiterals={[0]}\n                />)\n    }\n}\n\nexport default KakuroBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass StarBattleBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: Object.values(this.props.params.blocks)\n                    .map(o => Object.values(o)),\n            gridSize: this.props.params.grid,\n        }\n    }\n\n    getCellBorders() {\n        let borders = []\n        const {grid, gridSize} = this.state;\n        for(let i = 0; i < gridSize; i++) {\n            borders[i] = []\n            for(let j = 0; j < gridSize; j++) {\n                borders[i].push(\n                    {\n                        borderTop: \n                            i===0 || grid[i-1][j] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===gridSize - 1 || grid[i+1][j] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j===0 || grid[i][j-1] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===gridSize - 1 || grid[i][j+1] !== grid[i][j] ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\"\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    getBackgrounds() {\n        let backgrounds = {\"1\": \"url(images/star.png)\"}\n        \n        return backgrounds;\n    }\n\n    render() {\n        return (<Board\n                {...this.props}\n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                cellBorders={this.getCellBorders()}\n                literalBackgrounds={this.getBackgrounds()}\n                />)\n    }\n}\n\nexport default StarBattleBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass FutoshikiBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lessThans: Object.values(this.props.params.lt)\n                    .map(o => Object.values(o)),\n            size: this.props.params.SIZE\n        }\n    }\n\n    getRightLabels() {\n        let rightLabels = []\n        const {size, lessThans} = this.state;\n        for(let i = 0; i < size; i++) {\n            rightLabels[i] = []\n            for(let j = 0; j < size; j++) {\n                rightLabels[i].push(\n                   null\n                )\n            }\n        }\n\n        for(let lessThan of lessThans) {\n            const i1 = lessThan[0];\n            const i2 = lessThan[1];\n            const j1 = lessThan[2];\n            const j2 = lessThan[3];\n\n            if(i1===j1) {\n                if(i2 < j2) {\n                    rightLabels[i1-1][i2-1] = \"<\"\n                } else {\n                    rightLabels[j1-1][j2-1] = \">\"\n                }\n            }\n        }\n        return rightLabels;\n    }\n\n    getBottomLabels() {\n        let bottomLabels = []\n        const {size, lessThans} = this.state;\n        for(let i = 0; i < size; i++) {\n            bottomLabels[i] = []\n            for(let j = 0; j < size; j++) {\n                bottomLabels[i].push(\n                   null\n                )\n            }\n        }\n\n        for(let lessThan of lessThans) {\n            const i1 = lessThan[0];\n            const i2 = lessThan[1];\n            const j1 = lessThan[2];\n            const j2 = lessThan[3];\n\n            if(i2===j2) {\n                if(i1 < j1) {\n                    bottomLabels[i1-1][i2-1] = \"\\u2227\"\n                } else {\n                    bottomLabels[j1-1][j2-1] = \"\\u2228\"\n                }\n            }\n        }\n\n        return bottomLabels;\n    }\n\n    render() {\n        return (<Board\n                {...this.props}\n                cellMargin={{margin: \"20px\"}}\n                rightLabels={this.getRightLabels()}\n                bottomLabels={this.getBottomLabels()}\n                />)\n    }\n}\n\nexport default FutoshikiBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass ThermometerBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colsums: Object.values(this.props.params.colsums),\n            rowsums: Object.values(this.props.params.rowsums),\n            grid: Object.values(this.props.params.therms)\n                    .map(o => Object.values(o))\n        }\n    }\n\n    getBackgrounds() {\n        const {grid} = this.state;\n        let backgrounds = []\n        const xsize = this.state.grid.length;\n        const ysize = this.state.grid[0].length;\n        for(let i = 0; i < xsize; i++) {\n            backgrounds[i] = []\n            for(let j = 0; j < ysize; j++) {\n                const thermNum = Math.floor(grid[i][j] / 10)\n                const north = i > 0 ? Math.floor(grid[i-1][j] / 10) : null\n                const south = i < xsize - 1 ? Math.floor(grid[i+1][j] / 10) : null\n                const west = j > 0 ? Math.floor(grid[i][j-1] / 10) : null\n                const east = j < ysize - 1 ? Math.floor(grid[i][j+1] / 10) : null\n\n                if(grid[i][j] % 10 === 1) {\n                    if(north === thermNum) {\n                        backgrounds[i].push(\"url(images/themHeadN.png)\")\n                    } else if(west === thermNum) {\n                        backgrounds[i].push(\"url(images/themHeadW.png)\")\n                    } else if(east === thermNum) {\n                        backgrounds[i].push(\"url(images/themHeadE.png)\")\n                    } else if(south === thermNum) {\n                        backgrounds[i].push(\"url(images/themHeadS.png)\")\n                    }\n                } else {\n                    if(north === thermNum && south !== thermNum) {\n                        backgrounds[i].push(\"url(images/themTipS.png)\")    \n                    } else if(south === thermNum && north !== thermNum) {\n                        backgrounds[i].push(\"url(images/themTipN.png)\")\n                    } else if(north === thermNum && south === thermNum) {\n                        backgrounds[i].push(\"url(images/themV.png)\")\n                    } else if(east === thermNum && west !== thermNum) {\n                        backgrounds[i].push(\"url(images/themTipW.png)\")    \n                    } else if(west === thermNum && east !== thermNum) {\n                        backgrounds[i].push(\"url(images/themTipE.png)\")\n                    } else if(east === thermNum && west === thermNum) {\n                        backgrounds[i].push(\"url(images/themH.png)\")\n                    }\n                }\n                \n            }\n        }\n\n        return backgrounds;\n    }\n\n    getCellBorders() {\n        let borders = []\n\n        for(let i = 0; i < this.state.grid.length; i++) {\n            borders[i] = []\n            for(let j = 0; j < this.state.grid[0].length; j++) {\n                borders[i].push(\n                    {\n                        borderTop: i===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===this.state.x - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===this.state.y - 1 ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    render() {\n        return (<Board\n                highlight={this.props.highlight} \n                key={this.props.key} \n                cellBackgrounds={this.getBackgrounds()}\n                highlighted={this.props.highlighted} \n                colsums={this.state.colsums}\n                rowsums={this.state.rowsums}\n                rows={this.props.rows}\n                cellBorders={this.getCellBorders()}\n                />)\n    }\n}\n\nexport default ThermometerBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass SkyscrapersBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            size: this.props.params.SIZE,\n            rowsums: Object.values(this.props.params.CLUES[\"1\"])\n                    .map(num => num === 0 ? null : num),\n            colsums: Object.values(this.props.params.CLUES[\"2\"])\n                    .map(num => num === 0 ? null : num),\n            endrowsums: Object.values(this.props.params.CLUES[\"3\"])\n                    .map(num => num === 0 ? null : num),\n            endcolsums: Object.values(this.props.params.CLUES[\"4\"])\n                    .map(num => num === 0 ? null : num),\n        }\n    }\n\n    render() {\n        return (<Board\n                {...this.props}\n                colsums={this.state.colsums}\n                endcolsums={this.state.endcolsums}\n                rowsums={this.state.rowsums}\n                endrowsums={this.state.endrowsums}\n\n                />)\n    }\n}\n\nexport default SkyscrapersBoard;","import React from 'react'\nimport Board from '../Board/Board'\nclass GaramBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: Object.values(this.props.params.presetvals)\n                .map(o => Object.values(o)),\n            operations: Object.values(this.props.params.op),\n            opMap: {1: \"+\", 2: \"-\", 3: \"\\u00D7\"}\n        }\n    }\n\n    getCellBorders() {\n        let borders = []\n        const {grid} = this.state;\n\n        for(let i = 0; i < grid.length; i++) {\n            borders[i] = []\n            for(let j = 0; j < grid[0].length; j++) {\n                borders[i].push(\n                    {\n                        borderTop: grid[i][j] === -2 ? \"2px solid transparent\" : \"2px solid lightgray\",\n                        borderBottom: grid[i][j] === -2 ? \"2px solid transparent\" : \"2px solid lightgray\",\n                        borderLeft: grid[i][j] === -2 ? \"2px solid transparent\" : \"2px solid lightgray\",\n                        borderRight: grid[i][j] === -2 ? \"2px solid transparent\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    // The positions of the operations is the same every time in garam, so we can hardcode.\n    getRightLabels() {\n        let rightLabels = []\n        const {grid, opMap, operations} = this.state\n        for(let i = 0; i < grid.length; i++) {\n            rightLabels[i] = []\n            for(let j = 0; j < grid[0].length; j++) {\n                rightLabels[i].push(\n                   null\n                )\n            }\n        }\n\n        rightLabels[0][1] = '='\n        rightLabels[0][5] = '='\n        rightLabels[1][3] = '='\n        rightLabels[3][1] = '='\n        rightLabels[3][5] = '='\n        rightLabels[5][1] = '='\n        rightLabels[5][5] = '='\n        rightLabels[8][1] = '='\n        rightLabels[8][5] = '='\n        \n        rightLabels[0][0] = opMap[operations[0]]\n        rightLabels[0][4] = opMap[operations[1]]\n        rightLabels[1][2] = opMap[operations[6]]\n        rightLabels[3][0] = opMap[operations[7]]\n        rightLabels[3][4] = opMap[operations[8]]\n        rightLabels[5][0] = opMap[operations[11]]\n        rightLabels[5][4] = opMap[operations[12]]\n        rightLabels[6][2] = opMap[operations[17]]\n        rightLabels[8][0] = opMap[operations[18]]\n        rightLabels[8][4] = opMap[operations[19]]\n        return rightLabels;\n    }\n\n    getBottomLabels() {\n        let bottomLabels = []\n        const {grid, opMap, operations} = this.state;\n\n        for(let i = 0; i < grid.length; i++) {\n            bottomLabels[i] = []\n            for(let j = 0; j < grid[0].length; j++) {\n                bottomLabels[i].push(\n                   null\n                )\n            }\n        }\n\n        bottomLabels[1][0] = \"=\"\n        bottomLabels[1][2] = \"=\"\n        bottomLabels[1][4] = \"=\"\n        bottomLabels[1][6] = \"=\"\n        bottomLabels[4][1] = \"=\"\n        bottomLabels[4][5] = \"=\"\n        bottomLabels[6][0] = \"=\"\n        bottomLabels[6][2] = \"=\"\n        bottomLabels[6][4] = \"=\"\n        bottomLabels[6][6] = \"=\"\n        \n        bottomLabels[0][0] = opMap[operations[2]]\n        bottomLabels[0][2] = opMap[operations[3]]\n        bottomLabels[0][4] = opMap[operations[4]]\n        bottomLabels[0][6] = opMap[operations[5]]\n        bottomLabels[3][1] = opMap[operations[9]]\n        bottomLabels[3][5] = opMap[operations[10]]\n        bottomLabels[5][0] = opMap[operations[13]]\n        bottomLabels[5][2] = opMap[operations[14]]\n        bottomLabels[5][4] = opMap[operations[15]]\n        bottomLabels[5][6] = opMap[operations[16]]\n\n        return bottomLabels;\n    }\n\n    render() {\n        return (<Board\n                {...this.props}\n                hiddenLiterals={[-2]}\n                cellBorders={this.getCellBorders()}\n                rightLabels={this.getRightLabels()}\n                bottomLabels={this.getBottomLabels()}\n                />)\n    }\n}\n\nexport default GaramBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass NonogramBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rowcounts: Object.values(this.props.params.rowcounts)\n                    .map(o => Object.values(o)),\n            colcounts: Object.values(this.props.params.colcounts)\n                .map(o => Object.values(o)),\n        }\n    }\n\n    getBackgrounds() {\n        let backgrounds = {};\n\n        \n        backgrounds[\"0\"] = \"linear-gradient(white, white)\"\n        backgrounds[\"1\"] = \"linear-gradient(black, black)\"\n        \n        \n        return backgrounds;\n    }\n\n    transpose(array) {\n        return array[0].map((_, colIndex) => array.map(row => row[colIndex]));\n    }\n\n    render() {\n        return (<Board\n                {...this.props}\n                literalBackgrounds={this.getBackgrounds()}\n                hiddenLiterals={[0, 1]}\n                startrows={this.transpose(this.state.colcounts)}\n                startcols={this.transpose(this.state.rowcounts)}\n                />)\n    }\n}\n\nexport default NonogramBoard;","import React from 'react';\nimport Board from '../Board/Board';\n\nclass SudokuBoard extends React.Component {\n\n    getCellBorders() {\n        let borders = []\n\n        for(let i = 0; i < 9; i++) {\n            borders[i] = []\n            for(let j = 0; j < 9; j++) {\n                borders[i].push(\n                    {\n                        borderTop: i%3===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderBottom: i===8 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderLeft: j%3===0 ? \"2px solid black\" : \"2px solid lightgray\",\n                        borderRight: j===8 ? \"2px solid black\" : \"2px solid lightgray\",\n                        marginLeft: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }\n                )\n            }\n        }\n\n        return borders;\n    }\n\n    render() {\n        return (<Board\n               {...this.props}\n                cellBorders={this.getCellBorders()}\n                literalSize={0.7}\n                />)\n    }\n}\n\nexport default SudokuBoard;","import axios from \"axios\";\n\nasync function getExamples() {\n    const response = await axios.get(\"examples\");\n    return response.data;\n}\n\n\nasync function getExampleData(exampleName) {\n    const response = await axios.get(`examples/${exampleName}`);\n    return response.data;\n}\n\nasync function getEprime() {\n    const response = await axios.get(\"api/eprime\");\n    return response.data;\n}\n\nasync function createJob(options) {\n    const response = await axios.post(\"api/job\", options)\n    return response.data\n}\n\nasync function getJob(jobId) {\n    const response = await axios.get(`api/job/${jobId}`);\n    return response.data\n}\n\nasync function getJobOutput(jobId) {\n    const response = await axios.get(`api/job/${jobId}/output`);\n    return response.data\n}\n\n\nexport { getExamples, getExampleData, getEprime, createJob, getJob, getJobOutput};\n\n","import React from 'react';\nimport { Spinner, Alert } from 'react-bootstrap';\n\nimport * as API from \"../API\";\n\nclass JobWait extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            status: \"pending\",\n            pollDelay: 1000,\n            pollCount: 0,\n            error: null,\n            log: null,\n            progress: null\n        }\n    }\n    componentDidMount() {\n        this.timer = setInterval(() => this.checkStatus(), this.state.pollDelay);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.pollDelay !== this.state.pollDelay) {\n            clearInterval(this.timer)\n            this.timer = setInterval(() => this.checkStatus(), this.state.pollDelay)\n            \n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    checkStatus() {\n        API.getJob(this.props.jobId)\n            .then(res => {\n                res.status === \"finished\" ?\n                    API.getJobOutput(this.props.jobId)\n                        .then(output => {\n                            clearInterval(this.timer)\n                            this.props.setInput(output, this.props.mode)\n                        }).catch(error => {\n                            clearInterval(this.timer)\n                            if (error.response) {\n                                this.setState({ error: error.response.data })\n                            } else {\n                                this.setState({ error: error })\n                            }\n\n                        })\n                : this.setState({log: res.log, progress: res.progress})\n            }\n            )\n        this.setState({ pollCount: this.state.pollCount + 1 })\n        // Poll less frequently after the first 30 seconds\n        if (this.state.pollCount === 30) {\n            this.setState({ pollDelay: 10000 })\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.state.error !== null ? (\n                    <>\n                        <h4>demystify job failed</h4>\n\n                        <p><b>Job ID:</b> {this.props.jobId}</p>\n                        <Alert variant=\"warning\" className=\"m-4\"><b>Error message: </b>{this.state.error}</Alert>\n\n                    </>\n                ) :\n                    (\n                        <>\n                            <Spinner animation=\"border\" />\n                            <h4>demystify is running... </h4>\n                            <p><b>Job ID:</b> {this.props.jobId}</p>\n                            <p>If you don't want to wait here for the job to complete you can check its progress later\n                                at: <br /> <a href={window.location + \"api/job/\" + this.props.jobId}>{window.location + \"api/job/\" + this.props.jobId}</a>\n                                <br /> and then save the result when it's ready from:\n                                <br /> <a href={window.location + \"api/job/\" + this.props.jobId + \"/output\"}>{window.location + \"api/job/\" + this.props.jobId + \"/output\"}</a>\n                                {this.state.log && \n                                    <Alert className=\"m-4\" variant=\"info\">\n                                        {this.state.progress && <b>{this.state.progress}</b>}\n                                        <br />\n                                        <div\n                                            style={{ \n                                                    maxHeight: \"8em\", \n                                                    overflowY: \"scroll\", \n                                                    display: \"flex\", \n                                                    flexDirection: \"column-reverse\",\n                                                    size: \"10pt\"}}>\n\n                                            {this.state.log.reverse().map(l => <p style={{textAlign: \"left\"}}>{l}</p>)}\n                                        </div>\n                                        \n                                    </Alert>}\n                            </p>\n                        </>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default JobWait;","import React from 'react';\nimport NavSwitcher from './NavSwitcher';\nimport Board from './Board/Board';\nimport ExplanationList from \"./Explanations/ExplanationList\";\n\nimport { Row, Col, Card, Button, Alert } from 'react-bootstrap';\n\nimport TentsBoard from './PuzzleBoards/TentsBoard';\nimport BinairoBoard from './PuzzleBoards/BinairoBoard';\nimport KillerBoard from './PuzzleBoards/KillerBoard';\nimport KakuroBoard from './PuzzleBoards/KakuroBoard';\nimport StarBattleBoard from './PuzzleBoards/StarBattleBoard';\nimport FutoshikiBoard from './PuzzleBoards/FutoshikiBoard';\nimport ThermometerBoard from './PuzzleBoards/ThermometerBoard';\nimport SkyscrapersBoard from './PuzzleBoards/SkyscrapersBoard';\nimport GaramBoard from './PuzzleBoards/GaramBoard';\nimport NonogramBoard from './PuzzleBoards/NonogramBoard';\nimport SudokuBoard from './PuzzleBoards/SudokuBoard';\nimport JobWait from './JobWait';\n\nimport * as API from \"../API\";\n\n/**\n * Main puzzle visualiser with a board on the left and explanations on the right.\n */\nclass PuzzleStepper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentStep: 0,\n            highlightedLiterals: -1,\n            highlightedExplanations: [],\n            selectedLiteral: null,\n            currentChoice: 0,\n            selectedChoice: 0,\n            type: this.props.type,\n            params: this.props.params,\n            inputObject: this.props.inputObject,\n            continueData: this.props.continueData,\n            isWaiting: false,\n            finishedPuzzle: false,\n            error: null\n        }\n    }\n\n    isChoicesStep() {\n        return (this.props.mode === \"manual\") && !this.state.finishedPuzzle && (this.state.currentStep === this.state.inputObject.length - 1)\n    }\n\n    isLitForceStep() {\n        return (this.props.mode === \"force\") && !this.state.finishedPuzzle && (this.state.currentStep === this.state.inputObject.length - 1)\n    }\n\n    /* Two-way highlighting system: mouseover an explanation and see relevant literals,\n        mouseover a literals to see relevant explanations. \n    */\n    highlightLiteral(val) {\n        this.setState((prev) => { return { highlightedLiterals: prev.highlightedLiterals === val ? -1 : val } });\n    }\n\n    highlightExplanation(val) {\n        this.setState((prev) => \n            { return { \n                highlightedExplanations:\n                    JSON.stringify(prev.highlightedExplanations)===JSON.stringify(val) ? \n                        [] : val } });\n    }\n\n    // Passed to the NavSwitcher for overall steps\n    setCurrentStep(step) {\n        this.setState({ currentStep: step, currentChoice: 0});\n    }\n\n    // Passed to the NavSwitcher for switching between alternatives.\n    setChoice(number) {\n        this.setState({currentChoice: number})\n    }\n\n    // Choose a board if we have defined one for this puzzle type.\n    chooseBoard(boardProps) {\n        switch(this.state.type) {\n            case \"tents.eprime\":\n                return <TentsBoard {...boardProps}/>\n            case \"binairo.eprime\":\n                return <BinairoBoard {...boardProps}/>\n            case \"nice_killer.eprime\":\n                return <KillerBoard {...boardProps}/>\n            case \"star-battle.eprime\":\n                return <StarBattleBoard {...boardProps}/>\n            case \"kakuro.eprime\":\n                return <KakuroBoard {...boardProps}/>\n            case \"nfutoshiki.eprime\":\n                return <FutoshikiBoard {...boardProps}/>\n            case \"thermometer.eprime\":\n                return <ThermometerBoard {...boardProps}/>\n            case \"skyscrapers.eprime\":\n                return <SkyscrapersBoard {...boardProps}/>\n            case \"garam.eprime\":\n                return <GaramBoard {...boardProps}/>\n            case \"nonogram.eprime\":\n                return <NonogramBoard {...boardProps}/>\n            case \"x-sums.eprime\":\n                return <SudokuBoard {...boardProps} />\n            case \"miracle.eprime\":\n                return <SudokuBoard {...boardProps} />\n            case \"sudoku.eprime\":\n                return <SudokuBoard {...boardProps} />\n            default:\n                return <Board {...boardProps}/>\n        }\n    }\n\n    getEndButton() {\n        if(this.isChoicesStep()) {\n            return <Button \n                        variant=\"success\" \n                        disabled={this.state.isWaiting} \n                        onClick={this.handleGetNext.bind(this)}>{\"Confirm Choice\"} </Button>\n        } else if(this.isLitForceStep()) {\n            return <Button \n                        variant=\"success\" \n                        disabled={this.state.isWaiting} \n                        onClick={this.handleGetNextWithForce.bind(this)}>{\"Confirm Choice\"} </Button>\n        } else {\n            return null\n        }\n    }\n\n    appendInput(obj, mode) {\n        this.setState({\n            currentChoice: 0,\n            selectedChoice: 0,\n            selectedLiteral: null,\n            currentStep: this.props.mode === \"force\" ? this.state.currentStep : this.state.currentStep + 1,\n            continueData: obj,\n            finishedPuzzle: obj.finished,\n            inputObject: [...(this.state.inputObject.slice(0, -1)), ...obj.result.steps],\n            isWaiting: false})\n    }\n\n    async handleGetNext() {\n\n        const {eprimeName, eprime, paramName, param, algorithm, explainedLits} = this.state.continueData;\n        const {currentChoice} = this.state;\n        const result = await API.createJob(\n            {\n                eprimeName: eprimeName, \n                eprime: eprime, \n                paramName: paramName,\n                param: param, \n                algorithm: algorithm, \n                numSteps: 1, \n                explainedLits: explainedLits, \n                choice: currentChoice\n            });\n        this.setState({isWaiting: true, jobId: result.jobId})\n    }\n\n    async handleGetNextWithForce() {\n        if(!this.state.selectedLiteral) {\n            this.setState({error: \"Please choose a literal to continue.\"})\n            return\n        }\n        const {eprimeName, eprime, paramName, param, algorithm, explainedLits} = this.state.continueData;\n        const {selectedLiteral} = this.state;\n        const litChoice = {\n            row: selectedLiteral.row + 1, \n            column: selectedLiteral.column + 1, \n            value: selectedLiteral.value }\n\n        const result = await API.createJob(\n            {\n                eprimeName: eprimeName, \n                eprime: eprime, \n                paramName: paramName,\n                param: param, \n                algorithm: algorithm, \n                numSteps: 1, \n                explainedLits: explainedLits,\n                litChoice: litChoice\n            });\n        this.setState({isWaiting: true, jobId: result.jobId, error: null})\n    }\n\n    getStepData() {\n        if(this.isChoicesStep()) {\n            return this.state.inputObject[this.state.currentStep].choices[this.state.currentChoice]\n        } else {\n            return this.state.currentChoice=== 0 ?\n            this.state.inputObject[this.state.currentStep]\n            : this.state.inputObject[this.state.currentStep].otherChoices[this.state.currentChoice - 1]\n        }\n    }\n\n    getAlternatives() {\n        if(this.isChoicesStep()) {\n            return this.state.inputObject[this.state.currentStep].choices\n        } else {\n            return this.state.inputObject[this.state.currentStep].otherChoices\n        }\n    }\n\n    handleSelectChoice() {\n        this.setState({selectedChoice: this.state.currentChoice})\n    }\n\n    setSelectedLiteral(row, column, value) {\n        this.setState({selectedLiteral: {row: row, column: column, value: value}})\n    }\n    render() {\n\n        const stepData = this.getStepData()\n\n        // Core required board props. \n        const boardProps = {\n            params: this.state.params,\n            highlight: this.highlightExplanation.bind(this),\n            key: this.state.highlightedLiterals,\n            highlighted: this.state.highlightedLiterals, \n            rows: stepData.puzzleState.matrices[0].rows,\n            setSelectedLiteral: this.setSelectedLiteral.bind(this)\n        }\n\n\n        return (\n            <React.Fragment>\n                <NavSwitcher \n                    className=\"mt-3 p-3\" \n                    stepName={\"step\"} \n                    setCurrentStep={this.setCurrentStep.bind(this)} \n                    maxSteps={this.state.inputObject.length - 1} \n                    currentStep={this.state.currentStep}\n                    endButton={this.getEndButton()}\n                    />\n                {this.state.isWaiting ? \n                            <Row className=\"mt-4 d-flex justify-content-center align-items-center\">\n                                <Card className=\"mt-3\">\n                                    <Card.Body>\n                                        <JobWait jobId={this.state.jobId} setInput={this.appendInput.bind(this)} mode={this.state.mode}/>\n                                    </Card.Body>\n                                </Card>\n                            </Row>:\n                <Row className=\"mb-4\">\n                    {/*The main board: adjust width based on screen size */}\n                    <Col xs={12} md={8} lg={8} xl={6}>\n                        {this.chooseBoard(boardProps)} \n                    </Col>\n\n                    {/*The explanations*/}\n                    <Col>\n                        {this.isLitForceStep() &&\n                            <Card className=\"mt-3\">\n                                <Card.Body>\n                                    <b>Choose a literal (value on the board) to force explanations for that literal.</b>\n                                    <br /> <br /> Currently selected literal: \n                                    <b>{\n                                    this.state.selectedLiteral ? \" [\" + (this.state.selectedLiteral.row + 1)+ \", \"\n                                                                + (this.state.selectedLiteral.column + 1) + \"] with value \"\n                                                                + this.state.selectedLiteral.value : \" none\"}</b>\n                                </Card.Body>\n                            </Card>\n                        }\n                        {stepData.skippedDeductions &&\n                            <Card className=\"mt-3\">\n                                <Card.Body>\n                                    <small>Skipped some obvious deductions.</small>\n                                </Card.Body>\n                            </Card>\n                        }\n\n                        {this.state.error && <Alert className=\"mt-3\" variant=\"warning\">{this.state.error}</Alert>}\n\n                        {!this.isLitForceStep() && <ExplanationList\n                            highlight={this.highlightLiteral.bind(this)}\n\n                            /* Only one of simpleDeductions or deductions should be defined. */\n                            simpleDeductions={stepData.simpleDeductions}\n                            deduction={stepData.deduction}\n                            \n                            highlighted={this.state.highlightedExplanations} \n                            boldBorder={this.isChoicesStep() && this.state.currentChoice === this.state.selectedChoice}\n                            /* Props for displaying alternatives */\n                            choices={this.getAlternatives()}\n                            smallestMUSSize={this.state.inputObject[this.state.currentStep].smallestMUSSize}\n                            setChoice={this.setChoice.bind(this)}\n                            currentChoice={this.state.currentChoice}\n                            extraChoice={!this.isChoicesStep()}\n                            >\n                            {this.isChoicesStep() &&\n                            <> \n                                {this.state.currentChoice !== this.state.selectedChoice ?\n                                    <Button onClick={this.handleSelectChoice.bind(this)} className=\"mt-3\" variant=\"success\">Select explanation</Button>\n                                :   <Button className=\"mt-3\" disabled variant=\"success\">Currently selected</Button>}\n                                <p className=\"mt-3\">Currently selected choice: {this.state.selectedChoice + 1}</p> </>}\n                        </ExplanationList>}\n                        \n                        \n                        \n                    </Col>\n                </Row>}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PuzzleStepper;\n","import React from 'react';\n\nclass FileUploader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n        \n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props !== prevProps) {\n            if(this.props.noFile) {\n                this.fileInput.current.value = \"\"\n            }\n        }\n    }\n    uploadFile = async (e) => {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n            try {\n                const text = (e.target.result);\n                this.props.onUpload(text, this.fileInput.current.files[0].name);\n            } catch {\n                this.props.onError();\n            }\n        };\n        reader.readAsText(e.target.files[0])\n    }\n\n    render() {\n        return <input \n                disabled={this.props.disabled} \n                type=\"file\" \n                ref={this.fileInput} \n                onChange={(e) => this.uploadFile(e)}\n                />\n    }\n}\n\nexport default FileUploader;","import React from 'react';\nimport {Dropdown, Spinner} from 'react-bootstrap';\n\nclass DropdownChoices extends React.Component {\n    render() {\n        const {name, choices, makeChoice, disabled, isLoading } = this.props\n        return (\n            <Dropdown onSelect={(e) => makeChoice(e)}>\n                <Dropdown.Toggle disabled={disabled} variant=\"success\" id=\"dropdown-basic\">\n                    {name}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu style={{maxHeight: \"20vh\", overflowY: \"scroll\"}}>\n                    {isLoading ?\n                        <div className=\"d-flex justify-content-center\">\n                            <Spinner animation=\"border\" />\n                        </div>\n                        :\n                        choices.map((name) =>\n                            <Dropdown.Item key={name} eventKey={name} onClick={() => makeChoice(name)}>\n                                {name}\n                            </Dropdown.Item>)}\n                </Dropdown.Menu>\n            </Dropdown>\n        )\n    }\n}\n\nexport default DropdownChoices","import React from 'react';\nimport {Form} from 'react-bootstrap';\n\nclass RadioChoices extends React.Component {\n    render() {\n        const { name, choices, labels, selected, onSelect} = this.props\n        return (\n            <Form inline className=\"mx-4 mb-3\">\n                <Form.Label className=\"mr-4\">{name[0].toUpperCase() + name.substring(1) + \":\"} </Form.Label>\n                {\n                    choices.map((choice, i) =>\n                        <Form.Check className=\"mr-4\"\n                            type=\"radio\"\n                            name={name}\n                            value={choice}\n                            checked={selected === choice}\n                            onChange={onSelect}\n                            label={labels[i]}\n                        />\n                    )\n                }\n            </Form>\n        )\n    }\n}\n\nexport default RadioChoices;","import React from 'react';\nimport { Card, Row, ListGroup, Dropdown, Alert, Spinner, Button, Form } from 'react-bootstrap'\nimport * as API from \"../../API\";\nimport FileUploader from './FileUploader';\nimport DropdownChoices from './DropdownChoices';\nimport JobWait from '../JobWait';\nimport RadioChoices from './RadioChoices';\n\n/**\n * Load a JSON input from the user's filesystem or preloaded examples.\n */\nclass MainMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            examples: [],\n            eprimeChoices: [],\n            chosenEprime: null,\n            eprime: null,\n            eprimeName: null,\n            param: null,\n            paramName: null,\n            error: \"\",\n            jobId: null,\n            isLoadingExamples: true,\n            isLoadingExampleJSON: false,\n            mode: \"default\",\n            algorithm: \"cascade-fast\",\n            isQueueing: false,\n            isWaiting: false\n        };\n    }\n\n    componentDidMount() {\n        API.getExamples()\n            .then(res => this.setState({ examples: res },\n                () => this.setState({ isLoadingExamples: false })));\n        API.getEprime()\n            .then(res => this.setState({ eprimeChoices: res },\n                () => this.setState({ isLoadingEprime: false })));\n    }\n\n    async handleGo() {\n        if (!this.state.eprimeName || !this.state.paramName) {\n            this.setError(\n                \"Please select .eprime and .param files to run Demystify.\");\n            return;\n        }\n\n        this.setState({ isRunning: true });\n        const { eprimeName, eprime, paramName, param, mode, algorithm } = this.state;\n        const numSteps = mode === \"default\" ? -1 : 0;\n        const getInitial = mode === \"force\"\n        try {\n            const result = await API.createJob(\n                {\n                    eprimeName: eprimeName,\n                    eprime: eprime,\n                    paramName: paramName,\n                    param: param,\n                    algorithm: algorithm,\n                    numSteps: numSteps,\n                    explainedLits: [],\n                    getInitial: getInitial\n                });\n\n            this.setState({ isWaiting: true, jobId: result.jobId })\n\n        } catch (err) {\n            this.setError(\n                \"There was a problem running Demystify on the server.\");\n            this.setState({ isRunning: false });\n        }\n    }\n\n    setError(message) {\n        this.setState({ error: message });\n    }\n\n    componentDidUpdate = () => {\n        if (this.state.isQueueing) {\n            window.onbeforeunload = () => { return true; }\n        } else {\n            window.onbeforeunload = undefined\n        }\n    }\n\n    async getExamples() {\n        const examples = await API.getExamples();\n\n        try {\n            const items = examples.map(name =>\n                <Dropdown.Item>\n                    {name}\n                </Dropdown.Item>);\n            return items;\n        } catch {\n            return (\n                <Alert className=\"m-0\" variant=\"warning\">\n                    Error fetching examples.\n                </Alert>)\n        }\n    }\n\n    async chooseExample(name) {\n        this.setState({ isLoadingExampleJSON: true })\n        const example = await API.getExampleData(name);\n        this.props.setInput({ result: example }, \"default\");\n    }\n\n    chooseEprime(name) {\n\n        const both = name.toString().split(\",\");\n        this.setState(\n            {\n                eprimeName: both[0],\n                eprime: null,\n                paramName: both[1].replace(/\\s/g, ''),\n                param: null,\n                chosenEprime: both[1].replace(/\\s/g, '').substr(0,8) + \"...\"})\n    }\n\n\n    handleOptionChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    render() {\n        return (\n\n            <div className=\"d-flex flex-column align-items-center\">\n                <h1 className=\"mt-3\">Demystify Visualiser</h1>\n                <img className=\"mt-3\" style={{ width: \"80px\" }} alt=\"demystify logo\" src=\"favicon.ico\" />\n\n                <Card as={Row} className=\"mt-3 pt-3 w-75\">\n                    {this.state.isWaiting ? <JobWait jobId={this.state.jobId} setInput={this.props.setInput} mode={this.state.mode} /> :\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                                <Row>\n                                    {/* Basic file selection. */}\n                                    <b className=\"mx-4\">  Load Demystify output from JSON file:</b>\n                                    <FileUploader\n                                        disabled={this.state.isQueueing || this.state.isLoadingExampleJSON}\n                                        onUpload={(text) => this.props.setInput({ result: JSON.parse(text) }, \"default\")}\n                                        onError={() => this.setError(\n                                            \"Could not read the input file. Ensure it is a JSON file produced by Demystify.\")}\n                                    />\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <b className=\"mx-4 pt-2\">View a pre-generated example:</b>\n                                    <DropdownChoices\n                                        name={\"Examples\"}\n                                        choices={this.state.examples}\n                                        makeChoice={this.chooseExample.bind(this)}\n                                        disabled={this.state.isQueueing}\n                                        isLoading={this.state.isLoadingExamples}\n                                    />\n                                    {this.state.isLoadingExampleJSON && <Spinner className=\"ml-4\" animation=\"border\" />}\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <b className=\"mx-4 pt-2\">Try your own Sudoku instance:</b>\n                                    <Button variant=\"success\" onClick={this.props.handleBuildSudoku}>Create</Button>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n\n                                <Row>\n                                    <b className=\"mx-4 mb-2\">Run Demystify live:</b>\n                                </Row>\n                                <Row>\n                                    <p className=\"mx-4 pt-2 mb-2\">Select an eprime/param combination:</p>\n                                    <DropdownChoices\n                                        name={this.state.chosenEprime ? this.state.chosenEprime : \"Essence\"}\n                                        choices={this.state.eprimeChoices}\n                                        makeChoice={this.chooseEprime.bind(this)}\n                                        disabled={this.state.isQueueing}\n                                        isLoading={this.state.isLoadingEprime}\n                                    />\n                                </Row>\n                                <Row>\n                                    <b className=\"mx-4 mb-2\">OR</b>\n                                </Row>\n                                <Row>\n                                    <p className=\"mx-4\">Upload puzzle description (.eprime): </p>\n                                    <FileUploader\n                                        disabled={this.state.isQueueing || this.state.isLoadingExampleJSON}\n                                        onUpload={(text, name) => this.setState({ chosenEprime: null, eprime: text, eprimeName: name })}\n                                        onError={() => this.setError(\n                                            \"Could not read the input file. Ensure it is a valid .eprime file.\")}\n                                        noFile={this.state.eprime === null}\n                                    />\n                                </Row>\n\n                                <Row>\n                                    <p className=\"mx-4\">and puzzle instance (.param): </p>\n                                    <FileUploader\n                                        disabled={this.state.isQueueing || this.state.isLoadingExampleJSON}\n                                        onUpload={(text, name) => this.setState({ chosenEprime: null, param: text, paramName: name })}\n                                        onError={() => this.setError(\n                                            \"Could not read the input file. Ensure it is a valid .param file.\")}\n                                        noFile={this.state.param === null}\n                                    />\n                                </Row>\n                                <Row>\n                                    <RadioChoices\n                                        name={\"mode\"}\n                                        choices={[\"default\", \"manual\", \"force\"]}\n                                        labels={[\"Use default MUS choices\", \"Choose MUSes manually\", \"Force literal choices.\"]}\n                                        selected={this.state.mode}\n                                        onSelect={this.handleOptionChange.bind(this)} />\n                                </Row>\n                                <Row>\n                                    <RadioChoices\n                                        name={\"algorithm\"}\n                                        choices={[\"cascade-fast\", \"cascade-more\", \"forqes\"]}\n                                        labels={[\"Cascade - faster\", \"Cascade - more choices\", \"FORQES\"]}\n                                        selected={this.state.algorithm}\n                                        onSelect={this.handleOptionChange.bind(this)} />\n                                </Row>\n                                <Row>\n                                    <Button\n                                        disabled={this.state.isQueueing || this.state.isLoadingExampleJSON}\n                                        className=\"mx-4\"\n                                        variant=\"success\"\n                                        onClick={this.handleGo.bind(this)}>\n                                        Go\n                                    </Button>\n\n                                    {this.state.isQueueing &&\n                                        <React.Fragment>\n                                            <Spinner animation=\"border\" />\n                                            <p className=\"ml-4\">Setting up Demystify job...</p>\n                                        </React.Fragment>\n\n                                    }\n                                </Row>\n\n                            </ListGroup.Item>\n\n                        </ListGroup>}\n                </Card>\n                {this.state.error.length > 0 &&\n                    <Alert variant=\"warning\" className=\"mt-3 p-4 w-75 text-center\">\n                        {this.state.error}\n                    </Alert>}\n            </div>\n        )\n    }\n}\n\nexport default MainMenu;","import React from 'react';\nimport SquareRow from './Board/SquareRow';\nimport SquareCol from './Board/SquareCol';\nimport { Card, Row, Col, Form, Button, Alert } from 'react-bootstrap'\nimport JobWait from './JobWait';\nimport * as API from \"../API\";\n\nclass SudokuBuilder extends React.Component {\n    state = {\n        grid: Array.apply(null, Array(9)).map((v, i) => Array.apply(null, Array(9)).map((w, j) => \"\")),\n        isRunning: false,\n        isWaiting: false,\n        error: null,\n    }\n\n    getSudokuBorders(i, j) {\n        return {\n            borderTop: i % 3 === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n            borderBottom: i === 8 ? \"2px solid black\" : \"2px solid lightgray\",\n            borderLeft: j % 3 === 0 ? \"2px solid black\" : \"2px solid lightgray\",\n            borderRight: j === 8 ? \"2px solid black\" : \"2px solid lightgray\",\n            marginLeft: \"-2px\",\n            marginBottom: \"-2px\",\n        }\n    }\n\n    handleChange(i, j, e) {\n        // Match single digits or empty string\n        if(/^\\d$|^$/.test(e.target.value)) {\n            this.updateGrid(i, j, e.target.value)\n        }\n    }\n\n    updateGrid(i, j, v) {\n        let newGrid = this.state.grid\n        newGrid[i][j] = v\n        this.setState({grid: newGrid})\n    }\n\n    getParamString() {\n        const {grid} = this.state;\n\n        return \"letting fixed be \\n\\n\" + \"[\" + grid.map(row => \"\\n    [\" + row.map(v => v===\"\" ? \"0\" : v)+ \"]\") + \"\\n]\"\n    }\n\n    handleSave() {\n        const element = document.createElement(\"a\");\n        const file = new Blob([this.getParamString()],    \n               {type: 'text/plain;charset=utf-8'});\n        element.href = URL.createObjectURL(file);\n        element.download = \"sudoku_builder.param\";\n        document.body.appendChild(element);\n        element.click();\n    }\n\n    async handleRun() {\n        this.setState({ isRunning: true });\n\n        try {\n            const result = await API.createJob(\n                {\n                    eprimeName: \"sudoku.eprime\", \n                    eprime: null, \n                    paramName: \"sudoku_builder_\" + Date.now() + \".param\", \n                    param: this.getParamString(), \n                    algorithm: \"cascade\",\n                    numSteps: -1, \n                    explainedLits: [],\n                });\n\n            this.setState({isWaiting: true, jobId: result.jobId})\n            \n        } catch (err) {\n            this.setError(\n                \"There was a problem running Demystify on the server.\");\n            this.setState({ isRunning: false });\n        }\n    }\n    \n    setError(err) {\n        this.setState({error: err})\n    }\n    render() {\n        const {grid} = this.state\n        return (\n            <>\n                <Row className=\"d-flex justify-content-center\">\n                    <Col xs={12} lg={8}>\n                        <Card className=\"mt-3 pt-3 w-100\" >\n                            <Card.Body className=\"d-flex justify-content-between\">\n                                <Button disabled={this.state.isRunning} onClick={this.handleSave.bind(this)} variant=\"success\">Save as .param file</Button>\n                                <p className=\"mt-2\" style={{textAlign: \"center\"}}>Fill in your desired starting grid values: </p>\n                                <Button disabled={this.state.isRunning} onClick={this.handleRun.bind(this)} variant=\"success\">Run Demystify</Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n\n\n                </Row>\n                {this.state.error && <Alert className=\"mt-3\" variant=\"warning\">{this.state.error}</Alert>}\n                <Row className=\"d-flex justify-content-center\">\n                    <Col xs={12} sm={8} md={8} lg={5}>\n                        <Card className=\"mt-3 pt-3\">\n                            <Card.Body>\n                            {this.state.isWaiting ? <JobWait jobId={this.state.jobId} setInput={this.props.setInput} mode={this.state.mode}/> :\n                                grid.map((row, i) =>\n                                    <SquareRow>\n                                        {row.map((v, j) =>\n                                            <SquareCol\n                                                borders={this.getSudokuBorders(i, j)}\n                                            >\n                                                <Form.Control \n                                                    className=\"m-0 w-100 h-100\" \n                                                    style={{\n                                                        border: 0, \n                                                        textAlign: \"center\", \n                                                        fontWeight: \"bold\",\n                                                        fontSize: \"2vw\"}} \n                                                    value={v}\n                                                    onFocus = {() => this.updateGrid(i, j, \"\")} \n                                                    type=\"text\" \n                                                    size=\"1\"\n                                                    onChange={(e) => this.handleChange(i, j, e)}/>\n                                            </SquareCol>)}\n                                    </SquareRow>)}\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </>\n\n        )\n    }\n}\n\nexport default SudokuBuilder;","import React from 'react';\n\nimport { Container} from 'react-bootstrap';\nimport PuzzleStepper from './PuzzleStepper';\n\nimport MainMenu from './Menu/MainMenu';\nimport SudokuBuilder from './SudokuBuilder';\n\n/**\n * Currently the main content component for this application.\n */\nclass DemystifyVisualiser extends React.Component {\n  state = {\n    inputObject: [],\n    type: \"\",\n    params: {},\n    error: false,\n    mode: \"default\",\n    continueData: null,\n    buildSudoku: false\n  }\n  \n  // Load the steps, the type of puzzle, and the params (configuration) of the puzzle\n  setJSONInput(obj, mode) {\n    const result = obj.result;\n\n    this.setState({ continueData: obj, inputObject: result.steps, type: result.name, params: result.params, mode: mode},\n      () => !(this.state.inputObject && this.state.type && this.state.params)  \n      && this.setError()) \n    \n    // If we already finished the puzzle, switch to non-interactive\n    obj.finished && this.setState({mode: \"default\"})\n  }\n\n\n  // Avoid invalid JSON\n  setError() {\n    this.setState({error: true});\n  }\n\n  conponentDidUpdate(prevProps, prevState) {\n    if(prevState.error) this.setState({error: false});\n  }\n\n  handleBuildSudoku() {\n    this.setState({buildSudoku: true})\n  }\n  render = () => {\n    return (\n      <Container fluid style={{textAlign: \"center\"}}>\n        \n        {/*If the puzzle has not been correctly loaded, display the main menu*/\n          (this.state.inputObject.length === 0 || this.state.error) ?\n            this.state.buildSudoku ? \n              <SudokuBuilder \n                setInput={this.setJSONInput.bind(this)} \n                />\n              :\n              <MainMenu \n                setInput={this.setJSONInput.bind(this)} \n                handleBuildSudoku={this.handleBuildSudoku.bind(this)}/>\n          :\n          /*Otherwise display the main puzzle visualiser*/\n            <PuzzleStepper\n              inputObject={this.state.inputObject}\n              continueData={this.state.continueData}\n              type={this.state.type}\n              params={this.state.params} \n              mode={this.state.mode} />\n        }\n      </Container>\n    )\n  }\n}\n\nexport default DemystifyVisualiser\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport DemystifyVisualiser from './components/DemystifyVisualiser';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DemystifyVisualiser/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}