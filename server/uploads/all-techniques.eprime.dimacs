p cnf 1441 5749                                                                                     

1 0
c Encoding variable: grid_00000_00000 with domain: bool (representing constraint )
c Var 'grid_00000_00000' direct represents '0' with '-2'
c Var 'grid_00000_00000' direct represents '1' with '2'
c Var 'grid_00000_00000' order represents '1' with '1'
c Var 'grid_00000_00000' order represents '0' with '-2'
c Encoding variable: grid_00000_00001 with domain: bool (representing constraint )
c Var 'grid_00000_00001' direct represents '0' with '-3'
c Var 'grid_00000_00001' direct represents '1' with '3'
c Var 'grid_00000_00001' order represents '1' with '1'
c Var 'grid_00000_00001' order represents '0' with '-3'
c Encoding variable: grid_00000_00002 with domain: bool (representing constraint )
c Var 'grid_00000_00002' direct represents '0' with '-4'
c Var 'grid_00000_00002' direct represents '1' with '4'
c Var 'grid_00000_00002' order represents '1' with '1'
c Var 'grid_00000_00002' order represents '0' with '-4'
c Encoding variable: grid_00000_00003 with domain: bool (representing constraint )
c Var 'grid_00000_00003' direct represents '0' with '-5'
c Var 'grid_00000_00003' direct represents '1' with '5'
c Var 'grid_00000_00003' order represents '1' with '1'
c Var 'grid_00000_00003' order represents '0' with '-5'
c Encoding variable: grid_00000_00004 with domain: bool (representing constraint )
c Var 'grid_00000_00004' direct represents '0' with '-6'
c Var 'grid_00000_00004' direct represents '1' with '6'
c Var 'grid_00000_00004' order represents '1' with '1'
c Var 'grid_00000_00004' order represents '0' with '-6'
c Encoding variable: grid_00000_00005 with domain: bool (representing constraint )
c Var 'grid_00000_00005' direct represents '0' with '-7'
c Var 'grid_00000_00005' direct represents '1' with '7'
c Var 'grid_00000_00005' order represents '1' with '1'
c Var 'grid_00000_00005' order represents '0' with '-7'
c Encoding variable: grid_00000_00006 with domain: bool (representing constraint )
c Var 'grid_00000_00006' direct represents '0' with '-8'
c Var 'grid_00000_00006' direct represents '1' with '8'
c Var 'grid_00000_00006' order represents '1' with '1'
c Var 'grid_00000_00006' order represents '0' with '-8'
c Encoding variable: grid_00000_00007 with domain: bool (representing constraint )
c Var 'grid_00000_00007' direct represents '0' with '-9'
c Var 'grid_00000_00007' direct represents '1' with '9'
c Var 'grid_00000_00007' order represents '1' with '1'
c Var 'grid_00000_00007' order represents '0' with '-9'
c Encoding variable: grid_00000_00008 with domain: bool (representing constraint )
c Var 'grid_00000_00008' direct represents '0' with '-10'
c Var 'grid_00000_00008' direct represents '1' with '10'
c Var 'grid_00000_00008' order represents '1' with '1'
c Var 'grid_00000_00008' order represents '0' with '-10'
c Encoding variable: grid_00000_00009 with domain: bool (representing constraint )
c Var 'grid_00000_00009' direct represents '0' with '-11'
c Var 'grid_00000_00009' direct represents '1' with '11'
c Var 'grid_00000_00009' order represents '1' with '1'
c Var 'grid_00000_00009' order represents '0' with '-11'
c Encoding variable: grid_00001_00000 with domain: bool (representing constraint )
c Var 'grid_00001_00000' direct represents '0' with '-12'
c Var 'grid_00001_00000' direct represents '1' with '12'
c Var 'grid_00001_00000' order represents '1' with '1'
c Var 'grid_00001_00000' order represents '0' with '-12'
c Encoding variable: grid_00001_00001 with domain: bool (representing constraint )
c Var 'grid_00001_00001' direct represents '0' with '-13'
c Var 'grid_00001_00001' direct represents '1' with '13'
c Var 'grid_00001_00001' order represents '1' with '1'
c Var 'grid_00001_00001' order represents '0' with '-13'
c Encoding variable: grid_00001_00002 with domain: bool (representing constraint )
c Var 'grid_00001_00002' direct represents '0' with '-14'
c Var 'grid_00001_00002' direct represents '1' with '14'
c Var 'grid_00001_00002' order represents '1' with '1'
c Var 'grid_00001_00002' order represents '0' with '-14'
c Encoding variable: grid_00001_00003 with domain: bool (representing constraint )
c Var 'grid_00001_00003' direct represents '0' with '-15'
c Var 'grid_00001_00003' direct represents '1' with '15'
c Var 'grid_00001_00003' order represents '1' with '1'
c Var 'grid_00001_00003' order represents '0' with '-15'
c Encoding variable: grid_00001_00004 with domain: bool (representing constraint )
c Var 'grid_00001_00004' direct represents '0' with '-16'
c Var 'grid_00001_00004' direct represents '1' with '16'
c Var 'grid_00001_00004' order represents '1' with '1'
c Var 'grid_00001_00004' order represents '0' with '-16'
c Encoding variable: grid_00001_00005 with domain: bool (representing constraint )
c Var 'grid_00001_00005' direct represents '0' with '-17'
c Var 'grid_00001_00005' direct represents '1' with '17'
c Var 'grid_00001_00005' order represents '1' with '1'
c Var 'grid_00001_00005' order represents '0' with '-17'
c Encoding variable: grid_00001_00006 with domain: bool (representing constraint )
c Var 'grid_00001_00006' direct represents '0' with '-18'
c Var 'grid_00001_00006' direct represents '1' with '18'
c Var 'grid_00001_00006' order represents '1' with '1'
c Var 'grid_00001_00006' order represents '0' with '-18'
c Encoding variable: grid_00001_00007 with domain: bool (representing constraint )
c Var 'grid_00001_00007' direct represents '0' with '-19'
c Var 'grid_00001_00007' direct represents '1' with '19'
c Var 'grid_00001_00007' order represents '1' with '1'
c Var 'grid_00001_00007' order represents '0' with '-19'
c Encoding variable: grid_00001_00008 with domain: bool (representing constraint )
c Var 'grid_00001_00008' direct represents '0' with '-20'
c Var 'grid_00001_00008' direct represents '1' with '20'
c Var 'grid_00001_00008' order represents '1' with '1'
c Var 'grid_00001_00008' order represents '0' with '-20'
c Encoding variable: grid_00001_00009 with domain: bool (representing constraint )
c Var 'grid_00001_00009' direct represents '0' with '-21'
c Var 'grid_00001_00009' direct represents '1' with '21'
c Var 'grid_00001_00009' order represents '1' with '1'
c Var 'grid_00001_00009' order represents '0' with '-21'
c Encoding variable: grid_00002_00000 with domain: bool (representing constraint )
c Var 'grid_00002_00000' direct represents '0' with '-22'
c Var 'grid_00002_00000' direct represents '1' with '22'
c Var 'grid_00002_00000' order represents '1' with '1'
c Var 'grid_00002_00000' order represents '0' with '-22'
c Encoding variable: grid_00002_00001 with domain: bool (representing constraint )
c Var 'grid_00002_00001' direct represents '0' with '-23'
c Var 'grid_00002_00001' direct represents '1' with '23'
c Var 'grid_00002_00001' order represents '1' with '1'
c Var 'grid_00002_00001' order represents '0' with '-23'
c Encoding variable: grid_00002_00002 with domain: bool (representing constraint )
c Var 'grid_00002_00002' direct represents '0' with '-24'
c Var 'grid_00002_00002' direct represents '1' with '24'
c Var 'grid_00002_00002' order represents '1' with '1'
c Var 'grid_00002_00002' order represents '0' with '-24'
c Encoding variable: grid_00002_00003 with domain: bool (representing constraint )
c Var 'grid_00002_00003' direct represents '0' with '-25'
c Var 'grid_00002_00003' direct represents '1' with '25'
c Var 'grid_00002_00003' order represents '1' with '1'
c Var 'grid_00002_00003' order represents '0' with '-25'
c Encoding variable: grid_00002_00004 with domain: bool (representing constraint )
c Var 'grid_00002_00004' direct represents '0' with '-26'
c Var 'grid_00002_00004' direct represents '1' with '26'
c Var 'grid_00002_00004' order represents '1' with '1'
c Var 'grid_00002_00004' order represents '0' with '-26'
c Encoding variable: grid_00002_00005 with domain: bool (representing constraint )
c Var 'grid_00002_00005' direct represents '0' with '-27'
c Var 'grid_00002_00005' direct represents '1' with '27'
c Var 'grid_00002_00005' order represents '1' with '1'
c Var 'grid_00002_00005' order represents '0' with '-27'
c Encoding variable: grid_00002_00006 with domain: bool (representing constraint )
c Var 'grid_00002_00006' direct represents '0' with '-28'
c Var 'grid_00002_00006' direct represents '1' with '28'
c Var 'grid_00002_00006' order represents '1' with '1'
c Var 'grid_00002_00006' order represents '0' with '-28'
c Encoding variable: grid_00002_00007 with domain: bool (representing constraint )
c Var 'grid_00002_00007' direct represents '0' with '-29'
c Var 'grid_00002_00007' direct represents '1' with '29'
c Var 'grid_00002_00007' order represents '1' with '1'
c Var 'grid_00002_00007' order represents '0' with '-29'
c Encoding variable: grid_00002_00008 with domain: bool (representing constraint )
c Var 'grid_00002_00008' direct represents '0' with '-30'
c Var 'grid_00002_00008' direct represents '1' with '30'
c Var 'grid_00002_00008' order represents '1' with '1'
c Var 'grid_00002_00008' order represents '0' with '-30'
c Encoding variable: grid_00002_00009 with domain: bool (representing constraint )
c Var 'grid_00002_00009' direct represents '0' with '-31'
c Var 'grid_00002_00009' direct represents '1' with '31'
c Var 'grid_00002_00009' order represents '1' with '1'
c Var 'grid_00002_00009' order represents '0' with '-31'
c Encoding variable: grid_00003_00000 with domain: bool (representing constraint )
c Var 'grid_00003_00000' direct represents '0' with '-32'
c Var 'grid_00003_00000' direct represents '1' with '32'
c Var 'grid_00003_00000' order represents '1' with '1'
c Var 'grid_00003_00000' order represents '0' with '-32'
c Encoding variable: grid_00003_00001 with domain: bool (representing constraint )
c Var 'grid_00003_00001' direct represents '0' with '-33'
c Var 'grid_00003_00001' direct represents '1' with '33'
c Var 'grid_00003_00001' order represents '1' with '1'
c Var 'grid_00003_00001' order represents '0' with '-33'
c Encoding variable: grid_00003_00002 with domain: bool (representing constraint )
c Var 'grid_00003_00002' direct represents '0' with '-34'
c Var 'grid_00003_00002' direct represents '1' with '34'
c Var 'grid_00003_00002' order represents '1' with '1'
c Var 'grid_00003_00002' order represents '0' with '-34'
c Encoding variable: grid_00003_00003 with domain: bool (representing constraint )
c Var 'grid_00003_00003' direct represents '0' with '-35'
c Var 'grid_00003_00003' direct represents '1' with '35'
c Var 'grid_00003_00003' order represents '1' with '1'
c Var 'grid_00003_00003' order represents '0' with '-35'
c Encoding variable: grid_00003_00004 with domain: bool (representing constraint )
c Var 'grid_00003_00004' direct represents '0' with '-36'
c Var 'grid_00003_00004' direct represents '1' with '36'
c Var 'grid_00003_00004' order represents '1' with '1'
c Var 'grid_00003_00004' order represents '0' with '-36'
c Encoding variable: grid_00003_00005 with domain: bool (representing constraint )
c Var 'grid_00003_00005' direct represents '0' with '-37'
c Var 'grid_00003_00005' direct represents '1' with '37'
c Var 'grid_00003_00005' order represents '1' with '1'
c Var 'grid_00003_00005' order represents '0' with '-37'
c Encoding variable: grid_00003_00006 with domain: bool (representing constraint )
c Var 'grid_00003_00006' direct represents '0' with '-38'
c Var 'grid_00003_00006' direct represents '1' with '38'
c Var 'grid_00003_00006' order represents '1' with '1'
c Var 'grid_00003_00006' order represents '0' with '-38'
c Encoding variable: grid_00003_00007 with domain: bool (representing constraint )
c Var 'grid_00003_00007' direct represents '0' with '-39'
c Var 'grid_00003_00007' direct represents '1' with '39'
c Var 'grid_00003_00007' order represents '1' with '1'
c Var 'grid_00003_00007' order represents '0' with '-39'
c Encoding variable: grid_00003_00008 with domain: bool (representing constraint )
c Var 'grid_00003_00008' direct represents '0' with '-40'
c Var 'grid_00003_00008' direct represents '1' with '40'
c Var 'grid_00003_00008' order represents '1' with '1'
c Var 'grid_00003_00008' order represents '0' with '-40'
c Encoding variable: grid_00003_00009 with domain: bool (representing constraint )
c Var 'grid_00003_00009' direct represents '0' with '-41'
c Var 'grid_00003_00009' direct represents '1' with '41'
c Var 'grid_00003_00009' order represents '1' with '1'
c Var 'grid_00003_00009' order represents '0' with '-41'
c Encoding variable: grid_00004_00000 with domain: bool (representing constraint )
c Var 'grid_00004_00000' direct represents '0' with '-42'
c Var 'grid_00004_00000' direct represents '1' with '42'
c Var 'grid_00004_00000' order represents '1' with '1'
c Var 'grid_00004_00000' order represents '0' with '-42'
c Encoding variable: grid_00004_00001 with domain: bool (representing constraint )
c Var 'grid_00004_00001' direct represents '0' with '-43'
c Var 'grid_00004_00001' direct represents '1' with '43'
c Var 'grid_00004_00001' order represents '1' with '1'
c Var 'grid_00004_00001' order represents '0' with '-43'
c Encoding variable: grid_00004_00002 with domain: bool (representing constraint )
c Var 'grid_00004_00002' direct represents '0' with '-44'
c Var 'grid_00004_00002' direct represents '1' with '44'
c Var 'grid_00004_00002' order represents '1' with '1'
c Var 'grid_00004_00002' order represents '0' with '-44'
c Encoding variable: grid_00004_00003 with domain: bool (representing constraint )
c Var 'grid_00004_00003' direct represents '0' with '-45'
c Var 'grid_00004_00003' direct represents '1' with '45'
c Var 'grid_00004_00003' order represents '1' with '1'
c Var 'grid_00004_00003' order represents '0' with '-45'
c Encoding variable: grid_00004_00004 with domain: bool (representing constraint )
c Var 'grid_00004_00004' direct represents '0' with '-46'
c Var 'grid_00004_00004' direct represents '1' with '46'
c Var 'grid_00004_00004' order represents '1' with '1'
c Var 'grid_00004_00004' order represents '0' with '-46'
c Encoding variable: grid_00004_00005 with domain: bool (representing constraint )
c Var 'grid_00004_00005' direct represents '0' with '-47'
c Var 'grid_00004_00005' direct represents '1' with '47'
c Var 'grid_00004_00005' order represents '1' with '1'
c Var 'grid_00004_00005' order represents '0' with '-47'
c Encoding variable: grid_00004_00006 with domain: bool (representing constraint )
c Var 'grid_00004_00006' direct represents '0' with '-48'
c Var 'grid_00004_00006' direct represents '1' with '48'
c Var 'grid_00004_00006' order represents '1' with '1'
c Var 'grid_00004_00006' order represents '0' with '-48'
c Encoding variable: grid_00004_00007 with domain: bool (representing constraint )
c Var 'grid_00004_00007' direct represents '0' with '-49'
c Var 'grid_00004_00007' direct represents '1' with '49'
c Var 'grid_00004_00007' order represents '1' with '1'
c Var 'grid_00004_00007' order represents '0' with '-49'
c Encoding variable: grid_00004_00008 with domain: bool (representing constraint )
c Var 'grid_00004_00008' direct represents '0' with '-50'
c Var 'grid_00004_00008' direct represents '1' with '50'
c Var 'grid_00004_00008' order represents '1' with '1'
c Var 'grid_00004_00008' order represents '0' with '-50'
c Encoding variable: grid_00004_00009 with domain: bool (representing constraint )
c Var 'grid_00004_00009' direct represents '0' with '-51'
c Var 'grid_00004_00009' direct represents '1' with '51'
c Var 'grid_00004_00009' order represents '1' with '1'
c Var 'grid_00004_00009' order represents '0' with '-51'
c Encoding variable: grid_00005_00000 with domain: bool (representing constraint )
c Var 'grid_00005_00000' direct represents '0' with '-52'
c Var 'grid_00005_00000' direct represents '1' with '52'
c Var 'grid_00005_00000' order represents '1' with '1'
c Var 'grid_00005_00000' order represents '0' with '-52'
c Encoding variable: grid_00005_00001 with domain: bool (representing constraint )
c Var 'grid_00005_00001' direct represents '0' with '-53'
c Var 'grid_00005_00001' direct represents '1' with '53'
c Var 'grid_00005_00001' order represents '1' with '1'
c Var 'grid_00005_00001' order represents '0' with '-53'
c Encoding variable: grid_00005_00002 with domain: bool (representing constraint )
c Var 'grid_00005_00002' direct represents '0' with '-54'
c Var 'grid_00005_00002' direct represents '1' with '54'
c Var 'grid_00005_00002' order represents '1' with '1'
c Var 'grid_00005_00002' order represents '0' with '-54'
c Encoding variable: grid_00005_00003 with domain: bool (representing constraint )
c Var 'grid_00005_00003' direct represents '0' with '-55'
c Var 'grid_00005_00003' direct represents '1' with '55'
c Var 'grid_00005_00003' order represents '1' with '1'
c Var 'grid_00005_00003' order represents '0' with '-55'
c Encoding variable: grid_00005_00004 with domain: bool (representing constraint )
c Var 'grid_00005_00004' direct represents '0' with '-56'
c Var 'grid_00005_00004' direct represents '1' with '56'
c Var 'grid_00005_00004' order represents '1' with '1'
c Var 'grid_00005_00004' order represents '0' with '-56'
c Encoding variable: grid_00005_00005 with domain: bool (representing constraint )
c Var 'grid_00005_00005' direct represents '0' with '-57'
c Var 'grid_00005_00005' direct represents '1' with '57'
c Var 'grid_00005_00005' order represents '1' with '1'
c Var 'grid_00005_00005' order represents '0' with '-57'
c Encoding variable: grid_00005_00006 with domain: bool (representing constraint )
c Var 'grid_00005_00006' direct represents '0' with '-58'
c Var 'grid_00005_00006' direct represents '1' with '58'
c Var 'grid_00005_00006' order represents '1' with '1'
c Var 'grid_00005_00006' order represents '0' with '-58'
c Encoding variable: grid_00005_00007 with domain: bool (representing constraint )
c Var 'grid_00005_00007' direct represents '0' with '-59'
c Var 'grid_00005_00007' direct represents '1' with '59'
c Var 'grid_00005_00007' order represents '1' with '1'
c Var 'grid_00005_00007' order represents '0' with '-59'
c Encoding variable: grid_00005_00008 with domain: bool (representing constraint )
c Var 'grid_00005_00008' direct represents '0' with '-60'
c Var 'grid_00005_00008' direct represents '1' with '60'
c Var 'grid_00005_00008' order represents '1' with '1'
c Var 'grid_00005_00008' order represents '0' with '-60'
c Encoding variable: grid_00005_00009 with domain: bool (representing constraint )
c Var 'grid_00005_00009' direct represents '0' with '-61'
c Var 'grid_00005_00009' direct represents '1' with '61'
c Var 'grid_00005_00009' order represents '1' with '1'
c Var 'grid_00005_00009' order represents '0' with '-61'
c Encoding variable: grid_00006_00000 with domain: bool (representing constraint )
c Var 'grid_00006_00000' direct represents '0' with '-62'
c Var 'grid_00006_00000' direct represents '1' with '62'
c Var 'grid_00006_00000' order represents '1' with '1'
c Var 'grid_00006_00000' order represents '0' with '-62'
c Encoding variable: grid_00006_00001 with domain: bool (representing constraint )
c Var 'grid_00006_00001' direct represents '0' with '-63'
c Var 'grid_00006_00001' direct represents '1' with '63'
c Var 'grid_00006_00001' order represents '1' with '1'
c Var 'grid_00006_00001' order represents '0' with '-63'
c Encoding variable: grid_00006_00002 with domain: bool (representing constraint )
c Var 'grid_00006_00002' direct represents '0' with '-64'
c Var 'grid_00006_00002' direct represents '1' with '64'
c Var 'grid_00006_00002' order represents '1' with '1'
c Var 'grid_00006_00002' order represents '0' with '-64'
c Encoding variable: grid_00006_00003 with domain: bool (representing constraint )
c Var 'grid_00006_00003' direct represents '0' with '-65'
c Var 'grid_00006_00003' direct represents '1' with '65'
c Var 'grid_00006_00003' order represents '1' with '1'
c Var 'grid_00006_00003' order represents '0' with '-65'
c Encoding variable: grid_00006_00004 with domain: bool (representing constraint )
c Var 'grid_00006_00004' direct represents '0' with '-66'
c Var 'grid_00006_00004' direct represents '1' with '66'
c Var 'grid_00006_00004' order represents '1' with '1'
c Var 'grid_00006_00004' order represents '0' with '-66'
c Encoding variable: grid_00006_00005 with domain: bool (representing constraint )
c Var 'grid_00006_00005' direct represents '0' with '-67'
c Var 'grid_00006_00005' direct represents '1' with '67'
c Var 'grid_00006_00005' order represents '1' with '1'
c Var 'grid_00006_00005' order represents '0' with '-67'
c Encoding variable: grid_00006_00006 with domain: bool (representing constraint )
c Var 'grid_00006_00006' direct represents '0' with '-68'
c Var 'grid_00006_00006' direct represents '1' with '68'
c Var 'grid_00006_00006' order represents '1' with '1'
c Var 'grid_00006_00006' order represents '0' with '-68'
c Encoding variable: grid_00006_00007 with domain: bool (representing constraint )
c Var 'grid_00006_00007' direct represents '0' with '-69'
c Var 'grid_00006_00007' direct represents '1' with '69'
c Var 'grid_00006_00007' order represents '1' with '1'
c Var 'grid_00006_00007' order represents '0' with '-69'
c Encoding variable: grid_00006_00008 with domain: bool (representing constraint )
c Var 'grid_00006_00008' direct represents '0' with '-70'
c Var 'grid_00006_00008' direct represents '1' with '70'
c Var 'grid_00006_00008' order represents '1' with '1'
c Var 'grid_00006_00008' order represents '0' with '-70'
c Encoding variable: grid_00006_00009 with domain: bool (representing constraint )
c Var 'grid_00006_00009' direct represents '0' with '-71'
c Var 'grid_00006_00009' direct represents '1' with '71'
c Var 'grid_00006_00009' order represents '1' with '1'
c Var 'grid_00006_00009' order represents '0' with '-71'
c Encoding variable: grid_00007_00000 with domain: bool (representing constraint )
c Var 'grid_00007_00000' direct represents '0' with '-72'
c Var 'grid_00007_00000' direct represents '1' with '72'
c Var 'grid_00007_00000' order represents '1' with '1'
c Var 'grid_00007_00000' order represents '0' with '-72'
c Encoding variable: grid_00007_00001 with domain: bool (representing constraint )
c Var 'grid_00007_00001' direct represents '0' with '-73'
c Var 'grid_00007_00001' direct represents '1' with '73'
c Var 'grid_00007_00001' order represents '1' with '1'
c Var 'grid_00007_00001' order represents '0' with '-73'
c Encoding variable: grid_00007_00002 with domain: bool (representing constraint )
c Var 'grid_00007_00002' direct represents '0' with '-74'
c Var 'grid_00007_00002' direct represents '1' with '74'
c Var 'grid_00007_00002' order represents '1' with '1'
c Var 'grid_00007_00002' order represents '0' with '-74'
c Encoding variable: grid_00007_00003 with domain: bool (representing constraint )
c Var 'grid_00007_00003' direct represents '0' with '-75'
c Var 'grid_00007_00003' direct represents '1' with '75'
c Var 'grid_00007_00003' order represents '1' with '1'
c Var 'grid_00007_00003' order represents '0' with '-75'
c Encoding variable: grid_00007_00004 with domain: bool (representing constraint )
c Var 'grid_00007_00004' direct represents '0' with '-76'
c Var 'grid_00007_00004' direct represents '1' with '76'
c Var 'grid_00007_00004' order represents '1' with '1'
c Var 'grid_00007_00004' order represents '0' with '-76'
c Encoding variable: grid_00007_00005 with domain: bool (representing constraint )
c Var 'grid_00007_00005' direct represents '0' with '-77'
c Var 'grid_00007_00005' direct represents '1' with '77'
c Var 'grid_00007_00005' order represents '1' with '1'
c Var 'grid_00007_00005' order represents '0' with '-77'
c Encoding variable: grid_00007_00006 with domain: bool (representing constraint )
c Var 'grid_00007_00006' direct represents '0' with '-78'
c Var 'grid_00007_00006' direct represents '1' with '78'
c Var 'grid_00007_00006' order represents '1' with '1'
c Var 'grid_00007_00006' order represents '0' with '-78'
c Encoding variable: grid_00007_00007 with domain: bool (representing constraint )
c Var 'grid_00007_00007' direct represents '0' with '-79'
c Var 'grid_00007_00007' direct represents '1' with '79'
c Var 'grid_00007_00007' order represents '1' with '1'
c Var 'grid_00007_00007' order represents '0' with '-79'
c Encoding variable: grid_00007_00008 with domain: bool (representing constraint )
c Var 'grid_00007_00008' direct represents '0' with '-80'
c Var 'grid_00007_00008' direct represents '1' with '80'
c Var 'grid_00007_00008' order represents '1' with '1'
c Var 'grid_00007_00008' order represents '0' with '-80'
c Encoding variable: grid_00007_00009 with domain: bool (representing constraint )
c Var 'grid_00007_00009' direct represents '0' with '-81'
c Var 'grid_00007_00009' direct represents '1' with '81'
c Var 'grid_00007_00009' order represents '1' with '1'
c Var 'grid_00007_00009' order represents '0' with '-81'
c Encoding variable: grid_00008_00000 with domain: bool (representing constraint )
c Var 'grid_00008_00000' direct represents '0' with '-82'
c Var 'grid_00008_00000' direct represents '1' with '82'
c Var 'grid_00008_00000' order represents '1' with '1'
c Var 'grid_00008_00000' order represents '0' with '-82'
c Encoding variable: grid_00008_00001 with domain: bool (representing constraint )
c Var 'grid_00008_00001' direct represents '0' with '-83'
c Var 'grid_00008_00001' direct represents '1' with '83'
c Var 'grid_00008_00001' order represents '1' with '1'
c Var 'grid_00008_00001' order represents '0' with '-83'
c Encoding variable: grid_00008_00002 with domain: bool (representing constraint )
c Var 'grid_00008_00002' direct represents '0' with '-84'
c Var 'grid_00008_00002' direct represents '1' with '84'
c Var 'grid_00008_00002' order represents '1' with '1'
c Var 'grid_00008_00002' order represents '0' with '-84'
c Encoding variable: grid_00008_00003 with domain: bool (representing constraint )
c Var 'grid_00008_00003' direct represents '0' with '-85'
c Var 'grid_00008_00003' direct represents '1' with '85'
c Var 'grid_00008_00003' order represents '1' with '1'
c Var 'grid_00008_00003' order represents '0' with '-85'
c Encoding variable: grid_00008_00004 with domain: bool (representing constraint )
c Var 'grid_00008_00004' direct represents '0' with '-86'
c Var 'grid_00008_00004' direct represents '1' with '86'
c Var 'grid_00008_00004' order represents '1' with '1'
c Var 'grid_00008_00004' order represents '0' with '-86'
c Encoding variable: grid_00008_00005 with domain: bool (representing constraint )
c Var 'grid_00008_00005' direct represents '0' with '-87'
c Var 'grid_00008_00005' direct represents '1' with '87'
c Var 'grid_00008_00005' order represents '1' with '1'
c Var 'grid_00008_00005' order represents '0' with '-87'
c Encoding variable: grid_00008_00006 with domain: bool (representing constraint )
c Var 'grid_00008_00006' direct represents '0' with '-88'
c Var 'grid_00008_00006' direct represents '1' with '88'
c Var 'grid_00008_00006' order represents '1' with '1'
c Var 'grid_00008_00006' order represents '0' with '-88'
c Encoding variable: grid_00008_00007 with domain: bool (representing constraint )
c Var 'grid_00008_00007' direct represents '0' with '-89'
c Var 'grid_00008_00007' direct represents '1' with '89'
c Var 'grid_00008_00007' order represents '1' with '1'
c Var 'grid_00008_00007' order represents '0' with '-89'
c Encoding variable: grid_00008_00008 with domain: bool (representing constraint )
c Var 'grid_00008_00008' direct represents '0' with '-90'
c Var 'grid_00008_00008' direct represents '1' with '90'
c Var 'grid_00008_00008' order represents '1' with '1'
c Var 'grid_00008_00008' order represents '0' with '-90'
c Encoding variable: grid_00008_00009 with domain: bool (representing constraint )
c Var 'grid_00008_00009' direct represents '0' with '-91'
c Var 'grid_00008_00009' direct represents '1' with '91'
c Var 'grid_00008_00009' order represents '1' with '1'
c Var 'grid_00008_00009' order represents '0' with '-91'
c Encoding variable: grid_00009_00000 with domain: bool (representing constraint )
c Var 'grid_00009_00000' direct represents '0' with '-92'
c Var 'grid_00009_00000' direct represents '1' with '92'
c Var 'grid_00009_00000' order represents '1' with '1'
c Var 'grid_00009_00000' order represents '0' with '-92'
c Encoding variable: grid_00009_00001 with domain: bool (representing constraint )
c Var 'grid_00009_00001' direct represents '0' with '-93'
c Var 'grid_00009_00001' direct represents '1' with '93'
c Var 'grid_00009_00001' order represents '1' with '1'
c Var 'grid_00009_00001' order represents '0' with '-93'
c Encoding variable: grid_00009_00002 with domain: bool (representing constraint )
c Var 'grid_00009_00002' direct represents '0' with '-94'
c Var 'grid_00009_00002' direct represents '1' with '94'
c Var 'grid_00009_00002' order represents '1' with '1'
c Var 'grid_00009_00002' order represents '0' with '-94'
c Encoding variable: grid_00009_00003 with domain: bool (representing constraint )
c Var 'grid_00009_00003' direct represents '0' with '-95'
c Var 'grid_00009_00003' direct represents '1' with '95'
c Var 'grid_00009_00003' order represents '1' with '1'
c Var 'grid_00009_00003' order represents '0' with '-95'
c Encoding variable: grid_00009_00004 with domain: bool (representing constraint )
c Var 'grid_00009_00004' direct represents '0' with '-96'
c Var 'grid_00009_00004' direct represents '1' with '96'
c Var 'grid_00009_00004' order represents '1' with '1'
c Var 'grid_00009_00004' order represents '0' with '-96'
c Encoding variable: grid_00009_00005 with domain: bool (representing constraint )
c Var 'grid_00009_00005' direct represents '0' with '-97'
c Var 'grid_00009_00005' direct represents '1' with '97'
c Var 'grid_00009_00005' order represents '1' with '1'
c Var 'grid_00009_00005' order represents '0' with '-97'
c Encoding variable: grid_00009_00006 with domain: bool (representing constraint )
c Var 'grid_00009_00006' direct represents '0' with '-98'
c Var 'grid_00009_00006' direct represents '1' with '98'
c Var 'grid_00009_00006' order represents '1' with '1'
c Var 'grid_00009_00006' order represents '0' with '-98'
c Encoding variable: grid_00009_00007 with domain: bool (representing constraint )
c Var 'grid_00009_00007' direct represents '0' with '-99'
c Var 'grid_00009_00007' direct represents '1' with '99'
c Var 'grid_00009_00007' order represents '1' with '1'
c Var 'grid_00009_00007' order represents '0' with '-99'
c Encoding variable: grid_00009_00008 with domain: bool (representing constraint )
c Var 'grid_00009_00008' direct represents '0' with '-100'
c Var 'grid_00009_00008' direct represents '1' with '100'
c Var 'grid_00009_00008' order represents '1' with '1'
c Var 'grid_00009_00008' order represents '0' with '-100'
c Encoding variable: grid_00009_00009 with domain: bool (representing constraint )
c Var 'grid_00009_00009' direct represents '0' with '-101'
c Var 'grid_00009_00009' direct represents '1' with '101'
c Var 'grid_00009_00009' order represents '1' with '1'
c Var 'grid_00009_00009' order represents '0' with '-101'
c Encoding variable: fluid_00000 with domain: bool (representing constraint )
c Var 'fluid_00000' direct represents '0' with '-102'
c Var 'fluid_00000' direct represents '1' with '102'
c Var 'fluid_00000' order represents '1' with '1'
c Var 'fluid_00000' order represents '0' with '-102'
c Encoding variable: fluid_00001 with domain: bool (representing constraint )
c Var 'fluid_00001' direct represents '0' with '-103'
c Var 'fluid_00001' direct represents '1' with '103'
c Var 'fluid_00001' order represents '1' with '1'
c Var 'fluid_00001' order represents '0' with '-103'
c Encoding variable: fluid_00002 with domain: bool (representing constraint )
c Var 'fluid_00002' direct represents '0' with '-104'
c Var 'fluid_00002' direct represents '1' with '104'
c Var 'fluid_00002' order represents '1' with '1'
c Var 'fluid_00002' order represents '0' with '-104'
c Encoding variable: fluid_00003 with domain: bool (representing constraint )
c Var 'fluid_00003' direct represents '0' with '-105'
c Var 'fluid_00003' direct represents '1' with '105'
c Var 'fluid_00003' order represents '1' with '1'
c Var 'fluid_00003' order represents '0' with '-105'
c Encoding variable: fluid_00004 with domain: bool (representing constraint )
c Var 'fluid_00004' direct represents '0' with '-106'
c Var 'fluid_00004' direct represents '1' with '106'
c Var 'fluid_00004' order represents '1' with '1'
c Var 'fluid_00004' order represents '0' with '-106'
c Encoding variable: fluid_00005 with domain: bool (representing constraint )
c Var 'fluid_00005' direct represents '0' with '-107'
c Var 'fluid_00005' direct represents '1' with '107'
c Var 'fluid_00005' order represents '1' with '1'
c Var 'fluid_00005' order represents '0' with '-107'
c Encoding variable: fluid_00006 with domain: bool (representing constraint )
c Var 'fluid_00006' direct represents '0' with '-108'
c Var 'fluid_00006' direct represents '1' with '108'
c Var 'fluid_00006' order represents '1' with '1'
c Var 'fluid_00006' order represents '0' with '-108'
c Encoding variable: fluid_00007 with domain: bool (representing constraint )
c Var 'fluid_00007' direct represents '0' with '-109'
c Var 'fluid_00007' direct represents '1' with '109'
c Var 'fluid_00007' order represents '1' with '1'
c Var 'fluid_00007' order represents '0' with '-109'
c Encoding variable: fluid_00008 with domain: bool (representing constraint )
c Var 'fluid_00008' direct represents '0' with '-110'
c Var 'fluid_00008' direct represents '1' with '110'
c Var 'fluid_00008' order represents '1' with '1'
c Var 'fluid_00008' order represents '0' with '-110'
c Encoding variable: fluid_00009 with domain: bool (representing constraint )
c Var 'fluid_00009' direct represents '0' with '-111'
c Var 'fluid_00009' direct represents '1' with '111'
c Var 'fluid_00009' order represents '1' with '1'
c Var 'fluid_00009' order represents '0' with '-111'
c Encoding variable: fluid_00010 with domain: bool (representing constraint )
c Var 'fluid_00010' direct represents '0' with '-112'
c Var 'fluid_00010' direct represents '1' with '112'
c Var 'fluid_00010' order represents '1' with '1'
c Var 'fluid_00010' order represents '0' with '-112'
c Encoding variable: fluid_00011 with domain: bool (representing constraint )
c Var 'fluid_00011' direct represents '0' with '-113'
c Var 'fluid_00011' direct represents '1' with '113'
c Var 'fluid_00011' order represents '1' with '1'
c Var 'fluid_00011' order represents '0' with '-113'
c Encoding variable: fluid_00012 with domain: bool (representing constraint )
c Var 'fluid_00012' direct represents '0' with '-114'
c Var 'fluid_00012' direct represents '1' with '114'
c Var 'fluid_00012' order represents '1' with '1'
c Var 'fluid_00012' order represents '0' with '-114'
c Encoding variable: fluid_00013 with domain: bool (representing constraint )
c Var 'fluid_00013' direct represents '0' with '-115'
c Var 'fluid_00013' direct represents '1' with '115'
c Var 'fluid_00013' order represents '1' with '1'
c Var 'fluid_00013' order represents '0' with '-115'
c Encoding variable: fluid_00014 with domain: bool (representing constraint )
c Var 'fluid_00014' direct represents '0' with '-116'
c Var 'fluid_00014' direct represents '1' with '116'
c Var 'fluid_00014' order represents '1' with '1'
c Var 'fluid_00014' order represents '0' with '-116'
c Encoding variable: fluid_00015 with domain: bool (representing constraint )
c Var 'fluid_00015' direct represents '0' with '-117'
c Var 'fluid_00015' direct represents '1' with '117'
c Var 'fluid_00015' order represents '1' with '1'
c Var 'fluid_00015' order represents '0' with '-117'
c Encoding variable: fluid_00016 with domain: bool (representing constraint )
c Var 'fluid_00016' direct represents '0' with '-118'
c Var 'fluid_00016' direct represents '1' with '118'
c Var 'fluid_00016' order represents '1' with '1'
c Var 'fluid_00016' order represents '0' with '-118'
c Encoding variable: fluid_00017 with domain: bool (representing constraint )
c Var 'fluid_00017' direct represents '0' with '-119'
c Var 'fluid_00017' direct represents '1' with '119'
c Var 'fluid_00017' order represents '1' with '1'
c Var 'fluid_00017' order represents '0' with '-119'
c Encoding variable: fluid_00018 with domain: bool (representing constraint )
c Var 'fluid_00018' direct represents '0' with '-120'
c Var 'fluid_00018' direct represents '1' with '120'
c Var 'fluid_00018' order represents '1' with '1'
c Var 'fluid_00018' order represents '0' with '-120'
c Encoding variable: fluid_00019 with domain: bool (representing constraint )
c Var 'fluid_00019' direct represents '0' with '-121'
c Var 'fluid_00019' direct represents '1' with '121'
c Var 'fluid_00019' order represents '1' with '1'
c Var 'fluid_00019' order represents '0' with '-121'
c Encoding variable: fluid_00020 with domain: bool (representing constraint )
c Var 'fluid_00020' direct represents '0' with '-122'
c Var 'fluid_00020' direct represents '1' with '122'
c Var 'fluid_00020' order represents '1' with '1'
c Var 'fluid_00020' order represents '0' with '-122'
c Encoding variable: fluid_00021 with domain: bool (representing constraint )
c Var 'fluid_00021' direct represents '0' with '-123'
c Var 'fluid_00021' direct represents '1' with '123'
c Var 'fluid_00021' order represents '1' with '1'
c Var 'fluid_00021' order represents '0' with '-123'
c Encoding variable: fluid_00022 with domain: bool (representing constraint )
c Var 'fluid_00022' direct represents '0' with '-124'
c Var 'fluid_00022' direct represents '1' with '124'
c Var 'fluid_00022' order represents '1' with '1'
c Var 'fluid_00022' order represents '0' with '-124'
c Encoding variable: fluid_00023 with domain: bool (representing constraint )
c Var 'fluid_00023' direct represents '0' with '-125'
c Var 'fluid_00023' direct represents '1' with '125'
c Var 'fluid_00023' order represents '1' with '1'
c Var 'fluid_00023' order represents '0' with '-125'
c Encoding variable: fluid_00024 with domain: bool (representing constraint )
c Var 'fluid_00024' direct represents '0' with '-126'
c Var 'fluid_00024' direct represents '1' with '126'
c Var 'fluid_00024' order represents '1' with '1'
c Var 'fluid_00024' order represents '0' with '-126'
c Encoding variable: rowup_00000 with domain: bool (representing constraint )
c Var 'rowup_00000' direct represents '0' with '-127'
c Var 'rowup_00000' direct represents '1' with '127'
c Var 'rowup_00000' order represents '1' with '1'
c Var 'rowup_00000' order represents '0' with '-127'
c Encoding variable: rowup_00001 with domain: bool (representing constraint )
c Var 'rowup_00001' direct represents '0' with '-128'
c Var 'rowup_00001' direct represents '1' with '128'
c Var 'rowup_00001' order represents '1' with '1'
c Var 'rowup_00001' order represents '0' with '-128'
c Encoding variable: rowup_00002 with domain: bool (representing constraint )
c Var 'rowup_00002' direct represents '0' with '-129'
c Var 'rowup_00002' direct represents '1' with '129'
c Var 'rowup_00002' order represents '1' with '1'
c Var 'rowup_00002' order represents '0' with '-129'
c Encoding variable: rowup_00003 with domain: bool (representing constraint )
c Var 'rowup_00003' direct represents '0' with '-130'
c Var 'rowup_00003' direct represents '1' with '130'
c Var 'rowup_00003' order represents '1' with '1'
c Var 'rowup_00003' order represents '0' with '-130'
c Encoding variable: rowup_00004 with domain: bool (representing constraint )
c Var 'rowup_00004' direct represents '0' with '-131'
c Var 'rowup_00004' direct represents '1' with '131'
c Var 'rowup_00004' order represents '1' with '1'
c Var 'rowup_00004' order represents '0' with '-131'
c Encoding variable: rowup_00005 with domain: bool (representing constraint )
c Var 'rowup_00005' direct represents '0' with '-132'
c Var 'rowup_00005' direct represents '1' with '132'
c Var 'rowup_00005' order represents '1' with '1'
c Var 'rowup_00005' order represents '0' with '-132'
c Encoding variable: rowup_00006 with domain: bool (representing constraint )
c Var 'rowup_00006' direct represents '0' with '-133'
c Var 'rowup_00006' direct represents '1' with '133'
c Var 'rowup_00006' order represents '1' with '1'
c Var 'rowup_00006' order represents '0' with '-133'
c Encoding variable: rowup_00007 with domain: bool (representing constraint )
c Var 'rowup_00007' direct represents '0' with '-134'
c Var 'rowup_00007' direct represents '1' with '134'
c Var 'rowup_00007' order represents '1' with '1'
c Var 'rowup_00007' order represents '0' with '-134'
c Encoding variable: rowup_00008 with domain: bool (representing constraint )
c Var 'rowup_00008' direct represents '0' with '-135'
c Var 'rowup_00008' direct represents '1' with '135'
c Var 'rowup_00008' order represents '1' with '1'
c Var 'rowup_00008' order represents '0' with '-135'
c Encoding variable: rowup_00009 with domain: bool (representing constraint )
c Var 'rowup_00009' direct represents '0' with '-136'
c Var 'rowup_00009' direct represents '1' with '136'
c Var 'rowup_00009' order represents '1' with '1'
c Var 'rowup_00009' order represents '0' with '-136'
c Encoding variable: rowdown_00000 with domain: bool (representing constraint )
c Var 'rowdown_00000' direct represents '0' with '-137'
c Var 'rowdown_00000' direct represents '1' with '137'
c Var 'rowdown_00000' order represents '1' with '1'
c Var 'rowdown_00000' order represents '0' with '-137'
c Encoding variable: rowdown_00001 with domain: bool (representing constraint )
c Var 'rowdown_00001' direct represents '0' with '-138'
c Var 'rowdown_00001' direct represents '1' with '138'
c Var 'rowdown_00001' order represents '1' with '1'
c Var 'rowdown_00001' order represents '0' with '-138'
c Encoding variable: rowdown_00002 with domain: bool (representing constraint )
c Var 'rowdown_00002' direct represents '0' with '-139'
c Var 'rowdown_00002' direct represents '1' with '139'
c Var 'rowdown_00002' order represents '1' with '1'
c Var 'rowdown_00002' order represents '0' with '-139'
c Encoding variable: rowdown_00003 with domain: bool (representing constraint )
c Var 'rowdown_00003' direct represents '0' with '-140'
c Var 'rowdown_00003' direct represents '1' with '140'
c Var 'rowdown_00003' order represents '1' with '1'
c Var 'rowdown_00003' order represents '0' with '-140'
c Encoding variable: rowdown_00004 with domain: bool (representing constraint )
c Var 'rowdown_00004' direct represents '0' with '-141'
c Var 'rowdown_00004' direct represents '1' with '141'
c Var 'rowdown_00004' order represents '1' with '1'
c Var 'rowdown_00004' order represents '0' with '-141'
c Encoding variable: rowdown_00005 with domain: bool (representing constraint )
c Var 'rowdown_00005' direct represents '0' with '-142'
c Var 'rowdown_00005' direct represents '1' with '142'
c Var 'rowdown_00005' order represents '1' with '1'
c Var 'rowdown_00005' order represents '0' with '-142'
c Encoding variable: rowdown_00006 with domain: bool (representing constraint )
c Var 'rowdown_00006' direct represents '0' with '-143'
c Var 'rowdown_00006' direct represents '1' with '143'
c Var 'rowdown_00006' order represents '1' with '1'
c Var 'rowdown_00006' order represents '0' with '-143'
c Encoding variable: rowdown_00007 with domain: bool (representing constraint )
c Var 'rowdown_00007' direct represents '0' with '-144'
c Var 'rowdown_00007' direct represents '1' with '144'
c Var 'rowdown_00007' order represents '1' with '1'
c Var 'rowdown_00007' order represents '0' with '-144'
c Encoding variable: rowdown_00008 with domain: bool (representing constraint )
c Var 'rowdown_00008' direct represents '0' with '-145'
c Var 'rowdown_00008' direct represents '1' with '145'
c Var 'rowdown_00008' order represents '1' with '1'
c Var 'rowdown_00008' order represents '0' with '-145'
c Encoding variable: rowdown_00009 with domain: bool (representing constraint )
c Var 'rowdown_00009' direct represents '0' with '-146'
c Var 'rowdown_00009' direct represents '1' with '146'
c Var 'rowdown_00009' order represents '1' with '1'
c Var 'rowdown_00009' order represents '0' with '-146'
c Encoding variable: colup_00000 with domain: bool (representing constraint )
c Var 'colup_00000' direct represents '0' with '-147'
c Var 'colup_00000' direct represents '1' with '147'
c Var 'colup_00000' order represents '1' with '1'
c Var 'colup_00000' order represents '0' with '-147'
c Encoding variable: colup_00001 with domain: bool (representing constraint )
c Var 'colup_00001' direct represents '0' with '-148'
c Var 'colup_00001' direct represents '1' with '148'
c Var 'colup_00001' order represents '1' with '1'
c Var 'colup_00001' order represents '0' with '-148'
c Encoding variable: colup_00002 with domain: bool (representing constraint )
c Var 'colup_00002' direct represents '0' with '-149'
c Var 'colup_00002' direct represents '1' with '149'
c Var 'colup_00002' order represents '1' with '1'
c Var 'colup_00002' order represents '0' with '-149'
c Encoding variable: colup_00003 with domain: bool (representing constraint )
c Var 'colup_00003' direct represents '0' with '-150'
c Var 'colup_00003' direct represents '1' with '150'
c Var 'colup_00003' order represents '1' with '1'
c Var 'colup_00003' order represents '0' with '-150'
c Encoding variable: colup_00004 with domain: bool (representing constraint )
c Var 'colup_00004' direct represents '0' with '-151'
c Var 'colup_00004' direct represents '1' with '151'
c Var 'colup_00004' order represents '1' with '1'
c Var 'colup_00004' order represents '0' with '-151'
c Encoding variable: colup_00005 with domain: bool (representing constraint )
c Var 'colup_00005' direct represents '0' with '-152'
c Var 'colup_00005' direct represents '1' with '152'
c Var 'colup_00005' order represents '1' with '1'
c Var 'colup_00005' order represents '0' with '-152'
c Encoding variable: colup_00006 with domain: bool (representing constraint )
c Var 'colup_00006' direct represents '0' with '-153'
c Var 'colup_00006' direct represents '1' with '153'
c Var 'colup_00006' order represents '1' with '1'
c Var 'colup_00006' order represents '0' with '-153'
c Encoding variable: colup_00007 with domain: bool (representing constraint )
c Var 'colup_00007' direct represents '0' with '-154'
c Var 'colup_00007' direct represents '1' with '154'
c Var 'colup_00007' order represents '1' with '1'
c Var 'colup_00007' order represents '0' with '-154'
c Encoding variable: colup_00008 with domain: bool (representing constraint )
c Var 'colup_00008' direct represents '0' with '-155'
c Var 'colup_00008' direct represents '1' with '155'
c Var 'colup_00008' order represents '1' with '1'
c Var 'colup_00008' order represents '0' with '-155'
c Encoding variable: colup_00009 with domain: bool (representing constraint )
c Var 'colup_00009' direct represents '0' with '-156'
c Var 'colup_00009' direct represents '1' with '156'
c Var 'colup_00009' order represents '1' with '1'
c Var 'colup_00009' order represents '0' with '-156'
c Encoding variable: coldown_00000 with domain: bool (representing constraint )
c Var 'coldown_00000' direct represents '0' with '-157'
c Var 'coldown_00000' direct represents '1' with '157'
c Var 'coldown_00000' order represents '1' with '1'
c Var 'coldown_00000' order represents '0' with '-157'
c Encoding variable: coldown_00001 with domain: bool (representing constraint )
c Var 'coldown_00001' direct represents '0' with '-158'
c Var 'coldown_00001' direct represents '1' with '158'
c Var 'coldown_00001' order represents '1' with '1'
c Var 'coldown_00001' order represents '0' with '-158'
c Encoding variable: coldown_00002 with domain: bool (representing constraint )
c Var 'coldown_00002' direct represents '0' with '-159'
c Var 'coldown_00002' direct represents '1' with '159'
c Var 'coldown_00002' order represents '1' with '1'
c Var 'coldown_00002' order represents '0' with '-159'
c Encoding variable: coldown_00003 with domain: bool (representing constraint )
c Var 'coldown_00003' direct represents '0' with '-160'
c Var 'coldown_00003' direct represents '1' with '160'
c Var 'coldown_00003' order represents '1' with '1'
c Var 'coldown_00003' order represents '0' with '-160'
c Encoding variable: coldown_00004 with domain: bool (representing constraint )
c Var 'coldown_00004' direct represents '0' with '-161'
c Var 'coldown_00004' direct represents '1' with '161'
c Var 'coldown_00004' order represents '1' with '1'
c Var 'coldown_00004' order represents '0' with '-161'
c Encoding variable: coldown_00005 with domain: bool (representing constraint )
c Var 'coldown_00005' direct represents '0' with '-162'
c Var 'coldown_00005' direct represents '1' with '162'
c Var 'coldown_00005' order represents '1' with '1'
c Var 'coldown_00005' order represents '0' with '-162'
c Encoding variable: coldown_00006 with domain: bool (representing constraint )
c Var 'coldown_00006' direct represents '0' with '-163'
c Var 'coldown_00006' direct represents '1' with '163'
c Var 'coldown_00006' order represents '1' with '1'
c Var 'coldown_00006' order represents '0' with '-163'
c Encoding variable: coldown_00007 with domain: bool (representing constraint )
c Var 'coldown_00007' direct represents '0' with '-164'
c Var 'coldown_00007' direct represents '1' with '164'
c Var 'coldown_00007' order represents '1' with '1'
c Var 'coldown_00007' order represents '0' with '-164'
c Encoding variable: coldown_00008 with domain: bool (representing constraint )
c Var 'coldown_00008' direct represents '0' with '-165'
c Var 'coldown_00008' direct represents '1' with '165'
c Var 'coldown_00008' order represents '1' with '1'
c Var 'coldown_00008' order represents '0' with '-165'
c Encoding variable: coldown_00009 with domain: bool (representing constraint )
c Var 'coldown_00009' direct represents '0' with '-166'
c Var 'coldown_00009' direct represents '1' with '166'
c Var 'coldown_00009' order represents '1' with '1'
c Var 'coldown_00009' order represents '0' with '-166'
c Encoding variable: aux0 with domain: bool (representing constraint (7<=((0<grid_00000_00000) + (0<grid_00000_00001) + (0<grid_00000_00002) + (0<grid_00000_00003) + (0<grid_00000_00004) + (0<grid_00000_00005) + (0<grid_00000_00006) + (0<grid_00000_00007) + (0<grid_00000_00008) + (0<grid_00000_00009))))
c Var 'aux0' direct represents '0' with '-167'
c Var 'aux0' direct represents '1' with '167'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-167'
c Encoding variable: aux1 with domain: bool (representing constraint (8<=((0<grid_00001_00000) + (0<grid_00001_00001) + (0<grid_00001_00002) + (0<grid_00001_00003) + (0<grid_00001_00004) + (0<grid_00001_00005) + (0<grid_00001_00006) + (0<grid_00001_00007) + (0<grid_00001_00008) + (0<grid_00001_00009))))
c Var 'aux1' direct represents '0' with '-168'
c Var 'aux1' direct represents '1' with '168'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-168'
c Encoding variable: aux2 with domain: bool (representing constraint (9<=((0<grid_00002_00000) + (0<grid_00002_00001) + (0<grid_00002_00002) + (0<grid_00002_00003) + (0<grid_00002_00004) + (0<grid_00002_00005) + (0<grid_00002_00006) + (0<grid_00002_00007) + (0<grid_00002_00008) + (0<grid_00002_00009))))
c Var 'aux2' direct represents '0' with '-169'
c Var 'aux2' direct represents '1' with '169'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-169'
c Encoding variable: aux3 with domain: bool (representing constraint (5<=((0<grid_00003_00000) + (0<grid_00003_00001) + (0<grid_00003_00002) + (0<grid_00003_00003) + (0<grid_00003_00004) + (0<grid_00003_00005) + (0<grid_00003_00006) + (0<grid_00003_00007) + (0<grid_00003_00008) + (0<grid_00003_00009))))
c Var 'aux3' direct represents '0' with '-170'
c Var 'aux3' direct represents '1' with '170'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-170'
c Encoding variable: aux4 with domain: bool (representing constraint (8<=((0<grid_00004_00000) + (0<grid_00004_00001) + (0<grid_00004_00002) + (0<grid_00004_00003) + (0<grid_00004_00004) + (0<grid_00004_00005) + (0<grid_00004_00006) + (0<grid_00004_00007) + (0<grid_00004_00008) + (0<grid_00004_00009))))
c Var 'aux4' direct represents '0' with '-171'
c Var 'aux4' direct represents '1' with '171'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-171'
c Encoding variable: aux5 with domain: bool (representing constraint (6<=((0<grid_00005_00000) + (0<grid_00005_00001) + (0<grid_00005_00002) + (0<grid_00005_00003) + (0<grid_00005_00004) + (0<grid_00005_00005) + (0<grid_00005_00006) + (0<grid_00005_00007) + (0<grid_00005_00008) + (0<grid_00005_00009))))
c Var 'aux5' direct represents '0' with '-172'
c Var 'aux5' direct represents '1' with '172'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-172'
c Encoding variable: aux6 with domain: bool (representing constraint (1<=((0<grid_00006_00000) + (0<grid_00006_00001) + (0<grid_00006_00002) + (0<grid_00006_00003) + (0<grid_00006_00004) + (0<grid_00006_00005) + (0<grid_00006_00006) + (0<grid_00006_00007) + (0<grid_00006_00008) + (0<grid_00006_00009))))
c Var 'aux6' direct represents '0' with '-173'
c Var 'aux6' direct represents '1' with '173'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-173'
c Encoding variable: aux7 with domain: bool (representing constraint (4<=((0<grid_00007_00000) + (0<grid_00007_00001) + (0<grid_00007_00002) + (0<grid_00007_00003) + (0<grid_00007_00004) + (0<grid_00007_00005) + (0<grid_00007_00006) + (0<grid_00007_00007) + (0<grid_00007_00008) + (0<grid_00007_00009))))
c Var 'aux7' direct represents '0' with '-174'
c Var 'aux7' direct represents '1' with '174'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-174'
c Encoding variable: aux8 with domain: bool (representing constraint (3<=((0<grid_00008_00000) + (0<grid_00008_00001) + (0<grid_00008_00002) + (0<grid_00008_00003) + (0<grid_00008_00004) + (0<grid_00008_00005) + (0<grid_00008_00006) + (0<grid_00008_00007) + (0<grid_00008_00008) + (0<grid_00008_00009))))
c Var 'aux8' direct represents '0' with '-175'
c Var 'aux8' direct represents '1' with '175'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-175'
c Encoding variable: aux9 with domain: bool (representing constraint (4<=((0<grid_00009_00000) + (0<grid_00009_00001) + (0<grid_00009_00002) + (0<grid_00009_00003) + (0<grid_00009_00004) + (0<grid_00009_00005) + (0<grid_00009_00006) + (0<grid_00009_00007) + (0<grid_00009_00008) + (0<grid_00009_00009))))
c Var 'aux9' direct represents '0' with '-176'
c Var 'aux9' direct represents '1' with '176'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-176'
c Encoding variable: aux10 with domain: bool (representing constraint (((0<grid_00000_00000) + (0<grid_00000_00001) + (0<grid_00000_00002) + (0<grid_00000_00003) + (0<grid_00000_00004) + (0<grid_00000_00005) + (0<grid_00000_00006) + (0<grid_00000_00007) + (0<grid_00000_00008) + (0<grid_00000_00009))<=7))
c Var 'aux10' direct represents '0' with '-177'
c Var 'aux10' direct represents '1' with '177'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-177'
c Encoding variable: aux11 with domain: bool (representing constraint (((0<grid_00001_00000) + (0<grid_00001_00001) + (0<grid_00001_00002) + (0<grid_00001_00003) + (0<grid_00001_00004) + (0<grid_00001_00005) + (0<grid_00001_00006) + (0<grid_00001_00007) + (0<grid_00001_00008) + (0<grid_00001_00009))<=8))
c Var 'aux11' direct represents '0' with '-178'
c Var 'aux11' direct represents '1' with '178'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-178'
c Encoding variable: aux12 with domain: bool (representing constraint (((0<grid_00002_00000) + (0<grid_00002_00001) + (0<grid_00002_00002) + (0<grid_00002_00003) + (0<grid_00002_00004) + (0<grid_00002_00005) + (0<grid_00002_00006) + (0<grid_00002_00007) + (0<grid_00002_00008) + (0<grid_00002_00009))<=9))
c Var 'aux12' direct represents '0' with '-179'
c Var 'aux12' direct represents '1' with '179'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-179'
c Encoding variable: aux13 with domain: bool (representing constraint (((0<grid_00003_00000) + (0<grid_00003_00001) + (0<grid_00003_00002) + (0<grid_00003_00003) + (0<grid_00003_00004) + (0<grid_00003_00005) + (0<grid_00003_00006) + (0<grid_00003_00007) + (0<grid_00003_00008) + (0<grid_00003_00009))<=5))
c Var 'aux13' direct represents '0' with '-180'
c Var 'aux13' direct represents '1' with '180'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-180'
c Encoding variable: aux14 with domain: bool (representing constraint (((0<grid_00004_00000) + (0<grid_00004_00001) + (0<grid_00004_00002) + (0<grid_00004_00003) + (0<grid_00004_00004) + (0<grid_00004_00005) + (0<grid_00004_00006) + (0<grid_00004_00007) + (0<grid_00004_00008) + (0<grid_00004_00009))<=8))
c Var 'aux14' direct represents '0' with '-181'
c Var 'aux14' direct represents '1' with '181'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-181'
c Encoding variable: aux15 with domain: bool (representing constraint (((0<grid_00005_00000) + (0<grid_00005_00001) + (0<grid_00005_00002) + (0<grid_00005_00003) + (0<grid_00005_00004) + (0<grid_00005_00005) + (0<grid_00005_00006) + (0<grid_00005_00007) + (0<grid_00005_00008) + (0<grid_00005_00009))<=6))
c Var 'aux15' direct represents '0' with '-182'
c Var 'aux15' direct represents '1' with '182'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-182'
c Encoding variable: aux16 with domain: bool (representing constraint (((0<grid_00006_00000) + (0<grid_00006_00001) + (0<grid_00006_00002) + (0<grid_00006_00003) + (0<grid_00006_00004) + (0<grid_00006_00005) + (0<grid_00006_00006) + (0<grid_00006_00007) + (0<grid_00006_00008) + (0<grid_00006_00009))<=1))
c Var 'aux16' direct represents '0' with '-183'
c Var 'aux16' direct represents '1' with '183'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-183'
c Encoding variable: aux17 with domain: bool (representing constraint (((0<grid_00007_00000) + (0<grid_00007_00001) + (0<grid_00007_00002) + (0<grid_00007_00003) + (0<grid_00007_00004) + (0<grid_00007_00005) + (0<grid_00007_00006) + (0<grid_00007_00007) + (0<grid_00007_00008) + (0<grid_00007_00009))<=4))
c Var 'aux17' direct represents '0' with '-184'
c Var 'aux17' direct represents '1' with '184'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-184'
c Encoding variable: aux18 with domain: bool (representing constraint (((0<grid_00008_00000) + (0<grid_00008_00001) + (0<grid_00008_00002) + (0<grid_00008_00003) + (0<grid_00008_00004) + (0<grid_00008_00005) + (0<grid_00008_00006) + (0<grid_00008_00007) + (0<grid_00008_00008) + (0<grid_00008_00009))<=3))
c Var 'aux18' direct represents '0' with '-185'
c Var 'aux18' direct represents '1' with '185'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-185'
c Encoding variable: aux19 with domain: bool (representing constraint (((0<grid_00009_00000) + (0<grid_00009_00001) + (0<grid_00009_00002) + (0<grid_00009_00003) + (0<grid_00009_00004) + (0<grid_00009_00005) + (0<grid_00009_00006) + (0<grid_00009_00007) + (0<grid_00009_00008) + (0<grid_00009_00009))<=4))
c Var 'aux19' direct represents '0' with '-186'
c Var 'aux19' direct represents '1' with '186'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-186'
c Encoding variable: aux20 with domain: bool (representing constraint (8<=((0<grid_00002_00000) + (0<grid_00007_00000) + (0<grid_00003_00000) + (0<grid_00008_00000) + (0<grid_00004_00000) + (0<grid_00009_00000) + (0<grid_00000_00000) + (0<grid_00005_00000) + (0<grid_00001_00000) + (0<grid_00006_00000))))
c Var 'aux20' direct represents '0' with '-187'
c Var 'aux20' direct represents '1' with '187'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-187'
c Encoding variable: aux21 with domain: bool (representing constraint (10<=((0<grid_00002_00001) + (0<grid_00007_00001) + (0<grid_00003_00001) + (0<grid_00008_00001) + (0<grid_00004_00001) + (0<grid_00009_00001) + (0<grid_00000_00001) + (0<grid_00005_00001) + (0<grid_00001_00001) + (0<grid_00006_00001))))
c Var 'aux21' direct represents '0' with '-188'
c Var 'aux21' direct represents '1' with '188'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-188'
c Encoding variable: aux22 with domain: bool (representing constraint (4<=((0<grid_00002_00002) + (0<grid_00007_00002) + (0<grid_00003_00002) + (0<grid_00008_00002) + (0<grid_00004_00002) + (0<grid_00009_00002) + (0<grid_00000_00002) + (0<grid_00005_00002) + (0<grid_00001_00002) + (0<grid_00006_00002))))
c Var 'aux22' direct represents '0' with '-189'
c Var 'aux22' direct represents '1' with '189'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-189'
c Encoding variable: aux23 with domain: bool (representing constraint (5<=((0<grid_00002_00003) + (0<grid_00007_00003) + (0<grid_00003_00003) + (0<grid_00008_00003) + (0<grid_00004_00003) + (0<grid_00009_00003) + (0<grid_00000_00003) + (0<grid_00005_00003) + (0<grid_00001_00003) + (0<grid_00006_00003))))
c Var 'aux23' direct represents '0' with '-190'
c Var 'aux23' direct represents '1' with '190'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-190'
c Encoding variable: aux24 with domain: bool (representing constraint (4<=((0<grid_00002_00004) + (0<grid_00007_00004) + (0<grid_00003_00004) + (0<grid_00008_00004) + (0<grid_00004_00004) + (0<grid_00009_00004) + (0<grid_00000_00004) + (0<grid_00005_00004) + (0<grid_00001_00004) + (0<grid_00006_00004))))
c Var 'aux24' direct represents '0' with '-191'
c Var 'aux24' direct represents '1' with '191'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-191'
c Encoding variable: aux25 with domain: bool (representing constraint (5<=((0<grid_00002_00005) + (0<grid_00007_00005) + (0<grid_00003_00005) + (0<grid_00008_00005) + (0<grid_00004_00005) + (0<grid_00009_00005) + (0<grid_00000_00005) + (0<grid_00005_00005) + (0<grid_00001_00005) + (0<grid_00006_00005))))
c Var 'aux25' direct represents '0' with '-192'
c Var 'aux25' direct represents '1' with '192'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-192'
c Encoding variable: aux26 with domain: bool (representing constraint (1<=((0<grid_00002_00006) + (0<grid_00007_00006) + (0<grid_00003_00006) + (0<grid_00008_00006) + (0<grid_00004_00006) + (0<grid_00009_00006) + (0<grid_00000_00006) + (0<grid_00005_00006) + (0<grid_00001_00006) + (0<grid_00006_00006))))
c Var 'aux26' direct represents '0' with '-193'
c Var 'aux26' direct represents '1' with '193'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-193'
c Encoding variable: aux27 with domain: bool (representing constraint (7<=((0<grid_00002_00007) + (0<grid_00007_00007) + (0<grid_00003_00007) + (0<grid_00008_00007) + (0<grid_00004_00007) + (0<grid_00009_00007) + (0<grid_00000_00007) + (0<grid_00005_00007) + (0<grid_00001_00007) + (0<grid_00006_00007))))
c Var 'aux27' direct represents '0' with '-194'
c Var 'aux27' direct represents '1' with '194'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-194'
c Encoding variable: aux28 with domain: bool (representing constraint (7<=((0<grid_00002_00008) + (0<grid_00007_00008) + (0<grid_00003_00008) + (0<grid_00008_00008) + (0<grid_00004_00008) + (0<grid_00009_00008) + (0<grid_00000_00008) + (0<grid_00005_00008) + (0<grid_00001_00008) + (0<grid_00006_00008))))
c Var 'aux28' direct represents '0' with '-195'
c Var 'aux28' direct represents '1' with '195'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-195'
c Encoding variable: aux29 with domain: bool (representing constraint (4<=((0<grid_00002_00009) + (0<grid_00007_00009) + (0<grid_00003_00009) + (0<grid_00008_00009) + (0<grid_00004_00009) + (0<grid_00009_00009) + (0<grid_00000_00009) + (0<grid_00005_00009) + (0<grid_00001_00009) + (0<grid_00006_00009))))
c Var 'aux29' direct represents '0' with '-196'
c Var 'aux29' direct represents '1' with '196'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-196'
c Encoding variable: aux30 with domain: bool (representing constraint (8<=((0<grid_00002_00000) + (0<grid_00007_00000) + (0<grid_00003_00000) + (0<grid_00008_00000) + (0<grid_00004_00000) + (0<grid_00009_00000) + (0<grid_00000_00000) + (0<grid_00005_00000) + (0<grid_00001_00000) + (0<grid_00006_00000))))
c Var 'aux30' direct represents '0' with '-197'
c Var 'aux30' direct represents '1' with '197'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-197'
c Encoding variable: aux31 with domain: bool (representing constraint (10<=((0<grid_00002_00001) + (0<grid_00007_00001) + (0<grid_00003_00001) + (0<grid_00008_00001) + (0<grid_00004_00001) + (0<grid_00009_00001) + (0<grid_00000_00001) + (0<grid_00005_00001) + (0<grid_00001_00001) + (0<grid_00006_00001))))
c Var 'aux31' direct represents '0' with '-198'
c Var 'aux31' direct represents '1' with '198'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-198'
c Encoding variable: aux32 with domain: bool (representing constraint (4<=((0<grid_00002_00002) + (0<grid_00007_00002) + (0<grid_00003_00002) + (0<grid_00008_00002) + (0<grid_00004_00002) + (0<grid_00009_00002) + (0<grid_00000_00002) + (0<grid_00005_00002) + (0<grid_00001_00002) + (0<grid_00006_00002))))
c Var 'aux32' direct represents '0' with '-199'
c Var 'aux32' direct represents '1' with '199'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-199'
c Encoding variable: aux33 with domain: bool (representing constraint (5<=((0<grid_00002_00003) + (0<grid_00007_00003) + (0<grid_00003_00003) + (0<grid_00008_00003) + (0<grid_00004_00003) + (0<grid_00009_00003) + (0<grid_00000_00003) + (0<grid_00005_00003) + (0<grid_00001_00003) + (0<grid_00006_00003))))
c Var 'aux33' direct represents '0' with '-200'
c Var 'aux33' direct represents '1' with '200'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-200'
c Encoding variable: aux34 with domain: bool (representing constraint (4<=((0<grid_00002_00004) + (0<grid_00007_00004) + (0<grid_00003_00004) + (0<grid_00008_00004) + (0<grid_00004_00004) + (0<grid_00009_00004) + (0<grid_00000_00004) + (0<grid_00005_00004) + (0<grid_00001_00004) + (0<grid_00006_00004))))
c Var 'aux34' direct represents '0' with '-201'
c Var 'aux34' direct represents '1' with '201'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-201'
c Encoding variable: aux35 with domain: bool (representing constraint (5<=((0<grid_00002_00005) + (0<grid_00007_00005) + (0<grid_00003_00005) + (0<grid_00008_00005) + (0<grid_00004_00005) + (0<grid_00009_00005) + (0<grid_00000_00005) + (0<grid_00005_00005) + (0<grid_00001_00005) + (0<grid_00006_00005))))
c Var 'aux35' direct represents '0' with '-202'
c Var 'aux35' direct represents '1' with '202'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-202'
c Encoding variable: aux36 with domain: bool (representing constraint (1<=((0<grid_00002_00006) + (0<grid_00007_00006) + (0<grid_00003_00006) + (0<grid_00008_00006) + (0<grid_00004_00006) + (0<grid_00009_00006) + (0<grid_00000_00006) + (0<grid_00005_00006) + (0<grid_00001_00006) + (0<grid_00006_00006))))
c Var 'aux36' direct represents '0' with '-203'
c Var 'aux36' direct represents '1' with '203'
c Var 'aux36' order represents '1' with '1'
c Var 'aux36' order represents '0' with '-203'
c Encoding variable: aux37 with domain: bool (representing constraint (7<=((0<grid_00002_00007) + (0<grid_00007_00007) + (0<grid_00003_00007) + (0<grid_00008_00007) + (0<grid_00004_00007) + (0<grid_00009_00007) + (0<grid_00000_00007) + (0<grid_00005_00007) + (0<grid_00001_00007) + (0<grid_00006_00007))))
c Var 'aux37' direct represents '0' with '-204'
c Var 'aux37' direct represents '1' with '204'
c Var 'aux37' order represents '1' with '1'
c Var 'aux37' order represents '0' with '-204'
c Encoding variable: aux38 with domain: bool (representing constraint (7<=((0<grid_00002_00008) + (0<grid_00007_00008) + (0<grid_00003_00008) + (0<grid_00008_00008) + (0<grid_00004_00008) + (0<grid_00009_00008) + (0<grid_00000_00008) + (0<grid_00005_00008) + (0<grid_00001_00008) + (0<grid_00006_00008))))
c Var 'aux38' direct represents '0' with '-205'
c Var 'aux38' direct represents '1' with '205'
c Var 'aux38' order represents '1' with '1'
c Var 'aux38' order represents '0' with '-205'
c Encoding variable: aux39 with domain: bool (representing constraint (4<=((0<grid_00002_00009) + (0<grid_00007_00009) + (0<grid_00003_00009) + (0<grid_00008_00009) + (0<grid_00004_00009) + (0<grid_00009_00009) + (0<grid_00000_00009) + (0<grid_00005_00009) + (0<grid_00001_00009) + (0<grid_00006_00009))))
c Var 'aux39' direct represents '0' with '-206'
c Var 'aux39' direct represents '1' with '206'
c Var 'aux39' order represents '1' with '1'
c Var 'aux39' order represents '0' with '-206'
c Encoding variable: aux40 with domain: bool (representing constraint (grid_00001_00006 -> grid_00002_00006))
c Var 'aux40' direct represents '0' with '-207'
c Var 'aux40' direct represents '1' with '207'
c Var 'aux40' order represents '1' with '1'
c Var 'aux40' order represents '0' with '-207'
c Encoding variable: aux41 with domain: bool (representing constraint (grid_00005_00005 -> grid_00004_00005))
c Var 'aux41' direct represents '0' with '-208'
c Var 'aux41' direct represents '1' with '208'
c Var 'aux41' order represents '1' with '1'
c Var 'aux41' order represents '0' with '-208'
c Encoding variable: aux42 with domain: bool (representing constraint (grid_00004_00006 -> grid_00005_00006))
c Var 'aux42' direct represents '0' with '-209'
c Var 'aux42' direct represents '1' with '209'
c Var 'aux42' order represents '1' with '1'
c Var 'aux42' order represents '0' with '-209'
c Encoding variable: aux43 with domain: bool (representing constraint (grid_00004_00007 -> grid_00005_00007))
c Var 'aux43' direct represents '0' with '-210'
c Var 'aux43' direct represents '1' with '210'
c Var 'aux43' order represents '1' with '1'
c Var 'aux43' order represents '0' with '-210'
c Encoding variable: aux44 with domain: bool (representing constraint (grid_00004_00008 -> grid_00005_00008))
c Var 'aux44' direct represents '0' with '-211'
c Var 'aux44' direct represents '1' with '211'
c Var 'aux44' order represents '1' with '1'
c Var 'aux44' order represents '0' with '-211'
c Encoding variable: aux45 with domain: bool (representing constraint (grid_00001_00000 -> grid_00000_00000))
c Var 'aux45' direct represents '0' with '-212'
c Var 'aux45' direct represents '1' with '212'
c Var 'aux45' order represents '1' with '1'
c Var 'aux45' order represents '0' with '-212'
c Encoding variable: aux46 with domain: bool (representing constraint (grid_00002_00000 -> grid_00001_00000))
c Var 'aux46' direct represents '0' with '-213'
c Var 'aux46' direct represents '1' with '213'
c Var 'aux46' order represents '1' with '1'
c Var 'aux46' order represents '0' with '-213'
c Encoding variable: aux47 with domain: bool (representing constraint (grid_00003_00000 -> grid_00002_00000))
c Var 'aux47' direct represents '0' with '-214'
c Var 'aux47' direct represents '1' with '214'
c Var 'aux47' order represents '1' with '1'
c Var 'aux47' order represents '0' with '-214'
c Encoding variable: aux48 with domain: bool (representing constraint (grid_00001_00001 -> grid_00000_00001))
c Var 'aux48' direct represents '0' with '-215'
c Var 'aux48' direct represents '1' with '215'
c Var 'aux48' order represents '1' with '1'
c Var 'aux48' order represents '0' with '-215'
c Encoding variable: aux49 with domain: bool (representing constraint (grid_00002_00001 -> grid_00001_00001))
c Var 'aux49' direct represents '0' with '-216'
c Var 'aux49' direct represents '1' with '216'
c Var 'aux49' order represents '1' with '1'
c Var 'aux49' order represents '0' with '-216'
c Encoding variable: aux50 with domain: bool (representing constraint (grid_00003_00001 -> grid_00002_00001))
c Var 'aux50' direct represents '0' with '-217'
c Var 'aux50' direct represents '1' with '217'
c Var 'aux50' order represents '1' with '1'
c Var 'aux50' order represents '0' with '-217'
c Encoding variable: aux51 with domain: bool (representing constraint (grid_00000_00003 -> grid_00000_00002))
c Var 'aux51' direct represents '0' with '-218'
c Var 'aux51' direct represents '1' with '218'
c Var 'aux51' order represents '1' with '1'
c Var 'aux51' order represents '0' with '-218'
c Encoding variable: aux52 with domain: bool (representing constraint (grid_00000_00004 -> grid_00000_00003))
c Var 'aux52' direct represents '0' with '-219'
c Var 'aux52' direct represents '1' with '219'
c Var 'aux52' order represents '1' with '1'
c Var 'aux52' order represents '0' with '-219'
c Encoding variable: aux53 with domain: bool (representing constraint (grid_00000_00005 -> grid_00000_00004))
c Var 'aux53' direct represents '0' with '-220'
c Var 'aux53' direct represents '1' with '220'
c Var 'aux53' order represents '1' with '1'
c Var 'aux53' order represents '0' with '-220'
c Encoding variable: aux54 with domain: bool (representing constraint (grid_00000_00006 -> grid_00000_00005))
c Var 'aux54' direct represents '0' with '-221'
c Var 'aux54' direct represents '1' with '221'
c Var 'aux54' order represents '1' with '1'
c Var 'aux54' order represents '0' with '-221'
c Encoding variable: aux55 with domain: bool (representing constraint (grid_00000_00008 -> grid_00000_00007))
c Var 'aux55' direct represents '0' with '-222'
c Var 'aux55' direct represents '1' with '222'
c Var 'aux55' order represents '1' with '1'
c Var 'aux55' order represents '0' with '-222'
c Encoding variable: aux56 with domain: bool (representing constraint (grid_00000_00009 -> grid_00000_00008))
c Var 'aux56' direct represents '0' with '-223'
c Var 'aux56' direct represents '1' with '223'
c Var 'aux56' order represents '1' with '1'
c Var 'aux56' order represents '0' with '-223'
c Encoding variable: aux57 with domain: bool (representing constraint (grid_00001_00003 -> grid_00001_00004))
c Var 'aux57' direct represents '0' with '-224'
c Var 'aux57' direct represents '1' with '224'
c Var 'aux57' order represents '1' with '1'
c Var 'aux57' order represents '0' with '-224'
c Encoding variable: aux58 with domain: bool (representing constraint (grid_00001_00004 -> grid_00001_00005))
c Var 'aux58' direct represents '0' with '-225'
c Var 'aux58' direct represents '1' with '225'
c Var 'aux58' order represents '1' with '1'
c Var 'aux58' order represents '0' with '-225'
c Encoding variable: aux59 with domain: bool (representing constraint (grid_00001_00007 -> grid_00001_00008))
c Var 'aux59' direct represents '0' with '-226'
c Var 'aux59' direct represents '1' with '226'
c Var 'aux59' order represents '1' with '1'
c Var 'aux59' order represents '0' with '-226'
c Encoding variable: aux60 with domain: bool (representing constraint (grid_00001_00008 -> grid_00001_00009))
c Var 'aux60' direct represents '0' with '-227'
c Var 'aux60' direct represents '1' with '227'
c Var 'aux60' order represents '1' with '1'
c Var 'aux60' order represents '0' with '-227'
c Encoding variable: aux61 with domain: bool (representing constraint (grid_00002_00004 -> grid_00002_00003))
c Var 'aux61' direct represents '0' with '-228'
c Var 'aux61' direct represents '1' with '228'
c Var 'aux61' order represents '1' with '1'
c Var 'aux61' order represents '0' with '-228'
c Encoding variable: aux62 with domain: bool (representing constraint (grid_00002_00005 -> grid_00002_00004))
c Var 'aux62' direct represents '0' with '-229'
c Var 'aux62' direct represents '1' with '229'
c Var 'aux62' order represents '1' with '1'
c Var 'aux62' order represents '0' with '-229'
c Encoding variable: aux63 with domain: bool (representing constraint (grid_00002_00008 -> grid_00002_00007))
c Var 'aux63' direct represents '0' with '-230'
c Var 'aux63' direct represents '1' with '230'
c Var 'aux63' order represents '1' with '1'
c Var 'aux63' order represents '0' with '-230'
c Encoding variable: aux64 with domain: bool (representing constraint (grid_00002_00009 -> grid_00002_00008))
c Var 'aux64' direct represents '0' with '-231'
c Var 'aux64' direct represents '1' with '231'
c Var 'aux64' order represents '1' with '1'
c Var 'aux64' order represents '0' with '-231'
c Encoding variable: aux65 with domain: bool (representing constraint (grid_00001_00002 -> grid_00002_00002))
c Var 'aux65' direct represents '0' with '-232'
c Var 'aux65' direct represents '1' with '232'
c Var 'aux65' order represents '1' with '1'
c Var 'aux65' order represents '0' with '-232'
c Encoding variable: aux66 with domain: bool (representing constraint (grid_00002_00002 -> grid_00003_00002))
c Var 'aux66' direct represents '0' with '-233'
c Var 'aux66' direct represents '1' with '233'
c Var 'aux66' order represents '1' with '1'
c Var 'aux66' order represents '0' with '-233'
c Encoding variable: aux67 with domain: bool (representing constraint (grid_00003_00003 -> grid_00003_00004))
c Var 'aux67' direct represents '0' with '-234'
c Var 'aux67' direct represents '1' with '234'
c Var 'aux67' order represents '1' with '1'
c Var 'aux67' order represents '0' with '-234'
c Encoding variable: aux68 with domain: bool (representing constraint (grid_00003_00004 -> grid_00003_00005))
c Var 'aux68' direct represents '0' with '-235'
c Var 'aux68' direct represents '1' with '235'
c Var 'aux68' order represents '1' with '1'
c Var 'aux68' order represents '0' with '-235'
c Encoding variable: aux69 with domain: bool (representing constraint (grid_00003_00005 -> grid_00003_00006))
c Var 'aux69' direct represents '0' with '-236'
c Var 'aux69' direct represents '1' with '236'
c Var 'aux69' order represents '1' with '1'
c Var 'aux69' order represents '0' with '-236'
c Encoding variable: aux70 with domain: bool (representing constraint (grid_00003_00006 -> grid_00003_00007))
c Var 'aux70' direct represents '0' with '-237'
c Var 'aux70' direct represents '1' with '237'
c Var 'aux70' order represents '1' with '1'
c Var 'aux70' order represents '0' with '-237'
c Encoding variable: aux71 with domain: bool (representing constraint (grid_00003_00007 -> grid_00003_00008))
c Var 'aux71' direct represents '0' with '-238'
c Var 'aux71' direct represents '1' with '238'
c Var 'aux71' order represents '1' with '1'
c Var 'aux71' order represents '0' with '-238'
c Encoding variable: aux72 with domain: bool (representing constraint (grid_00003_00008 -> grid_00003_00009))
c Var 'aux72' direct represents '0' with '-239'
c Var 'aux72' direct represents '1' with '239'
c Var 'aux72' order represents '1' with '1'
c Var 'aux72' order represents '0' with '-239'
c Encoding variable: aux73 with domain: bool (representing constraint (grid_00004_00001 -> grid_00004_00000))
c Var 'aux73' direct represents '0' with '-240'
c Var 'aux73' direct represents '1' with '240'
c Var 'aux73' order represents '1' with '1'
c Var 'aux73' order represents '0' with '-240'
c Encoding variable: aux74 with domain: bool (representing constraint (grid_00004_00002 -> grid_00004_00001))
c Var 'aux74' direct represents '0' with '-241'
c Var 'aux74' direct represents '1' with '241'
c Var 'aux74' order represents '1' with '1'
c Var 'aux74' order represents '0' with '-241'
c Encoding variable: aux75 with domain: bool (representing constraint (grid_00004_00003 -> grid_00004_00002))
c Var 'aux75' direct represents '0' with '-242'
c Var 'aux75' direct represents '1' with '242'
c Var 'aux75' order represents '1' with '1'
c Var 'aux75' order represents '0' with '-242'
c Encoding variable: aux76 with domain: bool (representing constraint (grid_00004_00004 -> grid_00004_00003))
c Var 'aux76' direct represents '0' with '-243'
c Var 'aux76' direct represents '1' with '243'
c Var 'aux76' order represents '1' with '1'
c Var 'aux76' order represents '0' with '-243'
c Encoding variable: aux77 with domain: bool (representing constraint (grid_00005_00002 -> grid_00005_00001))
c Var 'aux77' direct represents '0' with '-244'
c Var 'aux77' direct represents '1' with '244'
c Var 'aux77' order represents '1' with '1'
c Var 'aux77' order represents '0' with '-244'
c Encoding variable: aux78 with domain: bool (representing constraint (grid_00005_00003 -> grid_00005_00002))
c Var 'aux78' direct represents '0' with '-245'
c Var 'aux78' direct represents '1' with '245'
c Var 'aux78' order represents '1' with '1'
c Var 'aux78' order represents '0' with '-245'
c Encoding variable: aux79 with domain: bool (representing constraint (grid_00005_00004 -> grid_00005_00003))
c Var 'aux79' direct represents '0' with '-246'
c Var 'aux79' direct represents '1' with '246'
c Var 'aux79' order represents '1' with '1'
c Var 'aux79' order represents '0' with '-246'
c Encoding variable: aux80 with domain: bool (representing constraint (grid_00007_00001 -> grid_00006_00001))
c Var 'aux80' direct represents '0' with '-247'
c Var 'aux80' direct represents '1' with '247'
c Var 'aux80' order represents '1' with '1'
c Var 'aux80' order represents '0' with '-247'
c Encoding variable: aux81 with domain: bool (representing constraint (grid_00008_00001 -> grid_00007_00001))
c Var 'aux81' direct represents '0' with '-248'
c Var 'aux81' direct represents '1' with '248'
c Var 'aux81' order represents '1' with '1'
c Var 'aux81' order represents '0' with '-248'
c Encoding variable: aux82 with domain: bool (representing constraint (grid_00009_00001 -> grid_00008_00001))
c Var 'aux82' direct represents '0' with '-249'
c Var 'aux82' direct represents '1' with '249'
c Var 'aux82' order represents '1' with '1'
c Var 'aux82' order represents '0' with '-249'
c Encoding variable: aux83 with domain: bool (representing constraint (grid_00006_00003 -> grid_00006_00004))
c Var 'aux83' direct represents '0' with '-250'
c Var 'aux83' direct represents '1' with '250'
c Var 'aux83' order represents '1' with '1'
c Var 'aux83' order represents '0' with '-250'
c Encoding variable: aux84 with domain: bool (representing constraint (grid_00006_00004 -> grid_00006_00005))
c Var 'aux84' direct represents '0' with '-251'
c Var 'aux84' direct represents '1' with '251'
c Var 'aux84' order represents '1' with '1'
c Var 'aux84' order represents '0' with '-251'
c Encoding variable: aux85 with domain: bool (representing constraint (grid_00006_00005 -> grid_00006_00006))
c Var 'aux85' direct represents '0' with '-252'
c Var 'aux85' direct represents '1' with '252'
c Var 'aux85' order represents '1' with '1'
c Var 'aux85' order represents '0' with '-252'
c Encoding variable: aux86 with domain: bool (representing constraint (grid_00006_00006 -> grid_00006_00007))
c Var 'aux86' direct represents '0' with '-253'
c Var 'aux86' direct represents '1' with '253'
c Var 'aux86' order represents '1' with '1'
c Var 'aux86' order represents '0' with '-253'
c Encoding variable: aux87 with domain: bool (representing constraint (grid_00006_00007 -> grid_00006_00008))
c Var 'aux87' direct represents '0' with '-254'
c Var 'aux87' direct represents '1' with '254'
c Var 'aux87' order represents '1' with '1'
c Var 'aux87' order represents '0' with '-254'
c Encoding variable: aux88 with domain: bool (representing constraint (grid_00007_00003 -> grid_00007_00004))
c Var 'aux88' direct represents '0' with '-255'
c Var 'aux88' direct represents '1' with '255'
c Var 'aux88' order represents '1' with '1'
c Var 'aux88' order represents '0' with '-255'
c Encoding variable: aux89 with domain: bool (representing constraint (grid_00007_00004 -> grid_00007_00005))
c Var 'aux89' direct represents '0' with '-256'
c Var 'aux89' direct represents '1' with '256'
c Var 'aux89' order represents '1' with '1'
c Var 'aux89' order represents '0' with '-256'
c Encoding variable: aux90 with domain: bool (representing constraint (grid_00007_00005 -> grid_00007_00006))
c Var 'aux90' direct represents '0' with '-257'
c Var 'aux90' direct represents '1' with '257'
c Var 'aux90' order represents '1' with '1'
c Var 'aux90' order represents '0' with '-257'
c Encoding variable: aux91 with domain: bool (representing constraint (grid_00007_00006 -> grid_00007_00007))
c Var 'aux91' direct represents '0' with '-258'
c Var 'aux91' direct represents '1' with '258'
c Var 'aux91' order represents '1' with '1'
c Var 'aux91' order represents '0' with '-258'
c Encoding variable: aux92 with domain: bool (representing constraint (grid_00007_00007 -> grid_00007_00008))
c Var 'aux92' direct represents '0' with '-259'
c Var 'aux92' direct represents '1' with '259'
c Var 'aux92' order represents '1' with '1'
c Var 'aux92' order represents '0' with '-259'
c Encoding variable: aux93 with domain: bool (representing constraint (grid_00008_00003 -> grid_00008_00004))
c Var 'aux93' direct represents '0' with '-260'
c Var 'aux93' direct represents '1' with '260'
c Var 'aux93' order represents '1' with '1'
c Var 'aux93' order represents '0' with '-260'
c Encoding variable: aux94 with domain: bool (representing constraint (grid_00008_00004 -> grid_00008_00005))
c Var 'aux94' direct represents '0' with '-261'
c Var 'aux94' direct represents '1' with '261'
c Var 'aux94' order represents '1' with '1'
c Var 'aux94' order represents '0' with '-261'
c Encoding variable: aux95 with domain: bool (representing constraint (grid_00008_00005 -> grid_00008_00006))
c Var 'aux95' direct represents '0' with '-262'
c Var 'aux95' direct represents '1' with '262'
c Var 'aux95' order represents '1' with '1'
c Var 'aux95' order represents '0' with '-262'
c Encoding variable: aux96 with domain: bool (representing constraint (grid_00008_00006 -> grid_00008_00007))
c Var 'aux96' direct represents '0' with '-263'
c Var 'aux96' direct represents '1' with '263'
c Var 'aux96' order represents '1' with '1'
c Var 'aux96' order represents '0' with '-263'
c Encoding variable: aux97 with domain: bool (representing constraint (grid_00008_00007 -> grid_00008_00008))
c Var 'aux97' direct represents '0' with '-264'
c Var 'aux97' direct represents '1' with '264'
c Var 'aux97' order represents '1' with '1'
c Var 'aux97' order represents '0' with '-264'
c Encoding variable: aux98 with domain: bool (representing constraint (grid_00005_00000 -> grid_00006_00000))
c Var 'aux98' direct represents '0' with '-265'
c Var 'aux98' direct represents '1' with '265'
c Var 'aux98' order represents '1' with '1'
c Var 'aux98' order represents '0' with '-265'
c Encoding variable: aux99 with domain: bool (representing constraint (grid_00006_00000 -> grid_00007_00000))
c Var 'aux99' direct represents '0' with '-266'
c Var 'aux99' direct represents '1' with '266'
c Var 'aux99' order represents '1' with '1'
c Var 'aux99' order represents '0' with '-266'
c Encoding variable: aux100 with domain: bool (representing constraint (grid_00007_00000 -> grid_00008_00000))
c Var 'aux100' direct represents '0' with '-267'
c Var 'aux100' direct represents '1' with '267'
c Var 'aux100' order represents '1' with '1'
c Var 'aux100' order represents '0' with '-267'
c Encoding variable: aux101 with domain: bool (representing constraint (grid_00008_00000 -> grid_00009_00000))
c Var 'aux101' direct represents '0' with '-268'
c Var 'aux101' direct represents '1' with '268'
c Var 'aux101' order represents '1' with '1'
c Var 'aux101' order represents '0' with '-268'
c Encoding variable: aux102 with domain: bool (representing constraint (grid_00006_00002 -> grid_00007_00002))
c Var 'aux102' direct represents '0' with '-269'
c Var 'aux102' direct represents '1' with '269'
c Var 'aux102' order represents '1' with '1'
c Var 'aux102' order represents '0' with '-269'
c Encoding variable: aux103 with domain: bool (representing constraint (grid_00007_00002 -> grid_00008_00002))
c Var 'aux103' direct represents '0' with '-270'
c Var 'aux103' direct represents '1' with '270'
c Var 'aux103' order represents '1' with '1'
c Var 'aux103' order represents '0' with '-270'
c Encoding variable: aux104 with domain: bool (representing constraint (grid_00008_00002 -> grid_00009_00002))
c Var 'aux104' direct represents '0' with '-271'
c Var 'aux104' direct represents '1' with '271'
c Var 'aux104' order represents '1' with '1'
c Var 'aux104' order represents '0' with '-271'
c Encoding variable: aux105 with domain: bool (representing constraint (grid_00009_00003 -> grid_00009_00004))
c Var 'aux105' direct represents '0' with '-272'
c Var 'aux105' direct represents '1' with '272'
c Var 'aux105' order represents '1' with '1'
c Var 'aux105' order represents '0' with '-272'
c Encoding variable: aux106 with domain: bool (representing constraint (grid_00009_00004 -> grid_00009_00005))
c Var 'aux106' direct represents '0' with '-273'
c Var 'aux106' direct represents '1' with '273'
c Var 'aux106' order represents '1' with '1'
c Var 'aux106' order represents '0' with '-273'
c Encoding variable: aux107 with domain: bool (representing constraint (grid_00009_00005 -> grid_00009_00006))
c Var 'aux107' direct represents '0' with '-274'
c Var 'aux107' direct represents '1' with '274'
c Var 'aux107' order represents '1' with '1'
c Var 'aux107' order represents '0' with '-274'
c Encoding variable: aux108 with domain: bool (representing constraint (grid_00009_00006 -> grid_00009_00007))
c Var 'aux108' direct represents '0' with '-275'
c Var 'aux108' direct represents '1' with '275'
c Var 'aux108' order represents '1' with '1'
c Var 'aux108' order represents '0' with '-275'
c Encoding variable: aux109 with domain: bool (representing constraint (grid_00009_00007 -> grid_00009_00008))
c Var 'aux109' direct represents '0' with '-276'
c Var 'aux109' direct represents '1' with '276'
c Var 'aux109' order represents '1' with '1'
c Var 'aux109' order represents '0' with '-276'
c Encoding variable: aux110 with domain: bool (representing constraint (grid_00004_00009 -> grid_00005_00009))
c Var 'aux110' direct represents '0' with '-277'
c Var 'aux110' direct represents '1' with '277'
c Var 'aux110' order represents '1' with '1'
c Var 'aux110' order represents '0' with '-277'
c Encoding variable: aux111 with domain: bool (representing constraint (grid_00005_00009 -> grid_00006_00009))
c Var 'aux111' direct represents '0' with '-278'
c Var 'aux111' direct represents '1' with '278'
c Var 'aux111' order represents '1' with '1'
c Var 'aux111' order represents '0' with '-278'
c Encoding variable: aux112 with domain: bool (representing constraint (grid_00006_00009 -> grid_00007_00009))
c Var 'aux112' direct represents '0' with '-279'
c Var 'aux112' direct represents '1' with '279'
c Var 'aux112' order represents '1' with '1'
c Var 'aux112' order represents '0' with '-279'
c Encoding variable: aux113 with domain: bool (representing constraint (grid_00007_00009 -> grid_00008_00009))
c Var 'aux113' direct represents '0' with '-280'
c Var 'aux113' direct represents '1' with '280'
c Var 'aux113' order represents '1' with '1'
c Var 'aux113' order represents '0' with '-280'
c Encoding variable: aux114 with domain: bool (representing constraint (grid_00008_00009 -> grid_00009_00009))
c Var 'aux114' direct represents '0' with '-281'
c Var 'aux114' direct represents '1' with '281'
c Var 'aux114' order represents '1' with '1'
c Var 'aux114' order represents '0' with '-281'
c Encoding variable: aux115 with domain: int(0..2) (representing constraint ((0<grid_00000_00000) + (0<grid_00000_00009)))
c Both direct and order encoding.
c Var 'aux115' order represents '0' with '282'
c Var 'aux115' direct represents '0' with '282'
c Var 'aux115' order represents '1' with '283'
-282 283 0
c Var 'aux115' direct represents '1' with '284'
282 -283 284 0
-284 283 0
-284 -282 0
c Var 'aux115' direct represents '2' with '-283'
282 284 -283 0
c Encoding variable: aux116 with domain: int(0..2) (representing constraint ((0<grid_00000_00008) + (0<grid_00000_00001)))
c Both direct and order encoding.
c Var 'aux116' order represents '0' with '285'
c Var 'aux116' direct represents '0' with '285'
c Var 'aux116' order represents '1' with '286'
-285 286 0
c Var 'aux116' direct represents '1' with '287'
285 -286 287 0
-287 286 0
-287 -285 0
c Var 'aux116' direct represents '2' with '-286'
285 287 -286 0
c Encoding variable: aux117 with domain: int(0..2) (representing constraint ((0<grid_00000_00003) + (0<grid_00000_00007)))
c Both direct and order encoding.
c Var 'aux117' order represents '0' with '288'
c Var 'aux117' direct represents '0' with '288'
c Var 'aux117' order represents '1' with '289'
-288 289 0
c Var 'aux117' direct represents '1' with '290'
288 -289 290 0
-290 289 0
-290 -288 0
c Var 'aux117' direct represents '2' with '-289'
288 290 -289 0
c Encoding variable: aux118 with domain: int(0..2) (representing constraint ((0<grid_00000_00006) + (0<grid_00000_00004)))
c Both direct and order encoding.
c Var 'aux118' order represents '0' with '291'
c Var 'aux118' direct represents '0' with '291'
c Var 'aux118' order represents '1' with '292'
-291 292 0
c Var 'aux118' direct represents '1' with '293'
291 -292 293 0
-293 292 0
-293 -291 0
c Var 'aux118' direct represents '2' with '-292'
291 293 -292 0
c Encoding variable: aux119 with domain: int(0..2) (representing constraint ((0<grid_00000_00005) + (0<grid_00000_00002)))
c Both direct and order encoding.
c Var 'aux119' order represents '0' with '294'
c Var 'aux119' direct represents '0' with '294'
c Var 'aux119' order represents '1' with '295'
-294 295 0
c Var 'aux119' direct represents '1' with '296'
294 -295 296 0
-296 295 0
-296 -294 0
c Var 'aux119' direct represents '2' with '-295'
294 296 -295 0
c Encoding variable: aux120 with domain: int(0..4) (representing constraint (aux116 + aux119))
c Both direct and order encoding.
c Var 'aux120' order represents '0' with '297'
c Var 'aux120' direct represents '0' with '297'
c Var 'aux120' order represents '1' with '298'
-297 298 0
c Var 'aux120' direct represents '1' with '299'
297 -298 299 0
-299 298 0
-299 -297 0
c Var 'aux120' order represents '2' with '300'
-298 300 0
c Var 'aux120' direct represents '2' with '301'
298 -300 301 0
-301 300 0
-301 -298 0
c Var 'aux120' order represents '3' with '302'
-300 302 0
c Var 'aux120' direct represents '3' with '303'
300 -302 303 0
-303 302 0
-303 -300 0
c Var 'aux120' direct represents '4' with '-302'
297 299 301 303 -302 0
c Encoding variable: aux121 with domain: int(0..4) (representing constraint (aux115 + aux117))
c Both direct and order encoding.
c Var 'aux121' order represents '0' with '304'
c Var 'aux121' direct represents '0' with '304'
c Var 'aux121' order represents '1' with '305'
-304 305 0
c Var 'aux121' direct represents '1' with '306'
304 -305 306 0
-306 305 0
-306 -304 0
c Var 'aux121' order represents '2' with '307'
-305 307 0
c Var 'aux121' direct represents '2' with '308'
305 -307 308 0
-308 307 0
-308 -305 0
c Var 'aux121' order represents '3' with '309'
-307 309 0
c Var 'aux121' direct represents '3' with '310'
307 -309 310 0
-310 309 0
-310 -307 0
c Var 'aux121' direct represents '4' with '-309'
304 306 308 310 -309 0
c Encoding variable: aux122 with domain: int(0..2) (representing constraint ((0<grid_00001_00000) + (0<grid_00001_00009)))
c Both direct and order encoding.
c Var 'aux122' order represents '0' with '311'
c Var 'aux122' direct represents '0' with '311'
c Var 'aux122' order represents '1' with '312'
-311 312 0
c Var 'aux122' direct represents '1' with '313'
311 -312 313 0
-313 312 0
-313 -311 0
c Var 'aux122' direct represents '2' with '-312'
311 313 -312 0
c Encoding variable: aux123 with domain: int(0..2) (representing constraint ((0<grid_00001_00008) + (0<grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux123' order represents '0' with '314'
c Var 'aux123' direct represents '0' with '314'
c Var 'aux123' order represents '1' with '315'
-314 315 0
c Var 'aux123' direct represents '1' with '316'
314 -315 316 0
-316 315 0
-316 -314 0
c Var 'aux123' direct represents '2' with '-315'
314 316 -315 0
c Encoding variable: aux124 with domain: int(0..2) (representing constraint ((0<grid_00001_00003) + (0<grid_00001_00007)))
c Both direct and order encoding.
c Var 'aux124' order represents '0' with '317'
c Var 'aux124' direct represents '0' with '317'
c Var 'aux124' order represents '1' with '318'
-317 318 0
c Var 'aux124' direct represents '1' with '319'
317 -318 319 0
-319 318 0
-319 -317 0
c Var 'aux124' direct represents '2' with '-318'
317 319 -318 0
c Encoding variable: aux125 with domain: int(0..2) (representing constraint ((0<grid_00001_00006) + (0<grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux125' order represents '0' with '320'
c Var 'aux125' direct represents '0' with '320'
c Var 'aux125' order represents '1' with '321'
-320 321 0
c Var 'aux125' direct represents '1' with '322'
320 -321 322 0
-322 321 0
-322 -320 0
c Var 'aux125' direct represents '2' with '-321'
320 322 -321 0
c Encoding variable: aux126 with domain: int(0..2) (representing constraint ((0<grid_00001_00005) + (0<grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux126' order represents '0' with '323'
c Var 'aux126' direct represents '0' with '323'
c Var 'aux126' order represents '1' with '324'
-323 324 0
c Var 'aux126' direct represents '1' with '325'
323 -324 325 0
-325 324 0
-325 -323 0
c Var 'aux126' direct represents '2' with '-324'
323 325 -324 0
c Encoding variable: aux127 with domain: int(0..4) (representing constraint (aux123 + aux126))
c Both direct and order encoding.
c Var 'aux127' order represents '0' with '326'
c Var 'aux127' direct represents '0' with '326'
c Var 'aux127' order represents '1' with '327'
-326 327 0
c Var 'aux127' direct represents '1' with '328'
326 -327 328 0
-328 327 0
-328 -326 0
c Var 'aux127' order represents '2' with '329'
-327 329 0
c Var 'aux127' direct represents '2' with '330'
327 -329 330 0
-330 329 0
-330 -327 0
c Var 'aux127' order represents '3' with '331'
-329 331 0
c Var 'aux127' direct represents '3' with '332'
329 -331 332 0
-332 331 0
-332 -329 0
c Var 'aux127' direct represents '4' with '-331'
326 328 330 332 -331 0
c Encoding variable: aux128 with domain: int(0..4) (representing constraint (aux122 + aux124))
c Both direct and order encoding.
c Var 'aux128' order represents '0' with '333'
c Var 'aux128' direct represents '0' with '333'
c Var 'aux128' order represents '1' with '334'
-333 334 0
c Var 'aux128' direct represents '1' with '335'
333 -334 335 0
-335 334 0
-335 -333 0
c Var 'aux128' order represents '2' with '336'
-334 336 0
c Var 'aux128' direct represents '2' with '337'
334 -336 337 0
-337 336 0
-337 -334 0
c Var 'aux128' order represents '3' with '338'
-336 338 0
c Var 'aux128' direct represents '3' with '339'
336 -338 339 0
-339 338 0
-339 -336 0
c Var 'aux128' direct represents '4' with '-338'
333 335 337 339 -338 0
c Encoding variable: aux129 with domain: int(0..2) (representing constraint ((0<grid_00002_00000) + (0<grid_00002_00009)))
c Both direct and order encoding.
c Var 'aux129' order represents '0' with '340'
c Var 'aux129' direct represents '0' with '340'
c Var 'aux129' order represents '1' with '341'
-340 341 0
c Var 'aux129' direct represents '1' with '342'
340 -341 342 0
-342 341 0
-342 -340 0
c Var 'aux129' direct represents '2' with '-341'
340 342 -341 0
c Encoding variable: aux130 with domain: int(0..2) (representing constraint ((0<grid_00002_00008) + (0<grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux130' order represents '0' with '343'
c Var 'aux130' direct represents '0' with '343'
c Var 'aux130' order represents '1' with '344'
-343 344 0
c Var 'aux130' direct represents '1' with '345'
343 -344 345 0
-345 344 0
-345 -343 0
c Var 'aux130' direct represents '2' with '-344'
343 345 -344 0
c Encoding variable: aux131 with domain: int(0..2) (representing constraint ((0<grid_00002_00003) + (0<grid_00002_00007)))
c Both direct and order encoding.
c Var 'aux131' order represents '0' with '346'
c Var 'aux131' direct represents '0' with '346'
c Var 'aux131' order represents '1' with '347'
-346 347 0
c Var 'aux131' direct represents '1' with '348'
346 -347 348 0
-348 347 0
-348 -346 0
c Var 'aux131' direct represents '2' with '-347'
346 348 -347 0
c Encoding variable: aux132 with domain: int(0..2) (representing constraint ((0<grid_00002_00006) + (0<grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux132' order represents '0' with '349'
c Var 'aux132' direct represents '0' with '349'
c Var 'aux132' order represents '1' with '350'
-349 350 0
c Var 'aux132' direct represents '1' with '351'
349 -350 351 0
-351 350 0
-351 -349 0
c Var 'aux132' direct represents '2' with '-350'
349 351 -350 0
c Encoding variable: aux133 with domain: int(0..2) (representing constraint ((0<grid_00002_00005) + (0<grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux133' order represents '0' with '352'
c Var 'aux133' direct represents '0' with '352'
c Var 'aux133' order represents '1' with '353'
-352 353 0
c Var 'aux133' direct represents '1' with '354'
352 -353 354 0
-354 353 0
-354 -352 0
c Var 'aux133' direct represents '2' with '-353'
352 354 -353 0
c Encoding variable: aux134 with domain: int(0..4) (representing constraint (aux130 + aux133))
c Both direct and order encoding.
c Var 'aux134' order represents '0' with '355'
c Var 'aux134' direct represents '0' with '355'
c Var 'aux134' order represents '1' with '356'
-355 356 0
c Var 'aux134' direct represents '1' with '357'
355 -356 357 0
-357 356 0
-357 -355 0
c Var 'aux134' order represents '2' with '358'
-356 358 0
c Var 'aux134' direct represents '2' with '359'
356 -358 359 0
-359 358 0
-359 -356 0
c Var 'aux134' order represents '3' with '360'
-358 360 0
c Var 'aux134' direct represents '3' with '361'
358 -360 361 0
-361 360 0
-361 -358 0
c Var 'aux134' direct represents '4' with '-360'
355 357 359 361 -360 0
c Encoding variable: aux135 with domain: int(0..4) (representing constraint (aux129 + aux131))
c Both direct and order encoding.
c Var 'aux135' order represents '0' with '362'
c Var 'aux135' direct represents '0' with '362'
c Var 'aux135' order represents '1' with '363'
-362 363 0
c Var 'aux135' direct represents '1' with '364'
362 -363 364 0
-364 363 0
-364 -362 0
c Var 'aux135' order represents '2' with '365'
-363 365 0
c Var 'aux135' direct represents '2' with '366'
363 -365 366 0
-366 365 0
-366 -363 0
c Var 'aux135' order represents '3' with '367'
-365 367 0
c Var 'aux135' direct represents '3' with '368'
365 -367 368 0
-368 367 0
-368 -365 0
c Var 'aux135' direct represents '4' with '-367'
362 364 366 368 -367 0
c Encoding variable: aux136 with domain: int(0..2) (representing constraint ((0<grid_00003_00000) + (0<grid_00003_00009)))
c Both direct and order encoding.
c Var 'aux136' order represents '0' with '369'
c Var 'aux136' direct represents '0' with '369'
c Var 'aux136' order represents '1' with '370'
-369 370 0
c Var 'aux136' direct represents '1' with '371'
369 -370 371 0
-371 370 0
-371 -369 0
c Var 'aux136' direct represents '2' with '-370'
369 371 -370 0
c Encoding variable: aux137 with domain: int(0..2) (representing constraint ((0<grid_00003_00008) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux137' order represents '0' with '372'
c Var 'aux137' direct represents '0' with '372'
c Var 'aux137' order represents '1' with '373'
-372 373 0
c Var 'aux137' direct represents '1' with '374'
372 -373 374 0
-374 373 0
-374 -372 0
c Var 'aux137' direct represents '2' with '-373'
372 374 -373 0
c Encoding variable: aux138 with domain: int(0..2) (representing constraint ((0<grid_00003_00003) + (0<grid_00003_00007)))
c Both direct and order encoding.
c Var 'aux138' order represents '0' with '375'
c Var 'aux138' direct represents '0' with '375'
c Var 'aux138' order represents '1' with '376'
-375 376 0
c Var 'aux138' direct represents '1' with '377'
375 -376 377 0
-377 376 0
-377 -375 0
c Var 'aux138' direct represents '2' with '-376'
375 377 -376 0
c Encoding variable: aux139 with domain: int(0..2) (representing constraint ((0<grid_00003_00006) + (0<grid_00003_00004)))
c Both direct and order encoding.
c Var 'aux139' order represents '0' with '378'
c Var 'aux139' direct represents '0' with '378'
c Var 'aux139' order represents '1' with '379'
-378 379 0
c Var 'aux139' direct represents '1' with '380'
378 -379 380 0
-380 379 0
-380 -378 0
c Var 'aux139' direct represents '2' with '-379'
378 380 -379 0
c Encoding variable: aux140 with domain: int(0..2) (representing constraint ((0<grid_00003_00005) + (0<grid_00003_00002)))
c Both direct and order encoding.
c Var 'aux140' order represents '0' with '381'
c Var 'aux140' direct represents '0' with '381'
c Var 'aux140' order represents '1' with '382'
-381 382 0
c Var 'aux140' direct represents '1' with '383'
381 -382 383 0
-383 382 0
-383 -381 0
c Var 'aux140' direct represents '2' with '-382'
381 383 -382 0
c Encoding variable: aux141 with domain: int(0..4) (representing constraint (aux137 + aux140))
c Both direct and order encoding.
c Var 'aux141' order represents '0' with '384'
c Var 'aux141' direct represents '0' with '384'
c Var 'aux141' order represents '1' with '385'
-384 385 0
c Var 'aux141' direct represents '1' with '386'
384 -385 386 0
-386 385 0
-386 -384 0
c Var 'aux141' order represents '2' with '387'
-385 387 0
c Var 'aux141' direct represents '2' with '388'
385 -387 388 0
-388 387 0
-388 -385 0
c Var 'aux141' order represents '3' with '389'
-387 389 0
c Var 'aux141' direct represents '3' with '390'
387 -389 390 0
-390 389 0
-390 -387 0
c Var 'aux141' direct represents '4' with '-389'
384 386 388 390 -389 0
c Encoding variable: aux142 with domain: int(0..4) (representing constraint (aux136 + aux138))
c Both direct and order encoding.
c Var 'aux142' order represents '0' with '391'
c Var 'aux142' direct represents '0' with '391'
c Var 'aux142' order represents '1' with '392'
-391 392 0
c Var 'aux142' direct represents '1' with '393'
391 -392 393 0
-393 392 0
-393 -391 0
c Var 'aux142' order represents '2' with '394'
-392 394 0
c Var 'aux142' direct represents '2' with '395'
392 -394 395 0
-395 394 0
-395 -392 0
c Var 'aux142' order represents '3' with '396'
-394 396 0
c Var 'aux142' direct represents '3' with '397'
394 -396 397 0
-397 396 0
-397 -394 0
c Var 'aux142' direct represents '4' with '-396'
391 393 395 397 -396 0
c Encoding variable: aux143 with domain: int(0..2) (representing constraint ((0<grid_00004_00000) + (0<grid_00004_00009)))
c Both direct and order encoding.
c Var 'aux143' order represents '0' with '398'
c Var 'aux143' direct represents '0' with '398'
c Var 'aux143' order represents '1' with '399'
-398 399 0
c Var 'aux143' direct represents '1' with '400'
398 -399 400 0
-400 399 0
-400 -398 0
c Var 'aux143' direct represents '2' with '-399'
398 400 -399 0
c Encoding variable: aux144 with domain: int(0..2) (representing constraint ((0<grid_00004_00008) + (0<grid_00004_00001)))
c Both direct and order encoding.
c Var 'aux144' order represents '0' with '401'
c Var 'aux144' direct represents '0' with '401'
c Var 'aux144' order represents '1' with '402'
-401 402 0
c Var 'aux144' direct represents '1' with '403'
401 -402 403 0
-403 402 0
-403 -401 0
c Var 'aux144' direct represents '2' with '-402'
401 403 -402 0
c Encoding variable: aux145 with domain: int(0..2) (representing constraint ((0<grid_00004_00003) + (0<grid_00004_00007)))
c Both direct and order encoding.
c Var 'aux145' order represents '0' with '404'
c Var 'aux145' direct represents '0' with '404'
c Var 'aux145' order represents '1' with '405'
-404 405 0
c Var 'aux145' direct represents '1' with '406'
404 -405 406 0
-406 405 0
-406 -404 0
c Var 'aux145' direct represents '2' with '-405'
404 406 -405 0
c Encoding variable: aux146 with domain: int(0..2) (representing constraint ((0<grid_00004_00006) + (0<grid_00004_00004)))
c Both direct and order encoding.
c Var 'aux146' order represents '0' with '407'
c Var 'aux146' direct represents '0' with '407'
c Var 'aux146' order represents '1' with '408'
-407 408 0
c Var 'aux146' direct represents '1' with '409'
407 -408 409 0
-409 408 0
-409 -407 0
c Var 'aux146' direct represents '2' with '-408'
407 409 -408 0
c Encoding variable: aux147 with domain: int(0..2) (representing constraint ((0<grid_00004_00005) + (0<grid_00004_00002)))
c Both direct and order encoding.
c Var 'aux147' order represents '0' with '410'
c Var 'aux147' direct represents '0' with '410'
c Var 'aux147' order represents '1' with '411'
-410 411 0
c Var 'aux147' direct represents '1' with '412'
410 -411 412 0
-412 411 0
-412 -410 0
c Var 'aux147' direct represents '2' with '-411'
410 412 -411 0
c Encoding variable: aux148 with domain: int(0..4) (representing constraint (aux144 + aux147))
c Both direct and order encoding.
c Var 'aux148' order represents '0' with '413'
c Var 'aux148' direct represents '0' with '413'
c Var 'aux148' order represents '1' with '414'
-413 414 0
c Var 'aux148' direct represents '1' with '415'
413 -414 415 0
-415 414 0
-415 -413 0
c Var 'aux148' order represents '2' with '416'
-414 416 0
c Var 'aux148' direct represents '2' with '417'
414 -416 417 0
-417 416 0
-417 -414 0
c Var 'aux148' order represents '3' with '418'
-416 418 0
c Var 'aux148' direct represents '3' with '419'
416 -418 419 0
-419 418 0
-419 -416 0
c Var 'aux148' direct represents '4' with '-418'
413 415 417 419 -418 0
c Encoding variable: aux149 with domain: int(0..4) (representing constraint (aux143 + aux145))
c Both direct and order encoding.
c Var 'aux149' order represents '0' with '420'
c Var 'aux149' direct represents '0' with '420'
c Var 'aux149' order represents '1' with '421'
-420 421 0
c Var 'aux149' direct represents '1' with '422'
420 -421 422 0
-422 421 0
-422 -420 0
c Var 'aux149' order represents '2' with '423'
-421 423 0
c Var 'aux149' direct represents '2' with '424'
421 -423 424 0
-424 423 0
-424 -421 0
c Var 'aux149' order represents '3' with '425'
-423 425 0
c Var 'aux149' direct represents '3' with '426'
423 -425 426 0
-426 425 0
-426 -423 0
c Var 'aux149' direct represents '4' with '-425'
420 422 424 426 -425 0
c Encoding variable: aux150 with domain: int(0..2) (representing constraint ((0<grid_00005_00000) + (0<grid_00005_00009)))
c Both direct and order encoding.
c Var 'aux150' order represents '0' with '427'
c Var 'aux150' direct represents '0' with '427'
c Var 'aux150' order represents '1' with '428'
-427 428 0
c Var 'aux150' direct represents '1' with '429'
427 -428 429 0
-429 428 0
-429 -427 0
c Var 'aux150' direct represents '2' with '-428'
427 429 -428 0
c Encoding variable: aux151 with domain: int(0..2) (representing constraint ((0<grid_00005_00008) + (0<grid_00005_00001)))
c Both direct and order encoding.
c Var 'aux151' order represents '0' with '430'
c Var 'aux151' direct represents '0' with '430'
c Var 'aux151' order represents '1' with '431'
-430 431 0
c Var 'aux151' direct represents '1' with '432'
430 -431 432 0
-432 431 0
-432 -430 0
c Var 'aux151' direct represents '2' with '-431'
430 432 -431 0
c Encoding variable: aux152 with domain: int(0..2) (representing constraint ((0<grid_00005_00003) + (0<grid_00005_00007)))
c Both direct and order encoding.
c Var 'aux152' order represents '0' with '433'
c Var 'aux152' direct represents '0' with '433'
c Var 'aux152' order represents '1' with '434'
-433 434 0
c Var 'aux152' direct represents '1' with '435'
433 -434 435 0
-435 434 0
-435 -433 0
c Var 'aux152' direct represents '2' with '-434'
433 435 -434 0
c Encoding variable: aux153 with domain: int(0..2) (representing constraint ((0<grid_00005_00006) + (0<grid_00005_00004)))
c Both direct and order encoding.
c Var 'aux153' order represents '0' with '436'
c Var 'aux153' direct represents '0' with '436'
c Var 'aux153' order represents '1' with '437'
-436 437 0
c Var 'aux153' direct represents '1' with '438'
436 -437 438 0
-438 437 0
-438 -436 0
c Var 'aux153' direct represents '2' with '-437'
436 438 -437 0
c Encoding variable: aux154 with domain: int(0..2) (representing constraint ((0<grid_00005_00005) + (0<grid_00005_00002)))
c Both direct and order encoding.
c Var 'aux154' order represents '0' with '439'
c Var 'aux154' direct represents '0' with '439'
c Var 'aux154' order represents '1' with '440'
-439 440 0
c Var 'aux154' direct represents '1' with '441'
439 -440 441 0
-441 440 0
-441 -439 0
c Var 'aux154' direct represents '2' with '-440'
439 441 -440 0
c Encoding variable: aux155 with domain: int(0..4) (representing constraint (aux151 + aux154))
c Both direct and order encoding.
c Var 'aux155' order represents '0' with '442'
c Var 'aux155' direct represents '0' with '442'
c Var 'aux155' order represents '1' with '443'
-442 443 0
c Var 'aux155' direct represents '1' with '444'
442 -443 444 0
-444 443 0
-444 -442 0
c Var 'aux155' order represents '2' with '445'
-443 445 0
c Var 'aux155' direct represents '2' with '446'
443 -445 446 0
-446 445 0
-446 -443 0
c Var 'aux155' order represents '3' with '447'
-445 447 0
c Var 'aux155' direct represents '3' with '448'
445 -447 448 0
-448 447 0
-448 -445 0
c Var 'aux155' direct represents '4' with '-447'
442 444 446 448 -447 0
c Encoding variable: aux156 with domain: int(0..4) (representing constraint (aux150 + aux152))
c Both direct and order encoding.
c Var 'aux156' order represents '0' with '449'
c Var 'aux156' direct represents '0' with '449'
c Var 'aux156' order represents '1' with '450'
-449 450 0
c Var 'aux156' direct represents '1' with '451'
449 -450 451 0
-451 450 0
-451 -449 0
c Var 'aux156' order represents '2' with '452'
-450 452 0
c Var 'aux156' direct represents '2' with '453'
450 -452 453 0
-453 452 0
-453 -450 0
c Var 'aux156' order represents '3' with '454'
-452 454 0
c Var 'aux156' direct represents '3' with '455'
452 -454 455 0
-455 454 0
-455 -452 0
c Var 'aux156' direct represents '4' with '-454'
449 451 453 455 -454 0
c Encoding variable: aux157 with domain: int(0..2) (representing constraint ((0<grid_00006_00000) + (0<grid_00006_00009)))
c Both direct and order encoding.
c Var 'aux157' order represents '0' with '456'
c Var 'aux157' direct represents '0' with '456'
c Var 'aux157' order represents '1' with '457'
-456 457 0
c Var 'aux157' direct represents '1' with '458'
456 -457 458 0
-458 457 0
-458 -456 0
c Var 'aux157' direct represents '2' with '-457'
456 458 -457 0
c Encoding variable: aux158 with domain: int(0..2) (representing constraint ((0<grid_00006_00008) + (0<grid_00006_00001)))
c Both direct and order encoding.
c Var 'aux158' order represents '0' with '459'
c Var 'aux158' direct represents '0' with '459'
c Var 'aux158' order represents '1' with '460'
-459 460 0
c Var 'aux158' direct represents '1' with '461'
459 -460 461 0
-461 460 0
-461 -459 0
c Var 'aux158' direct represents '2' with '-460'
459 461 -460 0
c Encoding variable: aux159 with domain: int(0..2) (representing constraint ((0<grid_00006_00003) + (0<grid_00006_00007)))
c Both direct and order encoding.
c Var 'aux159' order represents '0' with '462'
c Var 'aux159' direct represents '0' with '462'
c Var 'aux159' order represents '1' with '463'
-462 463 0
c Var 'aux159' direct represents '1' with '464'
462 -463 464 0
-464 463 0
-464 -462 0
c Var 'aux159' direct represents '2' with '-463'
462 464 -463 0
c Encoding variable: aux160 with domain: int(0..2) (representing constraint ((0<grid_00006_00006) + (0<grid_00006_00004)))
c Both direct and order encoding.
c Var 'aux160' order represents '0' with '465'
c Var 'aux160' direct represents '0' with '465'
c Var 'aux160' order represents '1' with '466'
-465 466 0
c Var 'aux160' direct represents '1' with '467'
465 -466 467 0
-467 466 0
-467 -465 0
c Var 'aux160' direct represents '2' with '-466'
465 467 -466 0
c Encoding variable: aux161 with domain: int(0..2) (representing constraint ((0<grid_00006_00005) + (0<grid_00006_00002)))
c Both direct and order encoding.
c Var 'aux161' order represents '0' with '468'
c Var 'aux161' direct represents '0' with '468'
c Var 'aux161' order represents '1' with '469'
-468 469 0
c Var 'aux161' direct represents '1' with '470'
468 -469 470 0
-470 469 0
-470 -468 0
c Var 'aux161' direct represents '2' with '-469'
468 470 -469 0
c Encoding variable: aux162 with domain: int(0..4) (representing constraint (aux158 + aux161))
c Both direct and order encoding.
c Var 'aux162' order represents '0' with '471'
c Var 'aux162' direct represents '0' with '471'
c Var 'aux162' order represents '1' with '472'
-471 472 0
c Var 'aux162' direct represents '1' with '473'
471 -472 473 0
-473 472 0
-473 -471 0
c Var 'aux162' order represents '2' with '474'
-472 474 0
c Var 'aux162' direct represents '2' with '475'
472 -474 475 0
-475 474 0
-475 -472 0
c Var 'aux162' order represents '3' with '476'
-474 476 0
c Var 'aux162' direct represents '3' with '477'
474 -476 477 0
-477 476 0
-477 -474 0
c Var 'aux162' direct represents '4' with '-476'
471 473 475 477 -476 0
c Encoding variable: aux163 with domain: int(0..4) (representing constraint (aux157 + aux159))
c Both direct and order encoding.
c Var 'aux163' order represents '0' with '478'
c Var 'aux163' direct represents '0' with '478'
c Var 'aux163' order represents '1' with '479'
-478 479 0
c Var 'aux163' direct represents '1' with '480'
478 -479 480 0
-480 479 0
-480 -478 0
c Var 'aux163' order represents '2' with '481'
-479 481 0
c Var 'aux163' direct represents '2' with '482'
479 -481 482 0
-482 481 0
-482 -479 0
c Var 'aux163' order represents '3' with '483'
-481 483 0
c Var 'aux163' direct represents '3' with '484'
481 -483 484 0
-484 483 0
-484 -481 0
c Var 'aux163' direct represents '4' with '-483'
478 480 482 484 -483 0
c Encoding variable: aux164 with domain: int(0..2) (representing constraint ((0<grid_00007_00000) + (0<grid_00007_00009)))
c Both direct and order encoding.
c Var 'aux164' order represents '0' with '485'
c Var 'aux164' direct represents '0' with '485'
c Var 'aux164' order represents '1' with '486'
-485 486 0
c Var 'aux164' direct represents '1' with '487'
485 -486 487 0
-487 486 0
-487 -485 0
c Var 'aux164' direct represents '2' with '-486'
485 487 -486 0
c Encoding variable: aux165 with domain: int(0..2) (representing constraint ((0<grid_00007_00008) + (0<grid_00007_00001)))
c Both direct and order encoding.
c Var 'aux165' order represents '0' with '488'
c Var 'aux165' direct represents '0' with '488'
c Var 'aux165' order represents '1' with '489'
-488 489 0
c Var 'aux165' direct represents '1' with '490'
488 -489 490 0
-490 489 0
-490 -488 0
c Var 'aux165' direct represents '2' with '-489'
488 490 -489 0
c Encoding variable: aux166 with domain: int(0..2) (representing constraint ((0<grid_00007_00003) + (0<grid_00007_00007)))
c Both direct and order encoding.
c Var 'aux166' order represents '0' with '491'
c Var 'aux166' direct represents '0' with '491'
c Var 'aux166' order represents '1' with '492'
-491 492 0
c Var 'aux166' direct represents '1' with '493'
491 -492 493 0
-493 492 0
-493 -491 0
c Var 'aux166' direct represents '2' with '-492'
491 493 -492 0
c Encoding variable: aux167 with domain: int(0..2) (representing constraint ((0<grid_00007_00006) + (0<grid_00007_00004)))
c Both direct and order encoding.
c Var 'aux167' order represents '0' with '494'
c Var 'aux167' direct represents '0' with '494'
c Var 'aux167' order represents '1' with '495'
-494 495 0
c Var 'aux167' direct represents '1' with '496'
494 -495 496 0
-496 495 0
-496 -494 0
c Var 'aux167' direct represents '2' with '-495'
494 496 -495 0
c Encoding variable: aux168 with domain: int(0..2) (representing constraint ((0<grid_00007_00005) + (0<grid_00007_00002)))
c Both direct and order encoding.
c Var 'aux168' order represents '0' with '497'
c Var 'aux168' direct represents '0' with '497'
c Var 'aux168' order represents '1' with '498'
-497 498 0
c Var 'aux168' direct represents '1' with '499'
497 -498 499 0
-499 498 0
-499 -497 0
c Var 'aux168' direct represents '2' with '-498'
497 499 -498 0
c Encoding variable: aux169 with domain: int(0..4) (representing constraint (aux165 + aux168))
c Both direct and order encoding.
c Var 'aux169' order represents '0' with '500'
c Var 'aux169' direct represents '0' with '500'
c Var 'aux169' order represents '1' with '501'
-500 501 0
c Var 'aux169' direct represents '1' with '502'
500 -501 502 0
-502 501 0
-502 -500 0
c Var 'aux169' order represents '2' with '503'
-501 503 0
c Var 'aux169' direct represents '2' with '504'
501 -503 504 0
-504 503 0
-504 -501 0
c Var 'aux169' order represents '3' with '505'
-503 505 0
c Var 'aux169' direct represents '3' with '506'
503 -505 506 0
-506 505 0
-506 -503 0
c Var 'aux169' direct represents '4' with '-505'
500 502 504 506 -505 0
c Encoding variable: aux170 with domain: int(0..4) (representing constraint (aux164 + aux166))
c Both direct and order encoding.
c Var 'aux170' order represents '0' with '507'
c Var 'aux170' direct represents '0' with '507'
c Var 'aux170' order represents '1' with '508'
-507 508 0
c Var 'aux170' direct represents '1' with '509'
507 -508 509 0
-509 508 0
-509 -507 0
c Var 'aux170' order represents '2' with '510'
-508 510 0
c Var 'aux170' direct represents '2' with '511'
508 -510 511 0
-511 510 0
-511 -508 0
c Var 'aux170' order represents '3' with '512'
-510 512 0
c Var 'aux170' direct represents '3' with '513'
510 -512 513 0
-513 512 0
-513 -510 0
c Var 'aux170' direct represents '4' with '-512'
507 509 511 513 -512 0
c Encoding variable: aux171 with domain: int(0..2) (representing constraint ((0<grid_00008_00000) + (0<grid_00008_00009)))
c Both direct and order encoding.
c Var 'aux171' order represents '0' with '514'
c Var 'aux171' direct represents '0' with '514'
c Var 'aux171' order represents '1' with '515'
-514 515 0
c Var 'aux171' direct represents '1' with '516'
514 -515 516 0
-516 515 0
-516 -514 0
c Var 'aux171' direct represents '2' with '-515'
514 516 -515 0
c Encoding variable: aux172 with domain: int(0..2) (representing constraint ((0<grid_00008_00008) + (0<grid_00008_00001)))
c Both direct and order encoding.
c Var 'aux172' order represents '0' with '517'
c Var 'aux172' direct represents '0' with '517'
c Var 'aux172' order represents '1' with '518'
-517 518 0
c Var 'aux172' direct represents '1' with '519'
517 -518 519 0
-519 518 0
-519 -517 0
c Var 'aux172' direct represents '2' with '-518'
517 519 -518 0
c Encoding variable: aux173 with domain: int(0..2) (representing constraint ((0<grid_00008_00003) + (0<grid_00008_00007)))
c Both direct and order encoding.
c Var 'aux173' order represents '0' with '520'
c Var 'aux173' direct represents '0' with '520'
c Var 'aux173' order represents '1' with '521'
-520 521 0
c Var 'aux173' direct represents '1' with '522'
520 -521 522 0
-522 521 0
-522 -520 0
c Var 'aux173' direct represents '2' with '-521'
520 522 -521 0
c Encoding variable: aux174 with domain: int(0..2) (representing constraint ((0<grid_00008_00006) + (0<grid_00008_00004)))
c Both direct and order encoding.
c Var 'aux174' order represents '0' with '523'
c Var 'aux174' direct represents '0' with '523'
c Var 'aux174' order represents '1' with '524'
-523 524 0
c Var 'aux174' direct represents '1' with '525'
523 -524 525 0
-525 524 0
-525 -523 0
c Var 'aux174' direct represents '2' with '-524'
523 525 -524 0
c Encoding variable: aux175 with domain: int(0..2) (representing constraint ((0<grid_00008_00005) + (0<grid_00008_00002)))
c Both direct and order encoding.
c Var 'aux175' order represents '0' with '526'
c Var 'aux175' direct represents '0' with '526'
c Var 'aux175' order represents '1' with '527'
-526 527 0
c Var 'aux175' direct represents '1' with '528'
526 -527 528 0
-528 527 0
-528 -526 0
c Var 'aux175' direct represents '2' with '-527'
526 528 -527 0
c Encoding variable: aux176 with domain: int(0..4) (representing constraint (aux172 + aux175))
c Both direct and order encoding.
c Var 'aux176' order represents '0' with '529'
c Var 'aux176' direct represents '0' with '529'
c Var 'aux176' order represents '1' with '530'
-529 530 0
c Var 'aux176' direct represents '1' with '531'
529 -530 531 0
-531 530 0
-531 -529 0
c Var 'aux176' order represents '2' with '532'
-530 532 0
c Var 'aux176' direct represents '2' with '533'
530 -532 533 0
-533 532 0
-533 -530 0
c Var 'aux176' order represents '3' with '534'
-532 534 0
c Var 'aux176' direct represents '3' with '535'
532 -534 535 0
-535 534 0
-535 -532 0
c Var 'aux176' direct represents '4' with '-534'
529 531 533 535 -534 0
c Encoding variable: aux177 with domain: int(0..4) (representing constraint (aux171 + aux173))
c Both direct and order encoding.
c Var 'aux177' order represents '0' with '536'
c Var 'aux177' direct represents '0' with '536'
c Var 'aux177' order represents '1' with '537'
-536 537 0
c Var 'aux177' direct represents '1' with '538'
536 -537 538 0
-538 537 0
-538 -536 0
c Var 'aux177' order represents '2' with '539'
-537 539 0
c Var 'aux177' direct represents '2' with '540'
537 -539 540 0
-540 539 0
-540 -537 0
c Var 'aux177' order represents '3' with '541'
-539 541 0
c Var 'aux177' direct represents '3' with '542'
539 -541 542 0
-542 541 0
-542 -539 0
c Var 'aux177' direct represents '4' with '-541'
536 538 540 542 -541 0
c Encoding variable: aux178 with domain: int(0..2) (representing constraint ((0<grid_00009_00000) + (0<grid_00009_00009)))
c Both direct and order encoding.
c Var 'aux178' order represents '0' with '543'
c Var 'aux178' direct represents '0' with '543'
c Var 'aux178' order represents '1' with '544'
-543 544 0
c Var 'aux178' direct represents '1' with '545'
543 -544 545 0
-545 544 0
-545 -543 0
c Var 'aux178' direct represents '2' with '-544'
543 545 -544 0
c Encoding variable: aux179 with domain: int(0..2) (representing constraint ((0<grid_00009_00008) + (0<grid_00009_00001)))
c Both direct and order encoding.
c Var 'aux179' order represents '0' with '546'
c Var 'aux179' direct represents '0' with '546'
c Var 'aux179' order represents '1' with '547'
-546 547 0
c Var 'aux179' direct represents '1' with '548'
546 -547 548 0
-548 547 0
-548 -546 0
c Var 'aux179' direct represents '2' with '-547'
546 548 -547 0
c Encoding variable: aux180 with domain: int(0..2) (representing constraint ((0<grid_00009_00003) + (0<grid_00009_00007)))
c Both direct and order encoding.
c Var 'aux180' order represents '0' with '549'
c Var 'aux180' direct represents '0' with '549'
c Var 'aux180' order represents '1' with '550'
-549 550 0
c Var 'aux180' direct represents '1' with '551'
549 -550 551 0
-551 550 0
-551 -549 0
c Var 'aux180' direct represents '2' with '-550'
549 551 -550 0
c Encoding variable: aux181 with domain: int(0..2) (representing constraint ((0<grid_00009_00006) + (0<grid_00009_00004)))
c Both direct and order encoding.
c Var 'aux181' order represents '0' with '552'
c Var 'aux181' direct represents '0' with '552'
c Var 'aux181' order represents '1' with '553'
-552 553 0
c Var 'aux181' direct represents '1' with '554'
552 -553 554 0
-554 553 0
-554 -552 0
c Var 'aux181' direct represents '2' with '-553'
552 554 -553 0
c Encoding variable: aux182 with domain: int(0..2) (representing constraint ((0<grid_00009_00005) + (0<grid_00009_00002)))
c Both direct and order encoding.
c Var 'aux182' order represents '0' with '555'
c Var 'aux182' direct represents '0' with '555'
c Var 'aux182' order represents '1' with '556'
-555 556 0
c Var 'aux182' direct represents '1' with '557'
555 -556 557 0
-557 556 0
-557 -555 0
c Var 'aux182' direct represents '2' with '-556'
555 557 -556 0
c Encoding variable: aux183 with domain: int(0..4) (representing constraint (aux179 + aux182))
c Both direct and order encoding.
c Var 'aux183' order represents '0' with '558'
c Var 'aux183' direct represents '0' with '558'
c Var 'aux183' order represents '1' with '559'
-558 559 0
c Var 'aux183' direct represents '1' with '560'
558 -559 560 0
-560 559 0
-560 -558 0
c Var 'aux183' order represents '2' with '561'
-559 561 0
c Var 'aux183' direct represents '2' with '562'
559 -561 562 0
-562 561 0
-562 -559 0
c Var 'aux183' order represents '3' with '563'
-561 563 0
c Var 'aux183' direct represents '3' with '564'
561 -563 564 0
-564 563 0
-564 -561 0
c Var 'aux183' direct represents '4' with '-563'
558 560 562 564 -563 0
c Encoding variable: aux184 with domain: int(0..4) (representing constraint (aux178 + aux180))
c Both direct and order encoding.
c Var 'aux184' order represents '0' with '565'
c Var 'aux184' direct represents '0' with '565'
c Var 'aux184' order represents '1' with '566'
-565 566 0
c Var 'aux184' direct represents '1' with '567'
565 -566 567 0
-567 566 0
-567 -565 0
c Var 'aux184' order represents '2' with '568'
-566 568 0
c Var 'aux184' direct represents '2' with '569'
566 -568 569 0
-569 568 0
-569 -566 0
c Var 'aux184' order represents '3' with '570'
-568 570 0
c Var 'aux184' direct represents '3' with '571'
568 -570 571 0
-571 570 0
-571 -568 0
c Var 'aux184' direct represents '4' with '-570'
565 567 569 571 -570 0
c Encoding variable: aux185 with domain: int(0..2) (representing constraint ((0<grid_00000_00000) + (0<grid_00000_00009)))
c Both direct and order encoding.
c Var 'aux185' order represents '0' with '572'
c Var 'aux185' direct represents '0' with '572'
c Var 'aux185' order represents '1' with '573'
-572 573 0
c Var 'aux185' direct represents '1' with '574'
572 -573 574 0
-574 573 0
-574 -572 0
c Var 'aux185' direct represents '2' with '-573'
572 574 -573 0
c Encoding variable: aux186 with domain: int(0..2) (representing constraint ((0<grid_00000_00008) + (0<grid_00000_00001)))
c Both direct and order encoding.
c Var 'aux186' order represents '0' with '575'
c Var 'aux186' direct represents '0' with '575'
c Var 'aux186' order represents '1' with '576'
-575 576 0
c Var 'aux186' direct represents '1' with '577'
575 -576 577 0
-577 576 0
-577 -575 0
c Var 'aux186' direct represents '2' with '-576'
575 577 -576 0
c Encoding variable: aux187 with domain: int(0..2) (representing constraint ((0<grid_00000_00003) + (0<grid_00000_00007)))
c Both direct and order encoding.
c Var 'aux187' order represents '0' with '578'
c Var 'aux187' direct represents '0' with '578'
c Var 'aux187' order represents '1' with '579'
-578 579 0
c Var 'aux187' direct represents '1' with '580'
578 -579 580 0
-580 579 0
-580 -578 0
c Var 'aux187' direct represents '2' with '-579'
578 580 -579 0
c Encoding variable: aux188 with domain: int(0..2) (representing constraint ((0<grid_00000_00006) + (0<grid_00000_00004)))
c Both direct and order encoding.
c Var 'aux188' order represents '0' with '581'
c Var 'aux188' direct represents '0' with '581'
c Var 'aux188' order represents '1' with '582'
-581 582 0
c Var 'aux188' direct represents '1' with '583'
581 -582 583 0
-583 582 0
-583 -581 0
c Var 'aux188' direct represents '2' with '-582'
581 583 -582 0
c Encoding variable: aux189 with domain: int(0..2) (representing constraint ((0<grid_00000_00005) + (0<grid_00000_00002)))
c Both direct and order encoding.
c Var 'aux189' order represents '0' with '584'
c Var 'aux189' direct represents '0' with '584'
c Var 'aux189' order represents '1' with '585'
-584 585 0
c Var 'aux189' direct represents '1' with '586'
584 -585 586 0
-586 585 0
-586 -584 0
c Var 'aux189' direct represents '2' with '-585'
584 586 -585 0
c Encoding variable: aux190 with domain: int(0..4) (representing constraint (aux186 + aux189))
c Both direct and order encoding.
c Var 'aux190' order represents '0' with '587'
c Var 'aux190' direct represents '0' with '587'
c Var 'aux190' order represents '1' with '588'
-587 588 0
c Var 'aux190' direct represents '1' with '589'
587 -588 589 0
-589 588 0
-589 -587 0
c Var 'aux190' order represents '2' with '590'
-588 590 0
c Var 'aux190' direct represents '2' with '591'
588 -590 591 0
-591 590 0
-591 -588 0
c Var 'aux190' order represents '3' with '592'
-590 592 0
c Var 'aux190' direct represents '3' with '593'
590 -592 593 0
-593 592 0
-593 -590 0
c Var 'aux190' direct represents '4' with '-592'
587 589 591 593 -592 0
c Encoding variable: aux191 with domain: int(0..4) (representing constraint (aux185 + aux187))
c Both direct and order encoding.
c Var 'aux191' order represents '0' with '594'
c Var 'aux191' direct represents '0' with '594'
c Var 'aux191' order represents '1' with '595'
-594 595 0
c Var 'aux191' direct represents '1' with '596'
594 -595 596 0
-596 595 0
-596 -594 0
c Var 'aux191' order represents '2' with '597'
-595 597 0
c Var 'aux191' direct represents '2' with '598'
595 -597 598 0
-598 597 0
-598 -595 0
c Var 'aux191' order represents '3' with '599'
-597 599 0
c Var 'aux191' direct represents '3' with '600'
597 -599 600 0
-600 599 0
-600 -597 0
c Var 'aux191' direct represents '4' with '-599'
594 596 598 600 -599 0
c Encoding variable: aux192 with domain: int(0..2) (representing constraint ((0<grid_00001_00000) + (0<grid_00001_00009)))
c Both direct and order encoding.
c Var 'aux192' order represents '0' with '601'
c Var 'aux192' direct represents '0' with '601'
c Var 'aux192' order represents '1' with '602'
-601 602 0
c Var 'aux192' direct represents '1' with '603'
601 -602 603 0
-603 602 0
-603 -601 0
c Var 'aux192' direct represents '2' with '-602'
601 603 -602 0
c Encoding variable: aux193 with domain: int(0..2) (representing constraint ((0<grid_00001_00008) + (0<grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux193' order represents '0' with '604'
c Var 'aux193' direct represents '0' with '604'
c Var 'aux193' order represents '1' with '605'
-604 605 0
c Var 'aux193' direct represents '1' with '606'
604 -605 606 0
-606 605 0
-606 -604 0
c Var 'aux193' direct represents '2' with '-605'
604 606 -605 0
c Encoding variable: aux194 with domain: int(0..2) (representing constraint ((0<grid_00001_00003) + (0<grid_00001_00007)))
c Both direct and order encoding.
c Var 'aux194' order represents '0' with '607'
c Var 'aux194' direct represents '0' with '607'
c Var 'aux194' order represents '1' with '608'
-607 608 0
c Var 'aux194' direct represents '1' with '609'
607 -608 609 0
-609 608 0
-609 -607 0
c Var 'aux194' direct represents '2' with '-608'
607 609 -608 0
c Encoding variable: aux195 with domain: int(0..2) (representing constraint ((0<grid_00001_00006) + (0<grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux195' order represents '0' with '610'
c Var 'aux195' direct represents '0' with '610'
c Var 'aux195' order represents '1' with '611'
-610 611 0
c Var 'aux195' direct represents '1' with '612'
610 -611 612 0
-612 611 0
-612 -610 0
c Var 'aux195' direct represents '2' with '-611'
610 612 -611 0
c Encoding variable: aux196 with domain: int(0..2) (representing constraint ((0<grid_00001_00005) + (0<grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux196' order represents '0' with '613'
c Var 'aux196' direct represents '0' with '613'
c Var 'aux196' order represents '1' with '614'
-613 614 0
c Var 'aux196' direct represents '1' with '615'
613 -614 615 0
-615 614 0
-615 -613 0
c Var 'aux196' direct represents '2' with '-614'
613 615 -614 0
c Encoding variable: aux197 with domain: int(0..4) (representing constraint (aux193 + aux196))
c Both direct and order encoding.
c Var 'aux197' order represents '0' with '616'
c Var 'aux197' direct represents '0' with '616'
c Var 'aux197' order represents '1' with '617'
-616 617 0
c Var 'aux197' direct represents '1' with '618'
616 -617 618 0
-618 617 0
-618 -616 0
c Var 'aux197' order represents '2' with '619'
-617 619 0
c Var 'aux197' direct represents '2' with '620'
617 -619 620 0
-620 619 0
-620 -617 0
c Var 'aux197' order represents '3' with '621'
-619 621 0
c Var 'aux197' direct represents '3' with '622'
619 -621 622 0
-622 621 0
-622 -619 0
c Var 'aux197' direct represents '4' with '-621'
616 618 620 622 -621 0
c Encoding variable: aux198 with domain: int(0..4) (representing constraint (aux192 + aux194))
c Both direct and order encoding.
c Var 'aux198' order represents '0' with '623'
c Var 'aux198' direct represents '0' with '623'
c Var 'aux198' order represents '1' with '624'
-623 624 0
c Var 'aux198' direct represents '1' with '625'
623 -624 625 0
-625 624 0
-625 -623 0
c Var 'aux198' order represents '2' with '626'
-624 626 0
c Var 'aux198' direct represents '2' with '627'
624 -626 627 0
-627 626 0
-627 -624 0
c Var 'aux198' order represents '3' with '628'
-626 628 0
c Var 'aux198' direct represents '3' with '629'
626 -628 629 0
-629 628 0
-629 -626 0
c Var 'aux198' direct represents '4' with '-628'
623 625 627 629 -628 0
c Encoding variable: aux199 with domain: int(0..2) (representing constraint ((0<grid_00002_00000) + (0<grid_00002_00009)))
c Both direct and order encoding.
c Var 'aux199' order represents '0' with '630'
c Var 'aux199' direct represents '0' with '630'
c Var 'aux199' order represents '1' with '631'
-630 631 0
c Var 'aux199' direct represents '1' with '632'
630 -631 632 0
-632 631 0
-632 -630 0
c Var 'aux199' direct represents '2' with '-631'
630 632 -631 0
c Encoding variable: aux200 with domain: int(0..2) (representing constraint ((0<grid_00002_00008) + (0<grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux200' order represents '0' with '633'
c Var 'aux200' direct represents '0' with '633'
c Var 'aux200' order represents '1' with '634'
-633 634 0
c Var 'aux200' direct represents '1' with '635'
633 -634 635 0
-635 634 0
-635 -633 0
c Var 'aux200' direct represents '2' with '-634'
633 635 -634 0
c Encoding variable: aux201 with domain: int(0..2) (representing constraint ((0<grid_00002_00003) + (0<grid_00002_00007)))
c Both direct and order encoding.
c Var 'aux201' order represents '0' with '636'
c Var 'aux201' direct represents '0' with '636'
c Var 'aux201' order represents '1' with '637'
-636 637 0
c Var 'aux201' direct represents '1' with '638'
636 -637 638 0
-638 637 0
-638 -636 0
c Var 'aux201' direct represents '2' with '-637'
636 638 -637 0
c Encoding variable: aux202 with domain: int(0..2) (representing constraint ((0<grid_00002_00006) + (0<grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux202' order represents '0' with '639'
c Var 'aux202' direct represents '0' with '639'
c Var 'aux202' order represents '1' with '640'
-639 640 0
c Var 'aux202' direct represents '1' with '641'
639 -640 641 0
-641 640 0
-641 -639 0
c Var 'aux202' direct represents '2' with '-640'
639 641 -640 0
c Encoding variable: aux203 with domain: int(0..2) (representing constraint ((0<grid_00002_00005) + (0<grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux203' order represents '0' with '642'
c Var 'aux203' direct represents '0' with '642'
c Var 'aux203' order represents '1' with '643'
-642 643 0
c Var 'aux203' direct represents '1' with '644'
642 -643 644 0
-644 643 0
-644 -642 0
c Var 'aux203' direct represents '2' with '-643'
642 644 -643 0
c Encoding variable: aux204 with domain: int(0..4) (representing constraint (aux200 + aux203))
c Both direct and order encoding.
c Var 'aux204' order represents '0' with '645'
c Var 'aux204' direct represents '0' with '645'
c Var 'aux204' order represents '1' with '646'
-645 646 0
c Var 'aux204' direct represents '1' with '647'
645 -646 647 0
-647 646 0
-647 -645 0
c Var 'aux204' order represents '2' with '648'
-646 648 0
c Var 'aux204' direct represents '2' with '649'
646 -648 649 0
-649 648 0
-649 -646 0
c Var 'aux204' order represents '3' with '650'
-648 650 0
c Var 'aux204' direct represents '3' with '651'
648 -650 651 0
-651 650 0
-651 -648 0
c Var 'aux204' direct represents '4' with '-650'
645 647 649 651 -650 0
c Encoding variable: aux205 with domain: int(0..4) (representing constraint (aux199 + aux201))
c Both direct and order encoding.
c Var 'aux205' order represents '0' with '652'
c Var 'aux205' direct represents '0' with '652'
c Var 'aux205' order represents '1' with '653'
-652 653 0
c Var 'aux205' direct represents '1' with '654'
652 -653 654 0
-654 653 0
-654 -652 0
c Var 'aux205' order represents '2' with '655'
-653 655 0
c Var 'aux205' direct represents '2' with '656'
653 -655 656 0
-656 655 0
-656 -653 0
c Var 'aux205' order represents '3' with '657'
-655 657 0
c Var 'aux205' direct represents '3' with '658'
655 -657 658 0
-658 657 0
-658 -655 0
c Var 'aux205' direct represents '4' with '-657'
652 654 656 658 -657 0
c Encoding variable: aux206 with domain: int(0..2) (representing constraint ((0<grid_00003_00000) + (0<grid_00003_00009)))
c Both direct and order encoding.
c Var 'aux206' order represents '0' with '659'
c Var 'aux206' direct represents '0' with '659'
c Var 'aux206' order represents '1' with '660'
-659 660 0
c Var 'aux206' direct represents '1' with '661'
659 -660 661 0
-661 660 0
-661 -659 0
c Var 'aux206' direct represents '2' with '-660'
659 661 -660 0
c Encoding variable: aux207 with domain: int(0..2) (representing constraint ((0<grid_00003_00008) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux207' order represents '0' with '662'
c Var 'aux207' direct represents '0' with '662'
c Var 'aux207' order represents '1' with '663'
-662 663 0
c Var 'aux207' direct represents '1' with '664'
662 -663 664 0
-664 663 0
-664 -662 0
c Var 'aux207' direct represents '2' with '-663'
662 664 -663 0
c Encoding variable: aux208 with domain: int(0..2) (representing constraint ((0<grid_00003_00003) + (0<grid_00003_00007)))
c Both direct and order encoding.
c Var 'aux208' order represents '0' with '665'
c Var 'aux208' direct represents '0' with '665'
c Var 'aux208' order represents '1' with '666'
-665 666 0
c Var 'aux208' direct represents '1' with '667'
665 -666 667 0
-667 666 0
-667 -665 0
c Var 'aux208' direct represents '2' with '-666'
665 667 -666 0
c Encoding variable: aux209 with domain: int(0..2) (representing constraint ((0<grid_00003_00006) + (0<grid_00003_00004)))
c Both direct and order encoding.
c Var 'aux209' order represents '0' with '668'
c Var 'aux209' direct represents '0' with '668'
c Var 'aux209' order represents '1' with '669'
-668 669 0
c Var 'aux209' direct represents '1' with '670'
668 -669 670 0
-670 669 0
-670 -668 0
c Var 'aux209' direct represents '2' with '-669'
668 670 -669 0
c Encoding variable: aux210 with domain: int(0..2) (representing constraint ((0<grid_00003_00005) + (0<grid_00003_00002)))
c Both direct and order encoding.
c Var 'aux210' order represents '0' with '671'
c Var 'aux210' direct represents '0' with '671'
c Var 'aux210' order represents '1' with '672'
-671 672 0
c Var 'aux210' direct represents '1' with '673'
671 -672 673 0
-673 672 0
-673 -671 0
c Var 'aux210' direct represents '2' with '-672'
671 673 -672 0
c Encoding variable: aux211 with domain: int(0..4) (representing constraint (aux207 + aux210))
c Both direct and order encoding.
c Var 'aux211' order represents '0' with '674'
c Var 'aux211' direct represents '0' with '674'
c Var 'aux211' order represents '1' with '675'
-674 675 0
c Var 'aux211' direct represents '1' with '676'
674 -675 676 0
-676 675 0
-676 -674 0
c Var 'aux211' order represents '2' with '677'
-675 677 0
c Var 'aux211' direct represents '2' with '678'
675 -677 678 0
-678 677 0
-678 -675 0
c Var 'aux211' order represents '3' with '679'
-677 679 0
c Var 'aux211' direct represents '3' with '680'
677 -679 680 0
-680 679 0
-680 -677 0
c Var 'aux211' direct represents '4' with '-679'
674 676 678 680 -679 0
c Encoding variable: aux212 with domain: int(0..4) (representing constraint (aux206 + aux208))
c Both direct and order encoding.
c Var 'aux212' order represents '0' with '681'
c Var 'aux212' direct represents '0' with '681'
c Var 'aux212' order represents '1' with '682'
-681 682 0
c Var 'aux212' direct represents '1' with '683'
681 -682 683 0
-683 682 0
-683 -681 0
c Var 'aux212' order represents '2' with '684'
-682 684 0
c Var 'aux212' direct represents '2' with '685'
682 -684 685 0
-685 684 0
-685 -682 0
c Var 'aux212' order represents '3' with '686'
-684 686 0
c Var 'aux212' direct represents '3' with '687'
684 -686 687 0
-687 686 0
-687 -684 0
c Var 'aux212' direct represents '4' with '-686'
681 683 685 687 -686 0
c Encoding variable: aux213 with domain: int(0..2) (representing constraint ((0<grid_00004_00000) + (0<grid_00004_00009)))
c Both direct and order encoding.
c Var 'aux213' order represents '0' with '688'
c Var 'aux213' direct represents '0' with '688'
c Var 'aux213' order represents '1' with '689'
-688 689 0
c Var 'aux213' direct represents '1' with '690'
688 -689 690 0
-690 689 0
-690 -688 0
c Var 'aux213' direct represents '2' with '-689'
688 690 -689 0
c Encoding variable: aux214 with domain: int(0..2) (representing constraint ((0<grid_00004_00008) + (0<grid_00004_00001)))
c Both direct and order encoding.
c Var 'aux214' order represents '0' with '691'
c Var 'aux214' direct represents '0' with '691'
c Var 'aux214' order represents '1' with '692'
-691 692 0
c Var 'aux214' direct represents '1' with '693'
691 -692 693 0
-693 692 0
-693 -691 0
c Var 'aux214' direct represents '2' with '-692'
691 693 -692 0
c Encoding variable: aux215 with domain: int(0..2) (representing constraint ((0<grid_00004_00003) + (0<grid_00004_00007)))
c Both direct and order encoding.
c Var 'aux215' order represents '0' with '694'
c Var 'aux215' direct represents '0' with '694'
c Var 'aux215' order represents '1' with '695'
-694 695 0
c Var 'aux215' direct represents '1' with '696'
694 -695 696 0
-696 695 0
-696 -694 0
c Var 'aux215' direct represents '2' with '-695'
694 696 -695 0
c Encoding variable: aux216 with domain: int(0..2) (representing constraint ((0<grid_00004_00006) + (0<grid_00004_00004)))
c Both direct and order encoding.
c Var 'aux216' order represents '0' with '697'
c Var 'aux216' direct represents '0' with '697'
c Var 'aux216' order represents '1' with '698'
-697 698 0
c Var 'aux216' direct represents '1' with '699'
697 -698 699 0
-699 698 0
-699 -697 0
c Var 'aux216' direct represents '2' with '-698'
697 699 -698 0
c Encoding variable: aux217 with domain: int(0..2) (representing constraint ((0<grid_00004_00005) + (0<grid_00004_00002)))
c Both direct and order encoding.
c Var 'aux217' order represents '0' with '700'
c Var 'aux217' direct represents '0' with '700'
c Var 'aux217' order represents '1' with '701'
-700 701 0
c Var 'aux217' direct represents '1' with '702'
700 -701 702 0
-702 701 0
-702 -700 0
c Var 'aux217' direct represents '2' with '-701'
700 702 -701 0
c Encoding variable: aux218 with domain: int(0..4) (representing constraint (aux214 + aux217))
c Both direct and order encoding.
c Var 'aux218' order represents '0' with '703'
c Var 'aux218' direct represents '0' with '703'
c Var 'aux218' order represents '1' with '704'
-703 704 0
c Var 'aux218' direct represents '1' with '705'
703 -704 705 0
-705 704 0
-705 -703 0
c Var 'aux218' order represents '2' with '706'
-704 706 0
c Var 'aux218' direct represents '2' with '707'
704 -706 707 0
-707 706 0
-707 -704 0
c Var 'aux218' order represents '3' with '708'
-706 708 0
c Var 'aux218' direct represents '3' with '709'
706 -708 709 0
-709 708 0
-709 -706 0
c Var 'aux218' direct represents '4' with '-708'
703 705 707 709 -708 0
c Encoding variable: aux219 with domain: int(0..4) (representing constraint (aux213 + aux215))
c Both direct and order encoding.
c Var 'aux219' order represents '0' with '710'
c Var 'aux219' direct represents '0' with '710'
c Var 'aux219' order represents '1' with '711'
-710 711 0
c Var 'aux219' direct represents '1' with '712'
710 -711 712 0
-712 711 0
-712 -710 0
c Var 'aux219' order represents '2' with '713'
-711 713 0
c Var 'aux219' direct represents '2' with '714'
711 -713 714 0
-714 713 0
-714 -711 0
c Var 'aux219' order represents '3' with '715'
-713 715 0
c Var 'aux219' direct represents '3' with '716'
713 -715 716 0
-716 715 0
-716 -713 0
c Var 'aux219' direct represents '4' with '-715'
710 712 714 716 -715 0
c Encoding variable: aux220 with domain: int(0..2) (representing constraint ((0<grid_00005_00000) + (0<grid_00005_00009)))
c Both direct and order encoding.
c Var 'aux220' order represents '0' with '717'
c Var 'aux220' direct represents '0' with '717'
c Var 'aux220' order represents '1' with '718'
-717 718 0
c Var 'aux220' direct represents '1' with '719'
717 -718 719 0
-719 718 0
-719 -717 0
c Var 'aux220' direct represents '2' with '-718'
717 719 -718 0
c Encoding variable: aux221 with domain: int(0..2) (representing constraint ((0<grid_00005_00008) + (0<grid_00005_00001)))
c Both direct and order encoding.
c Var 'aux221' order represents '0' with '720'
c Var 'aux221' direct represents '0' with '720'
c Var 'aux221' order represents '1' with '721'
-720 721 0
c Var 'aux221' direct represents '1' with '722'
720 -721 722 0
-722 721 0
-722 -720 0
c Var 'aux221' direct represents '2' with '-721'
720 722 -721 0
c Encoding variable: aux222 with domain: int(0..2) (representing constraint ((0<grid_00005_00003) + (0<grid_00005_00007)))
c Both direct and order encoding.
c Var 'aux222' order represents '0' with '723'
c Var 'aux222' direct represents '0' with '723'
c Var 'aux222' order represents '1' with '724'
-723 724 0
c Var 'aux222' direct represents '1' with '725'
723 -724 725 0
-725 724 0
-725 -723 0
c Var 'aux222' direct represents '2' with '-724'
723 725 -724 0
c Encoding variable: aux223 with domain: int(0..2) (representing constraint ((0<grid_00005_00006) + (0<grid_00005_00004)))
c Both direct and order encoding.
c Var 'aux223' order represents '0' with '726'
c Var 'aux223' direct represents '0' with '726'
c Var 'aux223' order represents '1' with '727'
-726 727 0
c Var 'aux223' direct represents '1' with '728'
726 -727 728 0
-728 727 0
-728 -726 0
c Var 'aux223' direct represents '2' with '-727'
726 728 -727 0
c Encoding variable: aux224 with domain: int(0..2) (representing constraint ((0<grid_00005_00005) + (0<grid_00005_00002)))
c Both direct and order encoding.
c Var 'aux224' order represents '0' with '729'
c Var 'aux224' direct represents '0' with '729'
c Var 'aux224' order represents '1' with '730'
-729 730 0
c Var 'aux224' direct represents '1' with '731'
729 -730 731 0
-731 730 0
-731 -729 0
c Var 'aux224' direct represents '2' with '-730'
729 731 -730 0
c Encoding variable: aux225 with domain: int(0..4) (representing constraint (aux221 + aux224))
c Both direct and order encoding.
c Var 'aux225' order represents '0' with '732'
c Var 'aux225' direct represents '0' with '732'
c Var 'aux225' order represents '1' with '733'
-732 733 0
c Var 'aux225' direct represents '1' with '734'
732 -733 734 0
-734 733 0
-734 -732 0
c Var 'aux225' order represents '2' with '735'
-733 735 0
c Var 'aux225' direct represents '2' with '736'
733 -735 736 0
-736 735 0
-736 -733 0
c Var 'aux225' order represents '3' with '737'
-735 737 0
c Var 'aux225' direct represents '3' with '738'
735 -737 738 0
-738 737 0
-738 -735 0
c Var 'aux225' direct represents '4' with '-737'
732 734 736 738 -737 0
c Encoding variable: aux226 with domain: int(0..4) (representing constraint (aux220 + aux222))
c Both direct and order encoding.
c Var 'aux226' order represents '0' with '739'
c Var 'aux226' direct represents '0' with '739'
c Var 'aux226' order represents '1' with '740'
-739 740 0
c Var 'aux226' direct represents '1' with '741'
739 -740 741 0
-741 740 0
-741 -739 0
c Var 'aux226' order represents '2' with '742'
-740 742 0
c Var 'aux226' direct represents '2' with '743'
740 -742 743 0
-743 742 0
-743 -740 0
c Var 'aux226' order represents '3' with '744'
-742 744 0
c Var 'aux226' direct represents '3' with '745'
742 -744 745 0
-745 744 0
-745 -742 0
c Var 'aux226' direct represents '4' with '-744'
739 741 743 745 -744 0
c Encoding variable: aux227 with domain: int(0..2) (representing constraint ((0<grid_00006_00000) + (0<grid_00006_00009)))
c Both direct and order encoding.
c Var 'aux227' order represents '0' with '746'
c Var 'aux227' direct represents '0' with '746'
c Var 'aux227' order represents '1' with '747'
-746 747 0
c Var 'aux227' direct represents '1' with '748'
746 -747 748 0
-748 747 0
-748 -746 0
c Var 'aux227' direct represents '2' with '-747'
746 748 -747 0
c Encoding variable: aux228 with domain: int(0..2) (representing constraint ((0<grid_00006_00008) + (0<grid_00006_00001)))
c Both direct and order encoding.
c Var 'aux228' order represents '0' with '749'
c Var 'aux228' direct represents '0' with '749'
c Var 'aux228' order represents '1' with '750'
-749 750 0
c Var 'aux228' direct represents '1' with '751'
749 -750 751 0
-751 750 0
-751 -749 0
c Var 'aux228' direct represents '2' with '-750'
749 751 -750 0
c Encoding variable: aux229 with domain: int(0..2) (representing constraint ((0<grid_00006_00003) + (0<grid_00006_00007)))
c Both direct and order encoding.
c Var 'aux229' order represents '0' with '752'
c Var 'aux229' direct represents '0' with '752'
c Var 'aux229' order represents '1' with '753'
-752 753 0
c Var 'aux229' direct represents '1' with '754'
752 -753 754 0
-754 753 0
-754 -752 0
c Var 'aux229' direct represents '2' with '-753'
752 754 -753 0
c Encoding variable: aux230 with domain: int(0..2) (representing constraint ((0<grid_00006_00006) + (0<grid_00006_00004)))
c Both direct and order encoding.
c Var 'aux230' order represents '0' with '755'
c Var 'aux230' direct represents '0' with '755'
c Var 'aux230' order represents '1' with '756'
-755 756 0
c Var 'aux230' direct represents '1' with '757'
755 -756 757 0
-757 756 0
-757 -755 0
c Var 'aux230' direct represents '2' with '-756'
755 757 -756 0
c Encoding variable: aux231 with domain: int(0..2) (representing constraint ((0<grid_00006_00005) + (0<grid_00006_00002)))
c Both direct and order encoding.
c Var 'aux231' order represents '0' with '758'
c Var 'aux231' direct represents '0' with '758'
c Var 'aux231' order represents '1' with '759'
-758 759 0
c Var 'aux231' direct represents '1' with '760'
758 -759 760 0
-760 759 0
-760 -758 0
c Var 'aux231' direct represents '2' with '-759'
758 760 -759 0
c Encoding variable: aux232 with domain: int(0..4) (representing constraint (aux228 + aux231))
c Both direct and order encoding.
c Var 'aux232' order represents '0' with '761'
c Var 'aux232' direct represents '0' with '761'
c Var 'aux232' order represents '1' with '762'
-761 762 0
c Var 'aux232' direct represents '1' with '763'
761 -762 763 0
-763 762 0
-763 -761 0
c Var 'aux232' order represents '2' with '764'
-762 764 0
c Var 'aux232' direct represents '2' with '765'
762 -764 765 0
-765 764 0
-765 -762 0
c Var 'aux232' order represents '3' with '766'
-764 766 0
c Var 'aux232' direct represents '3' with '767'
764 -766 767 0
-767 766 0
-767 -764 0
c Var 'aux232' direct represents '4' with '-766'
761 763 765 767 -766 0
c Encoding variable: aux233 with domain: int(0..4) (representing constraint (aux227 + aux229))
c Both direct and order encoding.
c Var 'aux233' order represents '0' with '768'
c Var 'aux233' direct represents '0' with '768'
c Var 'aux233' order represents '1' with '769'
-768 769 0
c Var 'aux233' direct represents '1' with '770'
768 -769 770 0
-770 769 0
-770 -768 0
c Var 'aux233' order represents '2' with '771'
-769 771 0
c Var 'aux233' direct represents '2' with '772'
769 -771 772 0
-772 771 0
-772 -769 0
c Var 'aux233' order represents '3' with '773'
-771 773 0
c Var 'aux233' direct represents '3' with '774'
771 -773 774 0
-774 773 0
-774 -771 0
c Var 'aux233' direct represents '4' with '-773'
768 770 772 774 -773 0
c Encoding variable: aux234 with domain: int(0..2) (representing constraint ((0<grid_00007_00000) + (0<grid_00007_00009)))
c Both direct and order encoding.
c Var 'aux234' order represents '0' with '775'
c Var 'aux234' direct represents '0' with '775'
c Var 'aux234' order represents '1' with '776'
-775 776 0
c Var 'aux234' direct represents '1' with '777'
775 -776 777 0
-777 776 0
-777 -775 0
c Var 'aux234' direct represents '2' with '-776'
775 777 -776 0
c Encoding variable: aux235 with domain: int(0..2) (representing constraint ((0<grid_00007_00008) + (0<grid_00007_00001)))
c Both direct and order encoding.
c Var 'aux235' order represents '0' with '778'
c Var 'aux235' direct represents '0' with '778'
c Var 'aux235' order represents '1' with '779'
-778 779 0
c Var 'aux235' direct represents '1' with '780'
778 -779 780 0
-780 779 0
-780 -778 0
c Var 'aux235' direct represents '2' with '-779'
778 780 -779 0
c Encoding variable: aux236 with domain: int(0..2) (representing constraint ((0<grid_00007_00003) + (0<grid_00007_00007)))
c Both direct and order encoding.
c Var 'aux236' order represents '0' with '781'
c Var 'aux236' direct represents '0' with '781'
c Var 'aux236' order represents '1' with '782'
-781 782 0
c Var 'aux236' direct represents '1' with '783'
781 -782 783 0
-783 782 0
-783 -781 0
c Var 'aux236' direct represents '2' with '-782'
781 783 -782 0
c Encoding variable: aux237 with domain: int(0..2) (representing constraint ((0<grid_00007_00006) + (0<grid_00007_00004)))
c Both direct and order encoding.
c Var 'aux237' order represents '0' with '784'
c Var 'aux237' direct represents '0' with '784'
c Var 'aux237' order represents '1' with '785'
-784 785 0
c Var 'aux237' direct represents '1' with '786'
784 -785 786 0
-786 785 0
-786 -784 0
c Var 'aux237' direct represents '2' with '-785'
784 786 -785 0
c Encoding variable: aux238 with domain: int(0..2) (representing constraint ((0<grid_00007_00005) + (0<grid_00007_00002)))
c Both direct and order encoding.
c Var 'aux238' order represents '0' with '787'
c Var 'aux238' direct represents '0' with '787'
c Var 'aux238' order represents '1' with '788'
-787 788 0
c Var 'aux238' direct represents '1' with '789'
787 -788 789 0
-789 788 0
-789 -787 0
c Var 'aux238' direct represents '2' with '-788'
787 789 -788 0
c Encoding variable: aux239 with domain: int(0..4) (representing constraint (aux235 + aux238))
c Both direct and order encoding.
c Var 'aux239' order represents '0' with '790'
c Var 'aux239' direct represents '0' with '790'
c Var 'aux239' order represents '1' with '791'
-790 791 0
c Var 'aux239' direct represents '1' with '792'
790 -791 792 0
-792 791 0
-792 -790 0
c Var 'aux239' order represents '2' with '793'
-791 793 0
c Var 'aux239' direct represents '2' with '794'
791 -793 794 0
-794 793 0
-794 -791 0
c Var 'aux239' order represents '3' with '795'
-793 795 0
c Var 'aux239' direct represents '3' with '796'
793 -795 796 0
-796 795 0
-796 -793 0
c Var 'aux239' direct represents '4' with '-795'
790 792 794 796 -795 0
c Encoding variable: aux240 with domain: int(0..4) (representing constraint (aux234 + aux236))
c Both direct and order encoding.
c Var 'aux240' order represents '0' with '797'
c Var 'aux240' direct represents '0' with '797'
c Var 'aux240' order represents '1' with '798'
-797 798 0
c Var 'aux240' direct represents '1' with '799'
797 -798 799 0
-799 798 0
-799 -797 0
c Var 'aux240' order represents '2' with '800'
-798 800 0
c Var 'aux240' direct represents '2' with '801'
798 -800 801 0
-801 800 0
-801 -798 0
c Var 'aux240' order represents '3' with '802'
-800 802 0
c Var 'aux240' direct represents '3' with '803'
800 -802 803 0
-803 802 0
-803 -800 0
c Var 'aux240' direct represents '4' with '-802'
797 799 801 803 -802 0
c Encoding variable: aux241 with domain: int(0..2) (representing constraint ((0<grid_00008_00000) + (0<grid_00008_00009)))
c Both direct and order encoding.
c Var 'aux241' order represents '0' with '804'
c Var 'aux241' direct represents '0' with '804'
c Var 'aux241' order represents '1' with '805'
-804 805 0
c Var 'aux241' direct represents '1' with '806'
804 -805 806 0
-806 805 0
-806 -804 0
c Var 'aux241' direct represents '2' with '-805'
804 806 -805 0
c Encoding variable: aux242 with domain: int(0..2) (representing constraint ((0<grid_00008_00008) + (0<grid_00008_00001)))
c Both direct and order encoding.
c Var 'aux242' order represents '0' with '807'
c Var 'aux242' direct represents '0' with '807'
c Var 'aux242' order represents '1' with '808'
-807 808 0
c Var 'aux242' direct represents '1' with '809'
807 -808 809 0
-809 808 0
-809 -807 0
c Var 'aux242' direct represents '2' with '-808'
807 809 -808 0
c Encoding variable: aux243 with domain: int(0..2) (representing constraint ((0<grid_00008_00003) + (0<grid_00008_00007)))
c Both direct and order encoding.
c Var 'aux243' order represents '0' with '810'
c Var 'aux243' direct represents '0' with '810'
c Var 'aux243' order represents '1' with '811'
-810 811 0
c Var 'aux243' direct represents '1' with '812'
810 -811 812 0
-812 811 0
-812 -810 0
c Var 'aux243' direct represents '2' with '-811'
810 812 -811 0
c Encoding variable: aux244 with domain: int(0..2) (representing constraint ((0<grid_00008_00006) + (0<grid_00008_00004)))
c Both direct and order encoding.
c Var 'aux244' order represents '0' with '813'
c Var 'aux244' direct represents '0' with '813'
c Var 'aux244' order represents '1' with '814'
-813 814 0
c Var 'aux244' direct represents '1' with '815'
813 -814 815 0
-815 814 0
-815 -813 0
c Var 'aux244' direct represents '2' with '-814'
813 815 -814 0
c Encoding variable: aux245 with domain: int(0..2) (representing constraint ((0<grid_00008_00005) + (0<grid_00008_00002)))
c Both direct and order encoding.
c Var 'aux245' order represents '0' with '816'
c Var 'aux245' direct represents '0' with '816'
c Var 'aux245' order represents '1' with '817'
-816 817 0
c Var 'aux245' direct represents '1' with '818'
816 -817 818 0
-818 817 0
-818 -816 0
c Var 'aux245' direct represents '2' with '-817'
816 818 -817 0
c Encoding variable: aux246 with domain: int(0..4) (representing constraint (aux242 + aux245))
c Both direct and order encoding.
c Var 'aux246' order represents '0' with '819'
c Var 'aux246' direct represents '0' with '819'
c Var 'aux246' order represents '1' with '820'
-819 820 0
c Var 'aux246' direct represents '1' with '821'
819 -820 821 0
-821 820 0
-821 -819 0
c Var 'aux246' order represents '2' with '822'
-820 822 0
c Var 'aux246' direct represents '2' with '823'
820 -822 823 0
-823 822 0
-823 -820 0
c Var 'aux246' order represents '3' with '824'
-822 824 0
c Var 'aux246' direct represents '3' with '825'
822 -824 825 0
-825 824 0
-825 -822 0
c Var 'aux246' direct represents '4' with '-824'
819 821 823 825 -824 0
c Encoding variable: aux247 with domain: int(0..4) (representing constraint (aux241 + aux243))
c Both direct and order encoding.
c Var 'aux247' order represents '0' with '826'
c Var 'aux247' direct represents '0' with '826'
c Var 'aux247' order represents '1' with '827'
-826 827 0
c Var 'aux247' direct represents '1' with '828'
826 -827 828 0
-828 827 0
-828 -826 0
c Var 'aux247' order represents '2' with '829'
-827 829 0
c Var 'aux247' direct represents '2' with '830'
827 -829 830 0
-830 829 0
-830 -827 0
c Var 'aux247' order represents '3' with '831'
-829 831 0
c Var 'aux247' direct represents '3' with '832'
829 -831 832 0
-832 831 0
-832 -829 0
c Var 'aux247' direct represents '4' with '-831'
826 828 830 832 -831 0
c Encoding variable: aux248 with domain: int(0..2) (representing constraint ((0<grid_00009_00000) + (0<grid_00009_00009)))
c Both direct and order encoding.
c Var 'aux248' order represents '0' with '833'
c Var 'aux248' direct represents '0' with '833'
c Var 'aux248' order represents '1' with '834'
-833 834 0
c Var 'aux248' direct represents '1' with '835'
833 -834 835 0
-835 834 0
-835 -833 0
c Var 'aux248' direct represents '2' with '-834'
833 835 -834 0
c Encoding variable: aux249 with domain: int(0..2) (representing constraint ((0<grid_00009_00008) + (0<grid_00009_00001)))
c Both direct and order encoding.
c Var 'aux249' order represents '0' with '836'
c Var 'aux249' direct represents '0' with '836'
c Var 'aux249' order represents '1' with '837'
-836 837 0
c Var 'aux249' direct represents '1' with '838'
836 -837 838 0
-838 837 0
-838 -836 0
c Var 'aux249' direct represents '2' with '-837'
836 838 -837 0
c Encoding variable: aux250 with domain: int(0..2) (representing constraint ((0<grid_00009_00003) + (0<grid_00009_00007)))
c Both direct and order encoding.
c Var 'aux250' order represents '0' with '839'
c Var 'aux250' direct represents '0' with '839'
c Var 'aux250' order represents '1' with '840'
-839 840 0
c Var 'aux250' direct represents '1' with '841'
839 -840 841 0
-841 840 0
-841 -839 0
c Var 'aux250' direct represents '2' with '-840'
839 841 -840 0
c Encoding variable: aux251 with domain: int(0..2) (representing constraint ((0<grid_00009_00006) + (0<grid_00009_00004)))
c Both direct and order encoding.
c Var 'aux251' order represents '0' with '842'
c Var 'aux251' direct represents '0' with '842'
c Var 'aux251' order represents '1' with '843'
-842 843 0
c Var 'aux251' direct represents '1' with '844'
842 -843 844 0
-844 843 0
-844 -842 0
c Var 'aux251' direct represents '2' with '-843'
842 844 -843 0
c Encoding variable: aux252 with domain: int(0..2) (representing constraint ((0<grid_00009_00005) + (0<grid_00009_00002)))
c Both direct and order encoding.
c Var 'aux252' order represents '0' with '845'
c Var 'aux252' direct represents '0' with '845'
c Var 'aux252' order represents '1' with '846'
-845 846 0
c Var 'aux252' direct represents '1' with '847'
845 -846 847 0
-847 846 0
-847 -845 0
c Var 'aux252' direct represents '2' with '-846'
845 847 -846 0
c Encoding variable: aux253 with domain: int(0..4) (representing constraint (aux249 + aux252))
c Both direct and order encoding.
c Var 'aux253' order represents '0' with '848'
c Var 'aux253' direct represents '0' with '848'
c Var 'aux253' order represents '1' with '849'
-848 849 0
c Var 'aux253' direct represents '1' with '850'
848 -849 850 0
-850 849 0
-850 -848 0
c Var 'aux253' order represents '2' with '851'
-849 851 0
c Var 'aux253' direct represents '2' with '852'
849 -851 852 0
-852 851 0
-852 -849 0
c Var 'aux253' order represents '3' with '853'
-851 853 0
c Var 'aux253' direct represents '3' with '854'
851 -853 854 0
-854 853 0
-854 -851 0
c Var 'aux253' direct represents '4' with '-853'
848 850 852 854 -853 0
c Encoding variable: aux254 with domain: int(0..4) (representing constraint (aux248 + aux250))
c Both direct and order encoding.
c Var 'aux254' order represents '0' with '855'
c Var 'aux254' direct represents '0' with '855'
c Var 'aux254' order represents '1' with '856'
-855 856 0
c Var 'aux254' direct represents '1' with '857'
855 -856 857 0
-857 856 0
-857 -855 0
c Var 'aux254' order represents '2' with '858'
-856 858 0
c Var 'aux254' direct represents '2' with '859'
856 -858 859 0
-859 858 0
-859 -856 0
c Var 'aux254' order represents '3' with '860'
-858 860 0
c Var 'aux254' direct represents '3' with '861'
858 -860 861 0
-861 860 0
-861 -858 0
c Var 'aux254' direct represents '4' with '-860'
855 857 859 861 -860 0
c Encoding variable: aux255 with domain: int(0..2) (representing constraint ((0<grid_00002_00000) + (0<grid_00006_00000)))
c Both direct and order encoding.
c Var 'aux255' order represents '0' with '862'
c Var 'aux255' direct represents '0' with '862'
c Var 'aux255' order represents '1' with '863'
-862 863 0
c Var 'aux255' direct represents '1' with '864'
862 -863 864 0
-864 863 0
-864 -862 0
c Var 'aux255' direct represents '2' with '-863'
862 864 -863 0
c Encoding variable: aux256 with domain: int(0..2) (representing constraint ((0<grid_00001_00000) + (0<grid_00007_00000)))
c Both direct and order encoding.
c Var 'aux256' order represents '0' with '865'
c Var 'aux256' direct represents '0' with '865'
c Var 'aux256' order represents '1' with '866'
-865 866 0
c Var 'aux256' direct represents '1' with '867'
865 -866 867 0
-867 866 0
-867 -865 0
c Var 'aux256' direct represents '2' with '-866'
865 867 -866 0
c Encoding variable: aux257 with domain: int(0..2) (representing constraint ((0<grid_00008_00000) + (0<grid_00005_00000)))
c Both direct and order encoding.
c Var 'aux257' order represents '0' with '868'
c Var 'aux257' direct represents '0' with '868'
c Var 'aux257' order represents '1' with '869'
-868 869 0
c Var 'aux257' direct represents '1' with '870'
868 -869 870 0
-870 869 0
-870 -868 0
c Var 'aux257' direct represents '2' with '-869'
868 870 -869 0
c Encoding variable: aux258 with domain: int(0..2) (representing constraint ((0<grid_00000_00000) + (0<grid_00004_00000)))
c Both direct and order encoding.
c Var 'aux258' order represents '0' with '871'
c Var 'aux258' direct represents '0' with '871'
c Var 'aux258' order represents '1' with '872'
-871 872 0
c Var 'aux258' direct represents '1' with '873'
871 -872 873 0
-873 872 0
-873 -871 0
c Var 'aux258' direct represents '2' with '-872'
871 873 -872 0
c Encoding variable: aux259 with domain: int(0..2) (representing constraint ((0<grid_00009_00000) + (0<grid_00003_00000)))
c Both direct and order encoding.
c Var 'aux259' order represents '0' with '874'
c Var 'aux259' direct represents '0' with '874'
c Var 'aux259' order represents '1' with '875'
-874 875 0
c Var 'aux259' direct represents '1' with '876'
874 -875 876 0
-876 875 0
-876 -874 0
c Var 'aux259' direct represents '2' with '-875'
874 876 -875 0
c Encoding variable: aux260 with domain: int(0..4) (representing constraint (aux256 + aux259))
c Both direct and order encoding.
c Var 'aux260' order represents '0' with '877'
c Var 'aux260' direct represents '0' with '877'
c Var 'aux260' order represents '1' with '878'
-877 878 0
c Var 'aux260' direct represents '1' with '879'
877 -878 879 0
-879 878 0
-879 -877 0
c Var 'aux260' order represents '2' with '880'
-878 880 0
c Var 'aux260' direct represents '2' with '881'
878 -880 881 0
-881 880 0
-881 -878 0
c Var 'aux260' order represents '3' with '882'
-880 882 0
c Var 'aux260' direct represents '3' with '883'
880 -882 883 0
-883 882 0
-883 -880 0
c Var 'aux260' direct represents '4' with '-882'
877 879 881 883 -882 0
c Encoding variable: aux261 with domain: int(0..4) (representing constraint (aux255 + aux257))
c Both direct and order encoding.
c Var 'aux261' order represents '0' with '884'
c Var 'aux261' direct represents '0' with '884'
c Var 'aux261' order represents '1' with '885'
-884 885 0
c Var 'aux261' direct represents '1' with '886'
884 -885 886 0
-886 885 0
-886 -884 0
c Var 'aux261' order represents '2' with '887'
-885 887 0
c Var 'aux261' direct represents '2' with '888'
885 -887 888 0
-888 887 0
-888 -885 0
c Var 'aux261' order represents '3' with '889'
-887 889 0
c Var 'aux261' direct represents '3' with '890'
887 -889 890 0
-890 889 0
-890 -887 0
c Var 'aux261' direct represents '4' with '-889'
884 886 888 890 -889 0
c Encoding variable: aux262 with domain: int(0..2) (representing constraint ((0<grid_00002_00001) + (0<grid_00006_00001)))
c Both direct and order encoding.
c Var 'aux262' order represents '0' with '891'
c Var 'aux262' direct represents '0' with '891'
c Var 'aux262' order represents '1' with '892'
-891 892 0
c Var 'aux262' direct represents '1' with '893'
891 -892 893 0
-893 892 0
-893 -891 0
c Var 'aux262' direct represents '2' with '-892'
891 893 -892 0
c Encoding variable: aux263 with domain: int(0..2) (representing constraint ((0<grid_00001_00001) + (0<grid_00007_00001)))
c Both direct and order encoding.
c Var 'aux263' order represents '0' with '894'
c Var 'aux263' direct represents '0' with '894'
c Var 'aux263' order represents '1' with '895'
-894 895 0
c Var 'aux263' direct represents '1' with '896'
894 -895 896 0
-896 895 0
-896 -894 0
c Var 'aux263' direct represents '2' with '-895'
894 896 -895 0
c Encoding variable: aux264 with domain: int(0..2) (representing constraint ((0<grid_00008_00001) + (0<grid_00005_00001)))
c Both direct and order encoding.
c Var 'aux264' order represents '0' with '897'
c Var 'aux264' direct represents '0' with '897'
c Var 'aux264' order represents '1' with '898'
-897 898 0
c Var 'aux264' direct represents '1' with '899'
897 -898 899 0
-899 898 0
-899 -897 0
c Var 'aux264' direct represents '2' with '-898'
897 899 -898 0
c Encoding variable: aux265 with domain: int(0..2) (representing constraint ((0<grid_00000_00001) + (0<grid_00004_00001)))
c Both direct and order encoding.
c Var 'aux265' order represents '0' with '900'
c Var 'aux265' direct represents '0' with '900'
c Var 'aux265' order represents '1' with '901'
-900 901 0
c Var 'aux265' direct represents '1' with '902'
900 -901 902 0
-902 901 0
-902 -900 0
c Var 'aux265' direct represents '2' with '-901'
900 902 -901 0
c Encoding variable: aux266 with domain: int(0..2) (representing constraint ((0<grid_00009_00001) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux266' order represents '0' with '903'
c Var 'aux266' direct represents '0' with '903'
c Var 'aux266' order represents '1' with '904'
-903 904 0
c Var 'aux266' direct represents '1' with '905'
903 -904 905 0
-905 904 0
-905 -903 0
c Var 'aux266' direct represents '2' with '-904'
903 905 -904 0
c Encoding variable: aux267 with domain: int(0..4) (representing constraint (aux263 + aux266))
c Both direct and order encoding.
c Var 'aux267' order represents '0' with '906'
c Var 'aux267' direct represents '0' with '906'
c Var 'aux267' order represents '1' with '907'
-906 907 0
c Var 'aux267' direct represents '1' with '908'
906 -907 908 0
-908 907 0
-908 -906 0
c Var 'aux267' order represents '2' with '909'
-907 909 0
c Var 'aux267' direct represents '2' with '910'
907 -909 910 0
-910 909 0
-910 -907 0
c Var 'aux267' order represents '3' with '911'
-909 911 0
c Var 'aux267' direct represents '3' with '912'
909 -911 912 0
-912 911 0
-912 -909 0
c Var 'aux267' direct represents '4' with '-911'
906 908 910 912 -911 0
c Encoding variable: aux268 with domain: int(0..4) (representing constraint (aux262 + aux264))
c Both direct and order encoding.
c Var 'aux268' order represents '0' with '913'
c Var 'aux268' direct represents '0' with '913'
c Var 'aux268' order represents '1' with '914'
-913 914 0
c Var 'aux268' direct represents '1' with '915'
913 -914 915 0
-915 914 0
-915 -913 0
c Var 'aux268' order represents '2' with '916'
-914 916 0
c Var 'aux268' direct represents '2' with '917'
914 -916 917 0
-917 916 0
-917 -914 0
c Var 'aux268' order represents '3' with '918'
-916 918 0
c Var 'aux268' direct represents '3' with '919'
916 -918 919 0
-919 918 0
-919 -916 0
c Var 'aux268' direct represents '4' with '-918'
913 915 917 919 -918 0
c Encoding variable: aux269 with domain: int(0..2) (representing constraint ((0<grid_00002_00002) + (0<grid_00006_00002)))
c Both direct and order encoding.
c Var 'aux269' order represents '0' with '920'
c Var 'aux269' direct represents '0' with '920'
c Var 'aux269' order represents '1' with '921'
-920 921 0
c Var 'aux269' direct represents '1' with '922'
920 -921 922 0
-922 921 0
-922 -920 0
c Var 'aux269' direct represents '2' with '-921'
920 922 -921 0
c Encoding variable: aux270 with domain: int(0..2) (representing constraint ((0<grid_00001_00002) + (0<grid_00007_00002)))
c Both direct and order encoding.
c Var 'aux270' order represents '0' with '923'
c Var 'aux270' direct represents '0' with '923'
c Var 'aux270' order represents '1' with '924'
-923 924 0
c Var 'aux270' direct represents '1' with '925'
923 -924 925 0
-925 924 0
-925 -923 0
c Var 'aux270' direct represents '2' with '-924'
923 925 -924 0
c Encoding variable: aux271 with domain: int(0..2) (representing constraint ((0<grid_00008_00002) + (0<grid_00005_00002)))
c Both direct and order encoding.
c Var 'aux271' order represents '0' with '926'
c Var 'aux271' direct represents '0' with '926'
c Var 'aux271' order represents '1' with '927'
-926 927 0
c Var 'aux271' direct represents '1' with '928'
926 -927 928 0
-928 927 0
-928 -926 0
c Var 'aux271' direct represents '2' with '-927'
926 928 -927 0
c Encoding variable: aux272 with domain: int(0..2) (representing constraint ((0<grid_00000_00002) + (0<grid_00004_00002)))
c Both direct and order encoding.
c Var 'aux272' order represents '0' with '929'
c Var 'aux272' direct represents '0' with '929'
c Var 'aux272' order represents '1' with '930'
-929 930 0
c Var 'aux272' direct represents '1' with '931'
929 -930 931 0
-931 930 0
-931 -929 0
c Var 'aux272' direct represents '2' with '-930'
929 931 -930 0
c Encoding variable: aux273 with domain: int(0..2) (representing constraint ((0<grid_00009_00002) + (0<grid_00003_00002)))
c Both direct and order encoding.
c Var 'aux273' order represents '0' with '932'
c Var 'aux273' direct represents '0' with '932'
c Var 'aux273' order represents '1' with '933'
-932 933 0
c Var 'aux273' direct represents '1' with '934'
932 -933 934 0
-934 933 0
-934 -932 0
c Var 'aux273' direct represents '2' with '-933'
932 934 -933 0
c Encoding variable: aux274 with domain: int(0..4) (representing constraint (aux270 + aux273))
c Both direct and order encoding.
c Var 'aux274' order represents '0' with '935'
c Var 'aux274' direct represents '0' with '935'
c Var 'aux274' order represents '1' with '936'
-935 936 0
c Var 'aux274' direct represents '1' with '937'
935 -936 937 0
-937 936 0
-937 -935 0
c Var 'aux274' order represents '2' with '938'
-936 938 0
c Var 'aux274' direct represents '2' with '939'
936 -938 939 0
-939 938 0
-939 -936 0
c Var 'aux274' order represents '3' with '940'
-938 940 0
c Var 'aux274' direct represents '3' with '941'
938 -940 941 0
-941 940 0
-941 -938 0
c Var 'aux274' direct represents '4' with '-940'
935 937 939 941 -940 0
c Encoding variable: aux275 with domain: int(0..4) (representing constraint (aux269 + aux271))
c Both direct and order encoding.
c Var 'aux275' order represents '0' with '942'
c Var 'aux275' direct represents '0' with '942'
c Var 'aux275' order represents '1' with '943'
-942 943 0
c Var 'aux275' direct represents '1' with '944'
942 -943 944 0
-944 943 0
-944 -942 0
c Var 'aux275' order represents '2' with '945'
-943 945 0
c Var 'aux275' direct represents '2' with '946'
943 -945 946 0
-946 945 0
-946 -943 0
c Var 'aux275' order represents '3' with '947'
-945 947 0
c Var 'aux275' direct represents '3' with '948'
945 -947 948 0
-948 947 0
-948 -945 0
c Var 'aux275' direct represents '4' with '-947'
942 944 946 948 -947 0
c Encoding variable: aux276 with domain: int(0..2) (representing constraint ((0<grid_00002_00003) + (0<grid_00006_00003)))
c Both direct and order encoding.
c Var 'aux276' order represents '0' with '949'
c Var 'aux276' direct represents '0' with '949'
c Var 'aux276' order represents '1' with '950'
-949 950 0
c Var 'aux276' direct represents '1' with '951'
949 -950 951 0
-951 950 0
-951 -949 0
c Var 'aux276' direct represents '2' with '-950'
949 951 -950 0
c Encoding variable: aux277 with domain: int(0..2) (representing constraint ((0<grid_00001_00003) + (0<grid_00007_00003)))
c Both direct and order encoding.
c Var 'aux277' order represents '0' with '952'
c Var 'aux277' direct represents '0' with '952'
c Var 'aux277' order represents '1' with '953'
-952 953 0
c Var 'aux277' direct represents '1' with '954'
952 -953 954 0
-954 953 0
-954 -952 0
c Var 'aux277' direct represents '2' with '-953'
952 954 -953 0
c Encoding variable: aux278 with domain: int(0..2) (representing constraint ((0<grid_00008_00003) + (0<grid_00005_00003)))
c Both direct and order encoding.
c Var 'aux278' order represents '0' with '955'
c Var 'aux278' direct represents '0' with '955'
c Var 'aux278' order represents '1' with '956'
-955 956 0
c Var 'aux278' direct represents '1' with '957'
955 -956 957 0
-957 956 0
-957 -955 0
c Var 'aux278' direct represents '2' with '-956'
955 957 -956 0
c Encoding variable: aux279 with domain: int(0..2) (representing constraint ((0<grid_00000_00003) + (0<grid_00004_00003)))
c Both direct and order encoding.
c Var 'aux279' order represents '0' with '958'
c Var 'aux279' direct represents '0' with '958'
c Var 'aux279' order represents '1' with '959'
-958 959 0
c Var 'aux279' direct represents '1' with '960'
958 -959 960 0
-960 959 0
-960 -958 0
c Var 'aux279' direct represents '2' with '-959'
958 960 -959 0
c Encoding variable: aux280 with domain: int(0..2) (representing constraint ((0<grid_00009_00003) + (0<grid_00003_00003)))
c Both direct and order encoding.
c Var 'aux280' order represents '0' with '961'
c Var 'aux280' direct represents '0' with '961'
c Var 'aux280' order represents '1' with '962'
-961 962 0
c Var 'aux280' direct represents '1' with '963'
961 -962 963 0
-963 962 0
-963 -961 0
c Var 'aux280' direct represents '2' with '-962'
961 963 -962 0
c Encoding variable: aux281 with domain: int(0..4) (representing constraint (aux277 + aux280))
c Both direct and order encoding.
c Var 'aux281' order represents '0' with '964'
c Var 'aux281' direct represents '0' with '964'
c Var 'aux281' order represents '1' with '965'
-964 965 0
c Var 'aux281' direct represents '1' with '966'
964 -965 966 0
-966 965 0
-966 -964 0
c Var 'aux281' order represents '2' with '967'
-965 967 0
c Var 'aux281' direct represents '2' with '968'
965 -967 968 0
-968 967 0
-968 -965 0
c Var 'aux281' order represents '3' with '969'
-967 969 0
c Var 'aux281' direct represents '3' with '970'
967 -969 970 0
-970 969 0
-970 -967 0
c Var 'aux281' direct represents '4' with '-969'
964 966 968 970 -969 0
c Encoding variable: aux282 with domain: int(0..4) (representing constraint (aux276 + aux278))
c Both direct and order encoding.
c Var 'aux282' order represents '0' with '971'
c Var 'aux282' direct represents '0' with '971'
c Var 'aux282' order represents '1' with '972'
-971 972 0
c Var 'aux282' direct represents '1' with '973'
971 -972 973 0
-973 972 0
-973 -971 0
c Var 'aux282' order represents '2' with '974'
-972 974 0
c Var 'aux282' direct represents '2' with '975'
972 -974 975 0
-975 974 0
-975 -972 0
c Var 'aux282' order represents '3' with '976'
-974 976 0
c Var 'aux282' direct represents '3' with '977'
974 -976 977 0
-977 976 0
-977 -974 0
c Var 'aux282' direct represents '4' with '-976'
971 973 975 977 -976 0
c Encoding variable: aux283 with domain: int(0..2) (representing constraint ((0<grid_00002_00004) + (0<grid_00006_00004)))
c Both direct and order encoding.
c Var 'aux283' order represents '0' with '978'
c Var 'aux283' direct represents '0' with '978'
c Var 'aux283' order represents '1' with '979'
-978 979 0
c Var 'aux283' direct represents '1' with '980'
978 -979 980 0
-980 979 0
-980 -978 0
c Var 'aux283' direct represents '2' with '-979'
978 980 -979 0
c Encoding variable: aux284 with domain: int(0..2) (representing constraint ((0<grid_00001_00004) + (0<grid_00007_00004)))
c Both direct and order encoding.
c Var 'aux284' order represents '0' with '981'
c Var 'aux284' direct represents '0' with '981'
c Var 'aux284' order represents '1' with '982'
-981 982 0
c Var 'aux284' direct represents '1' with '983'
981 -982 983 0
-983 982 0
-983 -981 0
c Var 'aux284' direct represents '2' with '-982'
981 983 -982 0
c Encoding variable: aux285 with domain: int(0..2) (representing constraint ((0<grid_00008_00004) + (0<grid_00005_00004)))
c Both direct and order encoding.
c Var 'aux285' order represents '0' with '984'
c Var 'aux285' direct represents '0' with '984'
c Var 'aux285' order represents '1' with '985'
-984 985 0
c Var 'aux285' direct represents '1' with '986'
984 -985 986 0
-986 985 0
-986 -984 0
c Var 'aux285' direct represents '2' with '-985'
984 986 -985 0
c Encoding variable: aux286 with domain: int(0..2) (representing constraint ((0<grid_00000_00004) + (0<grid_00004_00004)))
c Both direct and order encoding.
c Var 'aux286' order represents '0' with '987'
c Var 'aux286' direct represents '0' with '987'
c Var 'aux286' order represents '1' with '988'
-987 988 0
c Var 'aux286' direct represents '1' with '989'
987 -988 989 0
-989 988 0
-989 -987 0
c Var 'aux286' direct represents '2' with '-988'
987 989 -988 0
c Encoding variable: aux287 with domain: int(0..2) (representing constraint ((0<grid_00009_00004) + (0<grid_00003_00004)))
c Both direct and order encoding.
c Var 'aux287' order represents '0' with '990'
c Var 'aux287' direct represents '0' with '990'
c Var 'aux287' order represents '1' with '991'
-990 991 0
c Var 'aux287' direct represents '1' with '992'
990 -991 992 0
-992 991 0
-992 -990 0
c Var 'aux287' direct represents '2' with '-991'
990 992 -991 0
c Encoding variable: aux288 with domain: int(0..4) (representing constraint (aux284 + aux287))
c Both direct and order encoding.
c Var 'aux288' order represents '0' with '993'
c Var 'aux288' direct represents '0' with '993'
c Var 'aux288' order represents '1' with '994'
-993 994 0
c Var 'aux288' direct represents '1' with '995'
993 -994 995 0
-995 994 0
-995 -993 0
c Var 'aux288' order represents '2' with '996'
-994 996 0
c Var 'aux288' direct represents '2' with '997'
994 -996 997 0
-997 996 0
-997 -994 0
c Var 'aux288' order represents '3' with '998'
-996 998 0
c Var 'aux288' direct represents '3' with '999'
996 -998 999 0
-999 998 0
-999 -996 0
c Var 'aux288' direct represents '4' with '-998'
993 995 997 999 -998 0
c Encoding variable: aux289 with domain: int(0..4) (representing constraint (aux283 + aux285))
c Both direct and order encoding.
c Var 'aux289' order represents '0' with '1000'
c Var 'aux289' direct represents '0' with '1000'
c Var 'aux289' order represents '1' with '1001'
-1000 1001 0
c Var 'aux289' direct represents '1' with '1002'
1000 -1001 1002 0
-1002 1001 0
-1002 -1000 0
c Var 'aux289' order represents '2' with '1003'
-1001 1003 0
c Var 'aux289' direct represents '2' with '1004'
1001 -1003 1004 0
-1004 1003 0
-1004 -1001 0
c Var 'aux289' order represents '3' with '1005'
-1003 1005 0
c Var 'aux289' direct represents '3' with '1006'
1003 -1005 1006 0
-1006 1005 0
-1006 -1003 0
c Var 'aux289' direct represents '4' with '-1005'
1000 1002 1004 1006 -1005 0
c Encoding variable: aux290 with domain: int(0..2) (representing constraint ((0<grid_00002_00005) + (0<grid_00006_00005)))
c Both direct and order encoding.
c Var 'aux290' order represents '0' with '1007'
c Var 'aux290' direct represents '0' with '1007'
c Var 'aux290' order represents '1' with '1008'
-1007 1008 0
c Var 'aux290' direct represents '1' with '1009'
1007 -1008 1009 0
-1009 1008 0
-1009 -1007 0
c Var 'aux290' direct represents '2' with '-1008'
1007 1009 -1008 0
c Encoding variable: aux291 with domain: int(0..2) (representing constraint ((0<grid_00001_00005) + (0<grid_00007_00005)))
c Both direct and order encoding.
c Var 'aux291' order represents '0' with '1010'
c Var 'aux291' direct represents '0' with '1010'
c Var 'aux291' order represents '1' with '1011'
-1010 1011 0
c Var 'aux291' direct represents '1' with '1012'
1010 -1011 1012 0
-1012 1011 0
-1012 -1010 0
c Var 'aux291' direct represents '2' with '-1011'
1010 1012 -1011 0
c Encoding variable: aux292 with domain: int(0..2) (representing constraint ((0<grid_00008_00005) + (0<grid_00005_00005)))
c Both direct and order encoding.
c Var 'aux292' order represents '0' with '1013'
c Var 'aux292' direct represents '0' with '1013'
c Var 'aux292' order represents '1' with '1014'
-1013 1014 0
c Var 'aux292' direct represents '1' with '1015'
1013 -1014 1015 0
-1015 1014 0
-1015 -1013 0
c Var 'aux292' direct represents '2' with '-1014'
1013 1015 -1014 0
c Encoding variable: aux293 with domain: int(0..2) (representing constraint ((0<grid_00000_00005) + (0<grid_00004_00005)))
c Both direct and order encoding.
c Var 'aux293' order represents '0' with '1016'
c Var 'aux293' direct represents '0' with '1016'
c Var 'aux293' order represents '1' with '1017'
-1016 1017 0
c Var 'aux293' direct represents '1' with '1018'
1016 -1017 1018 0
-1018 1017 0
-1018 -1016 0
c Var 'aux293' direct represents '2' with '-1017'
1016 1018 -1017 0
c Encoding variable: aux294 with domain: int(0..2) (representing constraint ((0<grid_00009_00005) + (0<grid_00003_00005)))
c Both direct and order encoding.
c Var 'aux294' order represents '0' with '1019'
c Var 'aux294' direct represents '0' with '1019'
c Var 'aux294' order represents '1' with '1020'
-1019 1020 0
c Var 'aux294' direct represents '1' with '1021'
1019 -1020 1021 0
-1021 1020 0
-1021 -1019 0
c Var 'aux294' direct represents '2' with '-1020'
1019 1021 -1020 0
c Encoding variable: aux295 with domain: int(0..4) (representing constraint (aux291 + aux294))
c Both direct and order encoding.
c Var 'aux295' order represents '0' with '1022'
c Var 'aux295' direct represents '0' with '1022'
c Var 'aux295' order represents '1' with '1023'
-1022 1023 0
c Var 'aux295' direct represents '1' with '1024'
1022 -1023 1024 0
-1024 1023 0
-1024 -1022 0
c Var 'aux295' order represents '2' with '1025'
-1023 1025 0
c Var 'aux295' direct represents '2' with '1026'
1023 -1025 1026 0
-1026 1025 0
-1026 -1023 0
c Var 'aux295' order represents '3' with '1027'
-1025 1027 0
c Var 'aux295' direct represents '3' with '1028'
1025 -1027 1028 0
-1028 1027 0
-1028 -1025 0
c Var 'aux295' direct represents '4' with '-1027'
1022 1024 1026 1028 -1027 0
c Encoding variable: aux296 with domain: int(0..4) (representing constraint (aux290 + aux292))
c Both direct and order encoding.
c Var 'aux296' order represents '0' with '1029'
c Var 'aux296' direct represents '0' with '1029'
c Var 'aux296' order represents '1' with '1030'
-1029 1030 0
c Var 'aux296' direct represents '1' with '1031'
1029 -1030 1031 0
-1031 1030 0
-1031 -1029 0
c Var 'aux296' order represents '2' with '1032'
-1030 1032 0
c Var 'aux296' direct represents '2' with '1033'
1030 -1032 1033 0
-1033 1032 0
-1033 -1030 0
c Var 'aux296' order represents '3' with '1034'
-1032 1034 0
c Var 'aux296' direct represents '3' with '1035'
1032 -1034 1035 0
-1035 1034 0
-1035 -1032 0
c Var 'aux296' direct represents '4' with '-1034'
1029 1031 1033 1035 -1034 0
c Encoding variable: aux297 with domain: int(0..2) (representing constraint ((0<grid_00002_00006) + (0<grid_00006_00006)))
c Both direct and order encoding.
c Var 'aux297' order represents '0' with '1036'
c Var 'aux297' direct represents '0' with '1036'
c Var 'aux297' order represents '1' with '1037'
-1036 1037 0
c Var 'aux297' direct represents '1' with '1038'
1036 -1037 1038 0
-1038 1037 0
-1038 -1036 0
c Var 'aux297' direct represents '2' with '-1037'
1036 1038 -1037 0
c Encoding variable: aux298 with domain: int(0..2) (representing constraint ((0<grid_00001_00006) + (0<grid_00007_00006)))
c Both direct and order encoding.
c Var 'aux298' order represents '0' with '1039'
c Var 'aux298' direct represents '0' with '1039'
c Var 'aux298' order represents '1' with '1040'
-1039 1040 0
c Var 'aux298' direct represents '1' with '1041'
1039 -1040 1041 0
-1041 1040 0
-1041 -1039 0
c Var 'aux298' direct represents '2' with '-1040'
1039 1041 -1040 0
c Encoding variable: aux299 with domain: int(0..2) (representing constraint ((0<grid_00008_00006) + (0<grid_00005_00006)))
c Both direct and order encoding.
c Var 'aux299' order represents '0' with '1042'
c Var 'aux299' direct represents '0' with '1042'
c Var 'aux299' order represents '1' with '1043'
-1042 1043 0
c Var 'aux299' direct represents '1' with '1044'
1042 -1043 1044 0
-1044 1043 0
-1044 -1042 0
c Var 'aux299' direct represents '2' with '-1043'
1042 1044 -1043 0
c Encoding variable: aux300 with domain: int(0..2) (representing constraint ((0<grid_00000_00006) + (0<grid_00004_00006)))
c Both direct and order encoding.
c Var 'aux300' order represents '0' with '1045'
c Var 'aux300' direct represents '0' with '1045'
c Var 'aux300' order represents '1' with '1046'
-1045 1046 0
c Var 'aux300' direct represents '1' with '1047'
1045 -1046 1047 0
-1047 1046 0
-1047 -1045 0
c Var 'aux300' direct represents '2' with '-1046'
1045 1047 -1046 0
c Encoding variable: aux301 with domain: int(0..2) (representing constraint ((0<grid_00009_00006) + (0<grid_00003_00006)))
c Both direct and order encoding.
c Var 'aux301' order represents '0' with '1048'
c Var 'aux301' direct represents '0' with '1048'
c Var 'aux301' order represents '1' with '1049'
-1048 1049 0
c Var 'aux301' direct represents '1' with '1050'
1048 -1049 1050 0
-1050 1049 0
-1050 -1048 0
c Var 'aux301' direct represents '2' with '-1049'
1048 1050 -1049 0
c Encoding variable: aux302 with domain: int(0..4) (representing constraint (aux298 + aux301))
c Both direct and order encoding.
c Var 'aux302' order represents '0' with '1051'
c Var 'aux302' direct represents '0' with '1051'
c Var 'aux302' order represents '1' with '1052'
-1051 1052 0
c Var 'aux302' direct represents '1' with '1053'
1051 -1052 1053 0
-1053 1052 0
-1053 -1051 0
c Var 'aux302' order represents '2' with '1054'
-1052 1054 0
c Var 'aux302' direct represents '2' with '1055'
1052 -1054 1055 0
-1055 1054 0
-1055 -1052 0
c Var 'aux302' order represents '3' with '1056'
-1054 1056 0
c Var 'aux302' direct represents '3' with '1057'
1054 -1056 1057 0
-1057 1056 0
-1057 -1054 0
c Var 'aux302' direct represents '4' with '-1056'
1051 1053 1055 1057 -1056 0
c Encoding variable: aux303 with domain: int(0..4) (representing constraint (aux297 + aux299))
c Both direct and order encoding.
c Var 'aux303' order represents '0' with '1058'
c Var 'aux303' direct represents '0' with '1058'
c Var 'aux303' order represents '1' with '1059'
-1058 1059 0
c Var 'aux303' direct represents '1' with '1060'
1058 -1059 1060 0
-1060 1059 0
-1060 -1058 0
c Var 'aux303' order represents '2' with '1061'
-1059 1061 0
c Var 'aux303' direct represents '2' with '1062'
1059 -1061 1062 0
-1062 1061 0
-1062 -1059 0
c Var 'aux303' order represents '3' with '1063'
-1061 1063 0
c Var 'aux303' direct represents '3' with '1064'
1061 -1063 1064 0
-1064 1063 0
-1064 -1061 0
c Var 'aux303' direct represents '4' with '-1063'
1058 1060 1062 1064 -1063 0
c Encoding variable: aux304 with domain: int(0..2) (representing constraint ((0<grid_00002_00007) + (0<grid_00006_00007)))
c Both direct and order encoding.
c Var 'aux304' order represents '0' with '1065'
c Var 'aux304' direct represents '0' with '1065'
c Var 'aux304' order represents '1' with '1066'
-1065 1066 0
c Var 'aux304' direct represents '1' with '1067'
1065 -1066 1067 0
-1067 1066 0
-1067 -1065 0
c Var 'aux304' direct represents '2' with '-1066'
1065 1067 -1066 0
c Encoding variable: aux305 with domain: int(0..2) (representing constraint ((0<grid_00001_00007) + (0<grid_00007_00007)))
c Both direct and order encoding.
c Var 'aux305' order represents '0' with '1068'
c Var 'aux305' direct represents '0' with '1068'
c Var 'aux305' order represents '1' with '1069'
-1068 1069 0
c Var 'aux305' direct represents '1' with '1070'
1068 -1069 1070 0
-1070 1069 0
-1070 -1068 0
c Var 'aux305' direct represents '2' with '-1069'
1068 1070 -1069 0
c Encoding variable: aux306 with domain: int(0..2) (representing constraint ((0<grid_00008_00007) + (0<grid_00005_00007)))
c Both direct and order encoding.
c Var 'aux306' order represents '0' with '1071'
c Var 'aux306' direct represents '0' with '1071'
c Var 'aux306' order represents '1' with '1072'
-1071 1072 0
c Var 'aux306' direct represents '1' with '1073'
1071 -1072 1073 0
-1073 1072 0
-1073 -1071 0
c Var 'aux306' direct represents '2' with '-1072'
1071 1073 -1072 0
c Encoding variable: aux307 with domain: int(0..2) (representing constraint ((0<grid_00000_00007) + (0<grid_00004_00007)))
c Both direct and order encoding.
c Var 'aux307' order represents '0' with '1074'
c Var 'aux307' direct represents '0' with '1074'
c Var 'aux307' order represents '1' with '1075'
-1074 1075 0
c Var 'aux307' direct represents '1' with '1076'
1074 -1075 1076 0
-1076 1075 0
-1076 -1074 0
c Var 'aux307' direct represents '2' with '-1075'
1074 1076 -1075 0
c Encoding variable: aux308 with domain: int(0..2) (representing constraint ((0<grid_00009_00007) + (0<grid_00003_00007)))
c Both direct and order encoding.
c Var 'aux308' order represents '0' with '1077'
c Var 'aux308' direct represents '0' with '1077'
c Var 'aux308' order represents '1' with '1078'
-1077 1078 0
c Var 'aux308' direct represents '1' with '1079'
1077 -1078 1079 0
-1079 1078 0
-1079 -1077 0
c Var 'aux308' direct represents '2' with '-1078'
1077 1079 -1078 0
c Encoding variable: aux309 with domain: int(0..4) (representing constraint (aux305 + aux308))
c Both direct and order encoding.
c Var 'aux309' order represents '0' with '1080'
c Var 'aux309' direct represents '0' with '1080'
c Var 'aux309' order represents '1' with '1081'
-1080 1081 0
c Var 'aux309' direct represents '1' with '1082'
1080 -1081 1082 0
-1082 1081 0
-1082 -1080 0
c Var 'aux309' order represents '2' with '1083'
-1081 1083 0
c Var 'aux309' direct represents '2' with '1084'
1081 -1083 1084 0
-1084 1083 0
-1084 -1081 0
c Var 'aux309' order represents '3' with '1085'
-1083 1085 0
c Var 'aux309' direct represents '3' with '1086'
1083 -1085 1086 0
-1086 1085 0
-1086 -1083 0
c Var 'aux309' direct represents '4' with '-1085'
1080 1082 1084 1086 -1085 0
c Encoding variable: aux310 with domain: int(0..4) (representing constraint (aux304 + aux306))
c Both direct and order encoding.
c Var 'aux310' order represents '0' with '1087'
c Var 'aux310' direct represents '0' with '1087'
c Var 'aux310' order represents '1' with '1088'
-1087 1088 0
c Var 'aux310' direct represents '1' with '1089'
1087 -1088 1089 0
-1089 1088 0
-1089 -1087 0
c Var 'aux310' order represents '2' with '1090'
-1088 1090 0
c Var 'aux310' direct represents '2' with '1091'
1088 -1090 1091 0
-1091 1090 0
-1091 -1088 0
c Var 'aux310' order represents '3' with '1092'
-1090 1092 0
c Var 'aux310' direct represents '3' with '1093'
1090 -1092 1093 0
-1093 1092 0
-1093 -1090 0
c Var 'aux310' direct represents '4' with '-1092'
1087 1089 1091 1093 -1092 0
c Encoding variable: aux311 with domain: int(0..2) (representing constraint ((0<grid_00002_00008) + (0<grid_00006_00008)))
c Both direct and order encoding.
c Var 'aux311' order represents '0' with '1094'
c Var 'aux311' direct represents '0' with '1094'
c Var 'aux311' order represents '1' with '1095'
-1094 1095 0
c Var 'aux311' direct represents '1' with '1096'
1094 -1095 1096 0
-1096 1095 0
-1096 -1094 0
c Var 'aux311' direct represents '2' with '-1095'
1094 1096 -1095 0
c Encoding variable: aux312 with domain: int(0..2) (representing constraint ((0<grid_00001_00008) + (0<grid_00007_00008)))
c Both direct and order encoding.
c Var 'aux312' order represents '0' with '1097'
c Var 'aux312' direct represents '0' with '1097'
c Var 'aux312' order represents '1' with '1098'
-1097 1098 0
c Var 'aux312' direct represents '1' with '1099'
1097 -1098 1099 0
-1099 1098 0
-1099 -1097 0
c Var 'aux312' direct represents '2' with '-1098'
1097 1099 -1098 0
c Encoding variable: aux313 with domain: int(0..2) (representing constraint ((0<grid_00008_00008) + (0<grid_00005_00008)))
c Both direct and order encoding.
c Var 'aux313' order represents '0' with '1100'
c Var 'aux313' direct represents '0' with '1100'
c Var 'aux313' order represents '1' with '1101'
-1100 1101 0
c Var 'aux313' direct represents '1' with '1102'
1100 -1101 1102 0
-1102 1101 0
-1102 -1100 0
c Var 'aux313' direct represents '2' with '-1101'
1100 1102 -1101 0
c Encoding variable: aux314 with domain: int(0..2) (representing constraint ((0<grid_00000_00008) + (0<grid_00004_00008)))
c Both direct and order encoding.
c Var 'aux314' order represents '0' with '1103'
c Var 'aux314' direct represents '0' with '1103'
c Var 'aux314' order represents '1' with '1104'
-1103 1104 0
c Var 'aux314' direct represents '1' with '1105'
1103 -1104 1105 0
-1105 1104 0
-1105 -1103 0
c Var 'aux314' direct represents '2' with '-1104'
1103 1105 -1104 0
c Encoding variable: aux315 with domain: int(0..2) (representing constraint ((0<grid_00009_00008) + (0<grid_00003_00008)))
c Both direct and order encoding.
c Var 'aux315' order represents '0' with '1106'
c Var 'aux315' direct represents '0' with '1106'
c Var 'aux315' order represents '1' with '1107'
-1106 1107 0
c Var 'aux315' direct represents '1' with '1108'
1106 -1107 1108 0
-1108 1107 0
-1108 -1106 0
c Var 'aux315' direct represents '2' with '-1107'
1106 1108 -1107 0
c Encoding variable: aux316 with domain: int(0..4) (representing constraint (aux312 + aux315))
c Both direct and order encoding.
c Var 'aux316' order represents '0' with '1109'
c Var 'aux316' direct represents '0' with '1109'
c Var 'aux316' order represents '1' with '1110'
-1109 1110 0
c Var 'aux316' direct represents '1' with '1111'
1109 -1110 1111 0
-1111 1110 0
-1111 -1109 0
c Var 'aux316' order represents '2' with '1112'
-1110 1112 0
c Var 'aux316' direct represents '2' with '1113'
1110 -1112 1113 0
-1113 1112 0
-1113 -1110 0
c Var 'aux316' order represents '3' with '1114'
-1112 1114 0
c Var 'aux316' direct represents '3' with '1115'
1112 -1114 1115 0
-1115 1114 0
-1115 -1112 0
c Var 'aux316' direct represents '4' with '-1114'
1109 1111 1113 1115 -1114 0
c Encoding variable: aux317 with domain: int(0..4) (representing constraint (aux311 + aux313))
c Both direct and order encoding.
c Var 'aux317' order represents '0' with '1116'
c Var 'aux317' direct represents '0' with '1116'
c Var 'aux317' order represents '1' with '1117'
-1116 1117 0
c Var 'aux317' direct represents '1' with '1118'
1116 -1117 1118 0
-1118 1117 0
-1118 -1116 0
c Var 'aux317' order represents '2' with '1119'
-1117 1119 0
c Var 'aux317' direct represents '2' with '1120'
1117 -1119 1120 0
-1120 1119 0
-1120 -1117 0
c Var 'aux317' order represents '3' with '1121'
-1119 1121 0
c Var 'aux317' direct represents '3' with '1122'
1119 -1121 1122 0
-1122 1121 0
-1122 -1119 0
c Var 'aux317' direct represents '4' with '-1121'
1116 1118 1120 1122 -1121 0
c Encoding variable: aux318 with domain: int(0..2) (representing constraint ((0<grid_00002_00009) + (0<grid_00006_00009)))
c Both direct and order encoding.
c Var 'aux318' order represents '0' with '1123'
c Var 'aux318' direct represents '0' with '1123'
c Var 'aux318' order represents '1' with '1124'
-1123 1124 0
c Var 'aux318' direct represents '1' with '1125'
1123 -1124 1125 0
-1125 1124 0
-1125 -1123 0
c Var 'aux318' direct represents '2' with '-1124'
1123 1125 -1124 0
c Encoding variable: aux319 with domain: int(0..2) (representing constraint ((0<grid_00001_00009) + (0<grid_00007_00009)))
c Both direct and order encoding.
c Var 'aux319' order represents '0' with '1126'
c Var 'aux319' direct represents '0' with '1126'
c Var 'aux319' order represents '1' with '1127'
-1126 1127 0
c Var 'aux319' direct represents '1' with '1128'
1126 -1127 1128 0
-1128 1127 0
-1128 -1126 0
c Var 'aux319' direct represents '2' with '-1127'
1126 1128 -1127 0
c Encoding variable: aux320 with domain: int(0..2) (representing constraint ((0<grid_00008_00009) + (0<grid_00005_00009)))
c Both direct and order encoding.
c Var 'aux320' order represents '0' with '1129'
c Var 'aux320' direct represents '0' with '1129'
c Var 'aux320' order represents '1' with '1130'
-1129 1130 0
c Var 'aux320' direct represents '1' with '1131'
1129 -1130 1131 0
-1131 1130 0
-1131 -1129 0
c Var 'aux320' direct represents '2' with '-1130'
1129 1131 -1130 0
c Encoding variable: aux321 with domain: int(0..2) (representing constraint ((0<grid_00000_00009) + (0<grid_00004_00009)))
c Both direct and order encoding.
c Var 'aux321' order represents '0' with '1132'
c Var 'aux321' direct represents '0' with '1132'
c Var 'aux321' order represents '1' with '1133'
-1132 1133 0
c Var 'aux321' direct represents '1' with '1134'
1132 -1133 1134 0
-1134 1133 0
-1134 -1132 0
c Var 'aux321' direct represents '2' with '-1133'
1132 1134 -1133 0
c Encoding variable: aux322 with domain: int(0..2) (representing constraint ((0<grid_00009_00009) + (0<grid_00003_00009)))
c Both direct and order encoding.
c Var 'aux322' order represents '0' with '1135'
c Var 'aux322' direct represents '0' with '1135'
c Var 'aux322' order represents '1' with '1136'
-1135 1136 0
c Var 'aux322' direct represents '1' with '1137'
1135 -1136 1137 0
-1137 1136 0
-1137 -1135 0
c Var 'aux322' direct represents '2' with '-1136'
1135 1137 -1136 0
c Encoding variable: aux323 with domain: int(0..4) (representing constraint (aux319 + aux322))
c Both direct and order encoding.
c Var 'aux323' order represents '0' with '1138'
c Var 'aux323' direct represents '0' with '1138'
c Var 'aux323' order represents '1' with '1139'
-1138 1139 0
c Var 'aux323' direct represents '1' with '1140'
1138 -1139 1140 0
-1140 1139 0
-1140 -1138 0
c Var 'aux323' order represents '2' with '1141'
-1139 1141 0
c Var 'aux323' direct represents '2' with '1142'
1139 -1141 1142 0
-1142 1141 0
-1142 -1139 0
c Var 'aux323' order represents '3' with '1143'
-1141 1143 0
c Var 'aux323' direct represents '3' with '1144'
1141 -1143 1144 0
-1144 1143 0
-1144 -1141 0
c Var 'aux323' direct represents '4' with '-1143'
1138 1140 1142 1144 -1143 0
c Encoding variable: aux324 with domain: int(0..4) (representing constraint (aux318 + aux320))
c Both direct and order encoding.
c Var 'aux324' order represents '0' with '1145'
c Var 'aux324' direct represents '0' with '1145'
c Var 'aux324' order represents '1' with '1146'
-1145 1146 0
c Var 'aux324' direct represents '1' with '1147'
1145 -1146 1147 0
-1147 1146 0
-1147 -1145 0
c Var 'aux324' order represents '2' with '1148'
-1146 1148 0
c Var 'aux324' direct represents '2' with '1149'
1146 -1148 1149 0
-1149 1148 0
-1149 -1146 0
c Var 'aux324' order represents '3' with '1150'
-1148 1150 0
c Var 'aux324' direct represents '3' with '1151'
1148 -1150 1151 0
-1151 1150 0
-1151 -1148 0
c Var 'aux324' direct represents '4' with '-1150'
1145 1147 1149 1151 -1150 0
c Encoding variable: aux325 with domain: int(0..2) (representing constraint ((0<grid_00002_00000) + (0<grid_00006_00000)))
c Both direct and order encoding.
c Var 'aux325' order represents '0' with '1152'
c Var 'aux325' direct represents '0' with '1152'
c Var 'aux325' order represents '1' with '1153'
-1152 1153 0
c Var 'aux325' direct represents '1' with '1154'
1152 -1153 1154 0
-1154 1153 0
-1154 -1152 0
c Var 'aux325' direct represents '2' with '-1153'
1152 1154 -1153 0
c Encoding variable: aux326 with domain: int(0..2) (representing constraint ((0<grid_00001_00000) + (0<grid_00007_00000)))
c Both direct and order encoding.
c Var 'aux326' order represents '0' with '1155'
c Var 'aux326' direct represents '0' with '1155'
c Var 'aux326' order represents '1' with '1156'
-1155 1156 0
c Var 'aux326' direct represents '1' with '1157'
1155 -1156 1157 0
-1157 1156 0
-1157 -1155 0
c Var 'aux326' direct represents '2' with '-1156'
1155 1157 -1156 0
c Encoding variable: aux327 with domain: int(0..2) (representing constraint ((0<grid_00008_00000) + (0<grid_00005_00000)))
c Both direct and order encoding.
c Var 'aux327' order represents '0' with '1158'
c Var 'aux327' direct represents '0' with '1158'
c Var 'aux327' order represents '1' with '1159'
-1158 1159 0
c Var 'aux327' direct represents '1' with '1160'
1158 -1159 1160 0
-1160 1159 0
-1160 -1158 0
c Var 'aux327' direct represents '2' with '-1159'
1158 1160 -1159 0
c Encoding variable: aux328 with domain: int(0..2) (representing constraint ((0<grid_00000_00000) + (0<grid_00004_00000)))
c Both direct and order encoding.
c Var 'aux328' order represents '0' with '1161'
c Var 'aux328' direct represents '0' with '1161'
c Var 'aux328' order represents '1' with '1162'
-1161 1162 0
c Var 'aux328' direct represents '1' with '1163'
1161 -1162 1163 0
-1163 1162 0
-1163 -1161 0
c Var 'aux328' direct represents '2' with '-1162'
1161 1163 -1162 0
c Encoding variable: aux329 with domain: int(0..2) (representing constraint ((0<grid_00009_00000) + (0<grid_00003_00000)))
c Both direct and order encoding.
c Var 'aux329' order represents '0' with '1164'
c Var 'aux329' direct represents '0' with '1164'
c Var 'aux329' order represents '1' with '1165'
-1164 1165 0
c Var 'aux329' direct represents '1' with '1166'
1164 -1165 1166 0
-1166 1165 0
-1166 -1164 0
c Var 'aux329' direct represents '2' with '-1165'
1164 1166 -1165 0
c Encoding variable: aux330 with domain: int(0..4) (representing constraint (aux326 + aux329))
c Both direct and order encoding.
c Var 'aux330' order represents '0' with '1167'
c Var 'aux330' direct represents '0' with '1167'
c Var 'aux330' order represents '1' with '1168'
-1167 1168 0
c Var 'aux330' direct represents '1' with '1169'
1167 -1168 1169 0
-1169 1168 0
-1169 -1167 0
c Var 'aux330' order represents '2' with '1170'
-1168 1170 0
c Var 'aux330' direct represents '2' with '1171'
1168 -1170 1171 0
-1171 1170 0
-1171 -1168 0
c Var 'aux330' order represents '3' with '1172'
-1170 1172 0
c Var 'aux330' direct represents '3' with '1173'
1170 -1172 1173 0
-1173 1172 0
-1173 -1170 0
c Var 'aux330' direct represents '4' with '-1172'
1167 1169 1171 1173 -1172 0
c Encoding variable: aux331 with domain: int(0..4) (representing constraint (aux325 + aux327))
c Both direct and order encoding.
c Var 'aux331' order represents '0' with '1174'
c Var 'aux331' direct represents '0' with '1174'
c Var 'aux331' order represents '1' with '1175'
-1174 1175 0
c Var 'aux331' direct represents '1' with '1176'
1174 -1175 1176 0
-1176 1175 0
-1176 -1174 0
c Var 'aux331' order represents '2' with '1177'
-1175 1177 0
c Var 'aux331' direct represents '2' with '1178'
1175 -1177 1178 0
-1178 1177 0
-1178 -1175 0
c Var 'aux331' order represents '3' with '1179'
-1177 1179 0
c Var 'aux331' direct represents '3' with '1180'
1177 -1179 1180 0
-1180 1179 0
-1180 -1177 0
c Var 'aux331' direct represents '4' with '-1179'
1174 1176 1178 1180 -1179 0
c Encoding variable: aux332 with domain: int(0..2) (representing constraint ((0<grid_00002_00001) + (0<grid_00006_00001)))
c Both direct and order encoding.
c Var 'aux332' order represents '0' with '1181'
c Var 'aux332' direct represents '0' with '1181'
c Var 'aux332' order represents '1' with '1182'
-1181 1182 0
c Var 'aux332' direct represents '1' with '1183'
1181 -1182 1183 0
-1183 1182 0
-1183 -1181 0
c Var 'aux332' direct represents '2' with '-1182'
1181 1183 -1182 0
c Encoding variable: aux333 with domain: int(0..2) (representing constraint ((0<grid_00001_00001) + (0<grid_00007_00001)))
c Both direct and order encoding.
c Var 'aux333' order represents '0' with '1184'
c Var 'aux333' direct represents '0' with '1184'
c Var 'aux333' order represents '1' with '1185'
-1184 1185 0
c Var 'aux333' direct represents '1' with '1186'
1184 -1185 1186 0
-1186 1185 0
-1186 -1184 0
c Var 'aux333' direct represents '2' with '-1185'
1184 1186 -1185 0
c Encoding variable: aux334 with domain: int(0..2) (representing constraint ((0<grid_00008_00001) + (0<grid_00005_00001)))
c Both direct and order encoding.
c Var 'aux334' order represents '0' with '1187'
c Var 'aux334' direct represents '0' with '1187'
c Var 'aux334' order represents '1' with '1188'
-1187 1188 0
c Var 'aux334' direct represents '1' with '1189'
1187 -1188 1189 0
-1189 1188 0
-1189 -1187 0
c Var 'aux334' direct represents '2' with '-1188'
1187 1189 -1188 0
c Encoding variable: aux335 with domain: int(0..2) (representing constraint ((0<grid_00000_00001) + (0<grid_00004_00001)))
c Both direct and order encoding.
c Var 'aux335' order represents '0' with '1190'
c Var 'aux335' direct represents '0' with '1190'
c Var 'aux335' order represents '1' with '1191'
-1190 1191 0
c Var 'aux335' direct represents '1' with '1192'
1190 -1191 1192 0
-1192 1191 0
-1192 -1190 0
c Var 'aux335' direct represents '2' with '-1191'
1190 1192 -1191 0
c Encoding variable: aux336 with domain: int(0..2) (representing constraint ((0<grid_00009_00001) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux336' order represents '0' with '1193'
c Var 'aux336' direct represents '0' with '1193'
c Var 'aux336' order represents '1' with '1194'
-1193 1194 0
c Var 'aux336' direct represents '1' with '1195'
1193 -1194 1195 0
-1195 1194 0
-1195 -1193 0
c Var 'aux336' direct represents '2' with '-1194'
1193 1195 -1194 0
c Encoding variable: aux337 with domain: int(0..4) (representing constraint (aux333 + aux336))
c Both direct and order encoding.
c Var 'aux337' order represents '0' with '1196'
c Var 'aux337' direct represents '0' with '1196'
c Var 'aux337' order represents '1' with '1197'
-1196 1197 0
c Var 'aux337' direct represents '1' with '1198'
1196 -1197 1198 0
-1198 1197 0
-1198 -1196 0
c Var 'aux337' order represents '2' with '1199'
-1197 1199 0
c Var 'aux337' direct represents '2' with '1200'
1197 -1199 1200 0
-1200 1199 0
-1200 -1197 0
c Var 'aux337' order represents '3' with '1201'
-1199 1201 0
c Var 'aux337' direct represents '3' with '1202'
1199 -1201 1202 0
-1202 1201 0
-1202 -1199 0
c Var 'aux337' direct represents '4' with '-1201'
1196 1198 1200 1202 -1201 0
c Encoding variable: aux338 with domain: int(0..4) (representing constraint (aux332 + aux334))
c Both direct and order encoding.
c Var 'aux338' order represents '0' with '1203'
c Var 'aux338' direct represents '0' with '1203'
c Var 'aux338' order represents '1' with '1204'
-1203 1204 0
c Var 'aux338' direct represents '1' with '1205'
1203 -1204 1205 0
-1205 1204 0
-1205 -1203 0
c Var 'aux338' order represents '2' with '1206'
-1204 1206 0
c Var 'aux338' direct represents '2' with '1207'
1204 -1206 1207 0
-1207 1206 0
-1207 -1204 0
c Var 'aux338' order represents '3' with '1208'
-1206 1208 0
c Var 'aux338' direct represents '3' with '1209'
1206 -1208 1209 0
-1209 1208 0
-1209 -1206 0
c Var 'aux338' direct represents '4' with '-1208'
1203 1205 1207 1209 -1208 0
c Encoding variable: aux339 with domain: int(0..2) (representing constraint ((0<grid_00002_00002) + (0<grid_00006_00002)))
c Both direct and order encoding.
c Var 'aux339' order represents '0' with '1210'
c Var 'aux339' direct represents '0' with '1210'
c Var 'aux339' order represents '1' with '1211'
-1210 1211 0
c Var 'aux339' direct represents '1' with '1212'
1210 -1211 1212 0
-1212 1211 0
-1212 -1210 0
c Var 'aux339' direct represents '2' with '-1211'
1210 1212 -1211 0
c Encoding variable: aux340 with domain: int(0..2) (representing constraint ((0<grid_00001_00002) + (0<grid_00007_00002)))
c Both direct and order encoding.
c Var 'aux340' order represents '0' with '1213'
c Var 'aux340' direct represents '0' with '1213'
c Var 'aux340' order represents '1' with '1214'
-1213 1214 0
c Var 'aux340' direct represents '1' with '1215'
1213 -1214 1215 0
-1215 1214 0
-1215 -1213 0
c Var 'aux340' direct represents '2' with '-1214'
1213 1215 -1214 0
c Encoding variable: aux341 with domain: int(0..2) (representing constraint ((0<grid_00008_00002) + (0<grid_00005_00002)))
c Both direct and order encoding.
c Var 'aux341' order represents '0' with '1216'
c Var 'aux341' direct represents '0' with '1216'
c Var 'aux341' order represents '1' with '1217'
-1216 1217 0
c Var 'aux341' direct represents '1' with '1218'
1216 -1217 1218 0
-1218 1217 0
-1218 -1216 0
c Var 'aux341' direct represents '2' with '-1217'
1216 1218 -1217 0
c Encoding variable: aux342 with domain: int(0..2) (representing constraint ((0<grid_00000_00002) + (0<grid_00004_00002)))
c Both direct and order encoding.
c Var 'aux342' order represents '0' with '1219'
c Var 'aux342' direct represents '0' with '1219'
c Var 'aux342' order represents '1' with '1220'
-1219 1220 0
c Var 'aux342' direct represents '1' with '1221'
1219 -1220 1221 0
-1221 1220 0
-1221 -1219 0
c Var 'aux342' direct represents '2' with '-1220'
1219 1221 -1220 0
c Encoding variable: aux343 with domain: int(0..2) (representing constraint ((0<grid_00009_00002) + (0<grid_00003_00002)))
c Both direct and order encoding.
c Var 'aux343' order represents '0' with '1222'
c Var 'aux343' direct represents '0' with '1222'
c Var 'aux343' order represents '1' with '1223'
-1222 1223 0
c Var 'aux343' direct represents '1' with '1224'
1222 -1223 1224 0
-1224 1223 0
-1224 -1222 0
c Var 'aux343' direct represents '2' with '-1223'
1222 1224 -1223 0
c Encoding variable: aux344 with domain: int(0..4) (representing constraint (aux340 + aux343))
c Both direct and order encoding.
c Var 'aux344' order represents '0' with '1225'
c Var 'aux344' direct represents '0' with '1225'
c Var 'aux344' order represents '1' with '1226'
-1225 1226 0
c Var 'aux344' direct represents '1' with '1227'
1225 -1226 1227 0
-1227 1226 0
-1227 -1225 0
c Var 'aux344' order represents '2' with '1228'
-1226 1228 0
c Var 'aux344' direct represents '2' with '1229'
1226 -1228 1229 0
-1229 1228 0
-1229 -1226 0
c Var 'aux344' order represents '3' with '1230'
-1228 1230 0
c Var 'aux344' direct represents '3' with '1231'
1228 -1230 1231 0
-1231 1230 0
-1231 -1228 0
c Var 'aux344' direct represents '4' with '-1230'
1225 1227 1229 1231 -1230 0
c Encoding variable: aux345 with domain: int(0..4) (representing constraint (aux339 + aux341))
c Both direct and order encoding.
c Var 'aux345' order represents '0' with '1232'
c Var 'aux345' direct represents '0' with '1232'
c Var 'aux345' order represents '1' with '1233'
-1232 1233 0
c Var 'aux345' direct represents '1' with '1234'
1232 -1233 1234 0
-1234 1233 0
-1234 -1232 0
c Var 'aux345' order represents '2' with '1235'
-1233 1235 0
c Var 'aux345' direct represents '2' with '1236'
1233 -1235 1236 0
-1236 1235 0
-1236 -1233 0
c Var 'aux345' order represents '3' with '1237'
-1235 1237 0
c Var 'aux345' direct represents '3' with '1238'
1235 -1237 1238 0
-1238 1237 0
-1238 -1235 0
c Var 'aux345' direct represents '4' with '-1237'
1232 1234 1236 1238 -1237 0
c Encoding variable: aux346 with domain: int(0..2) (representing constraint ((0<grid_00002_00003) + (0<grid_00006_00003)))
c Both direct and order encoding.
c Var 'aux346' order represents '0' with '1239'
c Var 'aux346' direct represents '0' with '1239'
c Var 'aux346' order represents '1' with '1240'
-1239 1240 0
c Var 'aux346' direct represents '1' with '1241'
1239 -1240 1241 0
-1241 1240 0
-1241 -1239 0
c Var 'aux346' direct represents '2' with '-1240'
1239 1241 -1240 0
c Encoding variable: aux347 with domain: int(0..2) (representing constraint ((0<grid_00001_00003) + (0<grid_00007_00003)))
c Both direct and order encoding.
c Var 'aux347' order represents '0' with '1242'
c Var 'aux347' direct represents '0' with '1242'
c Var 'aux347' order represents '1' with '1243'
-1242 1243 0
c Var 'aux347' direct represents '1' with '1244'
1242 -1243 1244 0
-1244 1243 0
-1244 -1242 0
c Var 'aux347' direct represents '2' with '-1243'
1242 1244 -1243 0
c Encoding variable: aux348 with domain: int(0..2) (representing constraint ((0<grid_00008_00003) + (0<grid_00005_00003)))
c Both direct and order encoding.
c Var 'aux348' order represents '0' with '1245'
c Var 'aux348' direct represents '0' with '1245'
c Var 'aux348' order represents '1' with '1246'
-1245 1246 0
c Var 'aux348' direct represents '1' with '1247'
1245 -1246 1247 0
-1247 1246 0
-1247 -1245 0
c Var 'aux348' direct represents '2' with '-1246'
1245 1247 -1246 0
c Encoding variable: aux349 with domain: int(0..2) (representing constraint ((0<grid_00000_00003) + (0<grid_00004_00003)))
c Both direct and order encoding.
c Var 'aux349' order represents '0' with '1248'
c Var 'aux349' direct represents '0' with '1248'
c Var 'aux349' order represents '1' with '1249'
-1248 1249 0
c Var 'aux349' direct represents '1' with '1250'
1248 -1249 1250 0
-1250 1249 0
-1250 -1248 0
c Var 'aux349' direct represents '2' with '-1249'
1248 1250 -1249 0
c Encoding variable: aux350 with domain: int(0..2) (representing constraint ((0<grid_00009_00003) + (0<grid_00003_00003)))
c Both direct and order encoding.
c Var 'aux350' order represents '0' with '1251'
c Var 'aux350' direct represents '0' with '1251'
c Var 'aux350' order represents '1' with '1252'
-1251 1252 0
c Var 'aux350' direct represents '1' with '1253'
1251 -1252 1253 0
-1253 1252 0
-1253 -1251 0
c Var 'aux350' direct represents '2' with '-1252'
1251 1253 -1252 0
c Encoding variable: aux351 with domain: int(0..4) (representing constraint (aux347 + aux350))
c Both direct and order encoding.
c Var 'aux351' order represents '0' with '1254'
c Var 'aux351' direct represents '0' with '1254'
c Var 'aux351' order represents '1' with '1255'
-1254 1255 0
c Var 'aux351' direct represents '1' with '1256'
1254 -1255 1256 0
-1256 1255 0
-1256 -1254 0
c Var 'aux351' order represents '2' with '1257'
-1255 1257 0
c Var 'aux351' direct represents '2' with '1258'
1255 -1257 1258 0
-1258 1257 0
-1258 -1255 0
c Var 'aux351' order represents '3' with '1259'
-1257 1259 0
c Var 'aux351' direct represents '3' with '1260'
1257 -1259 1260 0
-1260 1259 0
-1260 -1257 0
c Var 'aux351' direct represents '4' with '-1259'
1254 1256 1258 1260 -1259 0
c Encoding variable: aux352 with domain: int(0..4) (representing constraint (aux346 + aux348))
c Both direct and order encoding.
c Var 'aux352' order represents '0' with '1261'
c Var 'aux352' direct represents '0' with '1261'
c Var 'aux352' order represents '1' with '1262'
-1261 1262 0
c Var 'aux352' direct represents '1' with '1263'
1261 -1262 1263 0
-1263 1262 0
-1263 -1261 0
c Var 'aux352' order represents '2' with '1264'
-1262 1264 0
c Var 'aux352' direct represents '2' with '1265'
1262 -1264 1265 0
-1265 1264 0
-1265 -1262 0
c Var 'aux352' order represents '3' with '1266'
-1264 1266 0
c Var 'aux352' direct represents '3' with '1267'
1264 -1266 1267 0
-1267 1266 0
-1267 -1264 0
c Var 'aux352' direct represents '4' with '-1266'
1261 1263 1265 1267 -1266 0
c Encoding variable: aux353 with domain: int(0..2) (representing constraint ((0<grid_00002_00004) + (0<grid_00006_00004)))
c Both direct and order encoding.
c Var 'aux353' order represents '0' with '1268'
c Var 'aux353' direct represents '0' with '1268'
c Var 'aux353' order represents '1' with '1269'
-1268 1269 0
c Var 'aux353' direct represents '1' with '1270'
1268 -1269 1270 0
-1270 1269 0
-1270 -1268 0
c Var 'aux353' direct represents '2' with '-1269'
1268 1270 -1269 0
c Encoding variable: aux354 with domain: int(0..2) (representing constraint ((0<grid_00001_00004) + (0<grid_00007_00004)))
c Both direct and order encoding.
c Var 'aux354' order represents '0' with '1271'
c Var 'aux354' direct represents '0' with '1271'
c Var 'aux354' order represents '1' with '1272'
-1271 1272 0
c Var 'aux354' direct represents '1' with '1273'
1271 -1272 1273 0
-1273 1272 0
-1273 -1271 0
c Var 'aux354' direct represents '2' with '-1272'
1271 1273 -1272 0
c Encoding variable: aux355 with domain: int(0..2) (representing constraint ((0<grid_00008_00004) + (0<grid_00005_00004)))
c Both direct and order encoding.
c Var 'aux355' order represents '0' with '1274'
c Var 'aux355' direct represents '0' with '1274'
c Var 'aux355' order represents '1' with '1275'
-1274 1275 0
c Var 'aux355' direct represents '1' with '1276'
1274 -1275 1276 0
-1276 1275 0
-1276 -1274 0
c Var 'aux355' direct represents '2' with '-1275'
1274 1276 -1275 0
c Encoding variable: aux356 with domain: int(0..2) (representing constraint ((0<grid_00000_00004) + (0<grid_00004_00004)))
c Both direct and order encoding.
c Var 'aux356' order represents '0' with '1277'
c Var 'aux356' direct represents '0' with '1277'
c Var 'aux356' order represents '1' with '1278'
-1277 1278 0
c Var 'aux356' direct represents '1' with '1279'
1277 -1278 1279 0
-1279 1278 0
-1279 -1277 0
c Var 'aux356' direct represents '2' with '-1278'
1277 1279 -1278 0
c Encoding variable: aux357 with domain: int(0..2) (representing constraint ((0<grid_00009_00004) + (0<grid_00003_00004)))
c Both direct and order encoding.
c Var 'aux357' order represents '0' with '1280'
c Var 'aux357' direct represents '0' with '1280'
c Var 'aux357' order represents '1' with '1281'
-1280 1281 0
c Var 'aux357' direct represents '1' with '1282'
1280 -1281 1282 0
-1282 1281 0
-1282 -1280 0
c Var 'aux357' direct represents '2' with '-1281'
1280 1282 -1281 0
c Encoding variable: aux358 with domain: int(0..4) (representing constraint (aux354 + aux357))
c Both direct and order encoding.
c Var 'aux358' order represents '0' with '1283'
c Var 'aux358' direct represents '0' with '1283'
c Var 'aux358' order represents '1' with '1284'
-1283 1284 0
c Var 'aux358' direct represents '1' with '1285'
1283 -1284 1285 0
-1285 1284 0
-1285 -1283 0
c Var 'aux358' order represents '2' with '1286'
-1284 1286 0
c Var 'aux358' direct represents '2' with '1287'
1284 -1286 1287 0
-1287 1286 0
-1287 -1284 0
c Var 'aux358' order represents '3' with '1288'
-1286 1288 0
c Var 'aux358' direct represents '3' with '1289'
1286 -1288 1289 0
-1289 1288 0
-1289 -1286 0
c Var 'aux358' direct represents '4' with '-1288'
1283 1285 1287 1289 -1288 0
c Encoding variable: aux359 with domain: int(0..4) (representing constraint (aux353 + aux355))
c Both direct and order encoding.
c Var 'aux359' order represents '0' with '1290'
c Var 'aux359' direct represents '0' with '1290'
c Var 'aux359' order represents '1' with '1291'
-1290 1291 0
c Var 'aux359' direct represents '1' with '1292'
1290 -1291 1292 0
-1292 1291 0
-1292 -1290 0
c Var 'aux359' order represents '2' with '1293'
-1291 1293 0
c Var 'aux359' direct represents '2' with '1294'
1291 -1293 1294 0
-1294 1293 0
-1294 -1291 0
c Var 'aux359' order represents '3' with '1295'
-1293 1295 0
c Var 'aux359' direct represents '3' with '1296'
1293 -1295 1296 0
-1296 1295 0
-1296 -1293 0
c Var 'aux359' direct represents '4' with '-1295'
1290 1292 1294 1296 -1295 0
c Encoding variable: aux360 with domain: int(0..2) (representing constraint ((0<grid_00002_00005) + (0<grid_00006_00005)))
c Both direct and order encoding.
c Var 'aux360' order represents '0' with '1297'
c Var 'aux360' direct represents '0' with '1297'
c Var 'aux360' order represents '1' with '1298'
-1297 1298 0
c Var 'aux360' direct represents '1' with '1299'
1297 -1298 1299 0
-1299 1298 0
-1299 -1297 0
c Var 'aux360' direct represents '2' with '-1298'
1297 1299 -1298 0
c Encoding variable: aux361 with domain: int(0..2) (representing constraint ((0<grid_00001_00005) + (0<grid_00007_00005)))
c Both direct and order encoding.
c Var 'aux361' order represents '0' with '1300'
c Var 'aux361' direct represents '0' with '1300'
c Var 'aux361' order represents '1' with '1301'
-1300 1301 0
c Var 'aux361' direct represents '1' with '1302'
1300 -1301 1302 0
-1302 1301 0
-1302 -1300 0
c Var 'aux361' direct represents '2' with '-1301'
1300 1302 -1301 0
c Encoding variable: aux362 with domain: int(0..2) (representing constraint ((0<grid_00008_00005) + (0<grid_00005_00005)))
c Both direct and order encoding.
c Var 'aux362' order represents '0' with '1303'
c Var 'aux362' direct represents '0' with '1303'
c Var 'aux362' order represents '1' with '1304'
-1303 1304 0
c Var 'aux362' direct represents '1' with '1305'
1303 -1304 1305 0
-1305 1304 0
-1305 -1303 0
c Var 'aux362' direct represents '2' with '-1304'
1303 1305 -1304 0
c Encoding variable: aux363 with domain: int(0..2) (representing constraint ((0<grid_00000_00005) + (0<grid_00004_00005)))
c Both direct and order encoding.
c Var 'aux363' order represents '0' with '1306'
c Var 'aux363' direct represents '0' with '1306'
c Var 'aux363' order represents '1' with '1307'
-1306 1307 0
c Var 'aux363' direct represents '1' with '1308'
1306 -1307 1308 0
-1308 1307 0
-1308 -1306 0
c Var 'aux363' direct represents '2' with '-1307'
1306 1308 -1307 0
c Encoding variable: aux364 with domain: int(0..2) (representing constraint ((0<grid_00009_00005) + (0<grid_00003_00005)))
c Both direct and order encoding.
c Var 'aux364' order represents '0' with '1309'
c Var 'aux364' direct represents '0' with '1309'
c Var 'aux364' order represents '1' with '1310'
-1309 1310 0
c Var 'aux364' direct represents '1' with '1311'
1309 -1310 1311 0
-1311 1310 0
-1311 -1309 0
c Var 'aux364' direct represents '2' with '-1310'
1309 1311 -1310 0
c Encoding variable: aux365 with domain: int(0..4) (representing constraint (aux361 + aux364))
c Both direct and order encoding.
c Var 'aux365' order represents '0' with '1312'
c Var 'aux365' direct represents '0' with '1312'
c Var 'aux365' order represents '1' with '1313'
-1312 1313 0
c Var 'aux365' direct represents '1' with '1314'
1312 -1313 1314 0
-1314 1313 0
-1314 -1312 0
c Var 'aux365' order represents '2' with '1315'
-1313 1315 0
c Var 'aux365' direct represents '2' with '1316'
1313 -1315 1316 0
-1316 1315 0
-1316 -1313 0
c Var 'aux365' order represents '3' with '1317'
-1315 1317 0
c Var 'aux365' direct represents '3' with '1318'
1315 -1317 1318 0
-1318 1317 0
-1318 -1315 0
c Var 'aux365' direct represents '4' with '-1317'
1312 1314 1316 1318 -1317 0
c Encoding variable: aux366 with domain: int(0..4) (representing constraint (aux360 + aux362))
c Both direct and order encoding.
c Var 'aux366' order represents '0' with '1319'
c Var 'aux366' direct represents '0' with '1319'
c Var 'aux366' order represents '1' with '1320'
-1319 1320 0
c Var 'aux366' direct represents '1' with '1321'
1319 -1320 1321 0
-1321 1320 0
-1321 -1319 0
c Var 'aux366' order represents '2' with '1322'
-1320 1322 0
c Var 'aux366' direct represents '2' with '1323'
1320 -1322 1323 0
-1323 1322 0
-1323 -1320 0
c Var 'aux366' order represents '3' with '1324'
-1322 1324 0
c Var 'aux366' direct represents '3' with '1325'
1322 -1324 1325 0
-1325 1324 0
-1325 -1322 0
c Var 'aux366' direct represents '4' with '-1324'
1319 1321 1323 1325 -1324 0
c Encoding variable: aux367 with domain: int(0..2) (representing constraint ((0<grid_00002_00006) + (0<grid_00006_00006)))
c Both direct and order encoding.
c Var 'aux367' order represents '0' with '1326'
c Var 'aux367' direct represents '0' with '1326'
c Var 'aux367' order represents '1' with '1327'
-1326 1327 0
c Var 'aux367' direct represents '1' with '1328'
1326 -1327 1328 0
-1328 1327 0
-1328 -1326 0
c Var 'aux367' direct represents '2' with '-1327'
1326 1328 -1327 0
c Encoding variable: aux368 with domain: int(0..2) (representing constraint ((0<grid_00001_00006) + (0<grid_00007_00006)))
c Both direct and order encoding.
c Var 'aux368' order represents '0' with '1329'
c Var 'aux368' direct represents '0' with '1329'
c Var 'aux368' order represents '1' with '1330'
-1329 1330 0
c Var 'aux368' direct represents '1' with '1331'
1329 -1330 1331 0
-1331 1330 0
-1331 -1329 0
c Var 'aux368' direct represents '2' with '-1330'
1329 1331 -1330 0
c Encoding variable: aux369 with domain: int(0..2) (representing constraint ((0<grid_00008_00006) + (0<grid_00005_00006)))
c Both direct and order encoding.
c Var 'aux369' order represents '0' with '1332'
c Var 'aux369' direct represents '0' with '1332'
c Var 'aux369' order represents '1' with '1333'
-1332 1333 0
c Var 'aux369' direct represents '1' with '1334'
1332 -1333 1334 0
-1334 1333 0
-1334 -1332 0
c Var 'aux369' direct represents '2' with '-1333'
1332 1334 -1333 0
c Encoding variable: aux370 with domain: int(0..2) (representing constraint ((0<grid_00000_00006) + (0<grid_00004_00006)))
c Both direct and order encoding.
c Var 'aux370' order represents '0' with '1335'
c Var 'aux370' direct represents '0' with '1335'
c Var 'aux370' order represents '1' with '1336'
-1335 1336 0
c Var 'aux370' direct represents '1' with '1337'
1335 -1336 1337 0
-1337 1336 0
-1337 -1335 0
c Var 'aux370' direct represents '2' with '-1336'
1335 1337 -1336 0
c Encoding variable: aux371 with domain: int(0..2) (representing constraint ((0<grid_00009_00006) + (0<grid_00003_00006)))
c Both direct and order encoding.
c Var 'aux371' order represents '0' with '1338'
c Var 'aux371' direct represents '0' with '1338'
c Var 'aux371' order represents '1' with '1339'
-1338 1339 0
c Var 'aux371' direct represents '1' with '1340'
1338 -1339 1340 0
-1340 1339 0
-1340 -1338 0
c Var 'aux371' direct represents '2' with '-1339'
1338 1340 -1339 0
c Encoding variable: aux372 with domain: int(0..4) (representing constraint (aux368 + aux371))
c Both direct and order encoding.
c Var 'aux372' order represents '0' with '1341'
c Var 'aux372' direct represents '0' with '1341'
c Var 'aux372' order represents '1' with '1342'
-1341 1342 0
c Var 'aux372' direct represents '1' with '1343'
1341 -1342 1343 0
-1343 1342 0
-1343 -1341 0
c Var 'aux372' order represents '2' with '1344'
-1342 1344 0
c Var 'aux372' direct represents '2' with '1345'
1342 -1344 1345 0
-1345 1344 0
-1345 -1342 0
c Var 'aux372' order represents '3' with '1346'
-1344 1346 0
c Var 'aux372' direct represents '3' with '1347'
1344 -1346 1347 0
-1347 1346 0
-1347 -1344 0
c Var 'aux372' direct represents '4' with '-1346'
1341 1343 1345 1347 -1346 0
c Encoding variable: aux373 with domain: int(0..4) (representing constraint (aux367 + aux369))
c Both direct and order encoding.
c Var 'aux373' order represents '0' with '1348'
c Var 'aux373' direct represents '0' with '1348'
c Var 'aux373' order represents '1' with '1349'
-1348 1349 0
c Var 'aux373' direct represents '1' with '1350'
1348 -1349 1350 0
-1350 1349 0
-1350 -1348 0
c Var 'aux373' order represents '2' with '1351'
-1349 1351 0
c Var 'aux373' direct represents '2' with '1352'
1349 -1351 1352 0
-1352 1351 0
-1352 -1349 0
c Var 'aux373' order represents '3' with '1353'
-1351 1353 0
c Var 'aux373' direct represents '3' with '1354'
1351 -1353 1354 0
-1354 1353 0
-1354 -1351 0
c Var 'aux373' direct represents '4' with '-1353'
1348 1350 1352 1354 -1353 0
c Encoding variable: aux374 with domain: int(0..2) (representing constraint ((0<grid_00002_00007) + (0<grid_00006_00007)))
c Both direct and order encoding.
c Var 'aux374' order represents '0' with '1355'
c Var 'aux374' direct represents '0' with '1355'
c Var 'aux374' order represents '1' with '1356'
-1355 1356 0
c Var 'aux374' direct represents '1' with '1357'
1355 -1356 1357 0
-1357 1356 0
-1357 -1355 0
c Var 'aux374' direct represents '2' with '-1356'
1355 1357 -1356 0
c Encoding variable: aux375 with domain: int(0..2) (representing constraint ((0<grid_00001_00007) + (0<grid_00007_00007)))
c Both direct and order encoding.
c Var 'aux375' order represents '0' with '1358'
c Var 'aux375' direct represents '0' with '1358'
c Var 'aux375' order represents '1' with '1359'
-1358 1359 0
c Var 'aux375' direct represents '1' with '1360'
1358 -1359 1360 0
-1360 1359 0
-1360 -1358 0
c Var 'aux375' direct represents '2' with '-1359'
1358 1360 -1359 0
c Encoding variable: aux376 with domain: int(0..2) (representing constraint ((0<grid_00008_00007) + (0<grid_00005_00007)))
c Both direct and order encoding.
c Var 'aux376' order represents '0' with '1361'
c Var 'aux376' direct represents '0' with '1361'
c Var 'aux376' order represents '1' with '1362'
-1361 1362 0
c Var 'aux376' direct represents '1' with '1363'
1361 -1362 1363 0
-1363 1362 0
-1363 -1361 0
c Var 'aux376' direct represents '2' with '-1362'
1361 1363 -1362 0
c Encoding variable: aux377 with domain: int(0..2) (representing constraint ((0<grid_00000_00007) + (0<grid_00004_00007)))
c Both direct and order encoding.
c Var 'aux377' order represents '0' with '1364'
c Var 'aux377' direct represents '0' with '1364'
c Var 'aux377' order represents '1' with '1365'
-1364 1365 0
c Var 'aux377' direct represents '1' with '1366'
1364 -1365 1366 0
-1366 1365 0
-1366 -1364 0
c Var 'aux377' direct represents '2' with '-1365'
1364 1366 -1365 0
c Encoding variable: aux378 with domain: int(0..2) (representing constraint ((0<grid_00009_00007) + (0<grid_00003_00007)))
c Both direct and order encoding.
c Var 'aux378' order represents '0' with '1367'
c Var 'aux378' direct represents '0' with '1367'
c Var 'aux378' order represents '1' with '1368'
-1367 1368 0
c Var 'aux378' direct represents '1' with '1369'
1367 -1368 1369 0
-1369 1368 0
-1369 -1367 0
c Var 'aux378' direct represents '2' with '-1368'
1367 1369 -1368 0
c Encoding variable: aux379 with domain: int(0..4) (representing constraint (aux375 + aux378))
c Both direct and order encoding.
c Var 'aux379' order represents '0' with '1370'
c Var 'aux379' direct represents '0' with '1370'
c Var 'aux379' order represents '1' with '1371'
-1370 1371 0
c Var 'aux379' direct represents '1' with '1372'
1370 -1371 1372 0
-1372 1371 0
-1372 -1370 0
c Var 'aux379' order represents '2' with '1373'
-1371 1373 0
c Var 'aux379' direct represents '2' with '1374'
1371 -1373 1374 0
-1374 1373 0
-1374 -1371 0
c Var 'aux379' order represents '3' with '1375'
-1373 1375 0
c Var 'aux379' direct represents '3' with '1376'
1373 -1375 1376 0
-1376 1375 0
-1376 -1373 0
c Var 'aux379' direct represents '4' with '-1375'
1370 1372 1374 1376 -1375 0
c Encoding variable: aux380 with domain: int(0..4) (representing constraint (aux374 + aux376))
c Both direct and order encoding.
c Var 'aux380' order represents '0' with '1377'
c Var 'aux380' direct represents '0' with '1377'
c Var 'aux380' order represents '1' with '1378'
-1377 1378 0
c Var 'aux380' direct represents '1' with '1379'
1377 -1378 1379 0
-1379 1378 0
-1379 -1377 0
c Var 'aux380' order represents '2' with '1380'
-1378 1380 0
c Var 'aux380' direct represents '2' with '1381'
1378 -1380 1381 0
-1381 1380 0
-1381 -1378 0
c Var 'aux380' order represents '3' with '1382'
-1380 1382 0
c Var 'aux380' direct represents '3' with '1383'
1380 -1382 1383 0
-1383 1382 0
-1383 -1380 0
c Var 'aux380' direct represents '4' with '-1382'
1377 1379 1381 1383 -1382 0
c Encoding variable: aux381 with domain: int(0..2) (representing constraint ((0<grid_00002_00008) + (0<grid_00006_00008)))
c Both direct and order encoding.
c Var 'aux381' order represents '0' with '1384'
c Var 'aux381' direct represents '0' with '1384'
c Var 'aux381' order represents '1' with '1385'
-1384 1385 0
c Var 'aux381' direct represents '1' with '1386'
1384 -1385 1386 0
-1386 1385 0
-1386 -1384 0
c Var 'aux381' direct represents '2' with '-1385'
1384 1386 -1385 0
c Encoding variable: aux382 with domain: int(0..2) (representing constraint ((0<grid_00001_00008) + (0<grid_00007_00008)))
c Both direct and order encoding.
c Var 'aux382' order represents '0' with '1387'
c Var 'aux382' direct represents '0' with '1387'
c Var 'aux382' order represents '1' with '1388'
-1387 1388 0
c Var 'aux382' direct represents '1' with '1389'
1387 -1388 1389 0
-1389 1388 0
-1389 -1387 0
c Var 'aux382' direct represents '2' with '-1388'
1387 1389 -1388 0
c Encoding variable: aux383 with domain: int(0..2) (representing constraint ((0<grid_00008_00008) + (0<grid_00005_00008)))
c Both direct and order encoding.
c Var 'aux383' order represents '0' with '1390'
c Var 'aux383' direct represents '0' with '1390'
c Var 'aux383' order represents '1' with '1391'
-1390 1391 0
c Var 'aux383' direct represents '1' with '1392'
1390 -1391 1392 0
-1392 1391 0
-1392 -1390 0
c Var 'aux383' direct represents '2' with '-1391'
1390 1392 -1391 0
c Encoding variable: aux384 with domain: int(0..2) (representing constraint ((0<grid_00000_00008) + (0<grid_00004_00008)))
c Both direct and order encoding.
c Var 'aux384' order represents '0' with '1393'
c Var 'aux384' direct represents '0' with '1393'
c Var 'aux384' order represents '1' with '1394'
-1393 1394 0
c Var 'aux384' direct represents '1' with '1395'
1393 -1394 1395 0
-1395 1394 0
-1395 -1393 0
c Var 'aux384' direct represents '2' with '-1394'
1393 1395 -1394 0
c Encoding variable: aux385 with domain: int(0..2) (representing constraint ((0<grid_00009_00008) + (0<grid_00003_00008)))
c Both direct and order encoding.
c Var 'aux385' order represents '0' with '1396'
c Var 'aux385' direct represents '0' with '1396'
c Var 'aux385' order represents '1' with '1397'
-1396 1397 0
c Var 'aux385' direct represents '1' with '1398'
1396 -1397 1398 0
-1398 1397 0
-1398 -1396 0
c Var 'aux385' direct represents '2' with '-1397'
1396 1398 -1397 0
c Encoding variable: aux386 with domain: int(0..4) (representing constraint (aux382 + aux385))
c Both direct and order encoding.
c Var 'aux386' order represents '0' with '1399'
c Var 'aux386' direct represents '0' with '1399'
c Var 'aux386' order represents '1' with '1400'
-1399 1400 0
c Var 'aux386' direct represents '1' with '1401'
1399 -1400 1401 0
-1401 1400 0
-1401 -1399 0
c Var 'aux386' order represents '2' with '1402'
-1400 1402 0
c Var 'aux386' direct represents '2' with '1403'
1400 -1402 1403 0
-1403 1402 0
-1403 -1400 0
c Var 'aux386' order represents '3' with '1404'
-1402 1404 0
c Var 'aux386' direct represents '3' with '1405'
1402 -1404 1405 0
-1405 1404 0
-1405 -1402 0
c Var 'aux386' direct represents '4' with '-1404'
1399 1401 1403 1405 -1404 0
c Encoding variable: aux387 with domain: int(0..4) (representing constraint (aux381 + aux383))
c Both direct and order encoding.
c Var 'aux387' order represents '0' with '1406'
c Var 'aux387' direct represents '0' with '1406'
c Var 'aux387' order represents '1' with '1407'
-1406 1407 0
c Var 'aux387' direct represents '1' with '1408'
1406 -1407 1408 0
-1408 1407 0
-1408 -1406 0
c Var 'aux387' order represents '2' with '1409'
-1407 1409 0
c Var 'aux387' direct represents '2' with '1410'
1407 -1409 1410 0
-1410 1409 0
-1410 -1407 0
c Var 'aux387' order represents '3' with '1411'
-1409 1411 0
c Var 'aux387' direct represents '3' with '1412'
1409 -1411 1412 0
-1412 1411 0
-1412 -1409 0
c Var 'aux387' direct represents '4' with '-1411'
1406 1408 1410 1412 -1411 0
c Encoding variable: aux388 with domain: int(0..2) (representing constraint ((0<grid_00002_00009) + (0<grid_00006_00009)))
c Both direct and order encoding.
c Var 'aux388' order represents '0' with '1413'
c Var 'aux388' direct represents '0' with '1413'
c Var 'aux388' order represents '1' with '1414'
-1413 1414 0
c Var 'aux388' direct represents '1' with '1415'
1413 -1414 1415 0
-1415 1414 0
-1415 -1413 0
c Var 'aux388' direct represents '2' with '-1414'
1413 1415 -1414 0
c Encoding variable: aux389 with domain: int(0..2) (representing constraint ((0<grid_00001_00009) + (0<grid_00007_00009)))
c Both direct and order encoding.
c Var 'aux389' order represents '0' with '1416'
c Var 'aux389' direct represents '0' with '1416'
c Var 'aux389' order represents '1' with '1417'
-1416 1417 0
c Var 'aux389' direct represents '1' with '1418'
1416 -1417 1418 0
-1418 1417 0
-1418 -1416 0
c Var 'aux389' direct represents '2' with '-1417'
1416 1418 -1417 0
c Encoding variable: aux390 with domain: int(0..2) (representing constraint ((0<grid_00008_00009) + (0<grid_00005_00009)))
c Both direct and order encoding.
c Var 'aux390' order represents '0' with '1419'
c Var 'aux390' direct represents '0' with '1419'
c Var 'aux390' order represents '1' with '1420'
-1419 1420 0
c Var 'aux390' direct represents '1' with '1421'
1419 -1420 1421 0
-1421 1420 0
-1421 -1419 0
c Var 'aux390' direct represents '2' with '-1420'
1419 1421 -1420 0
c Encoding variable: aux391 with domain: int(0..2) (representing constraint ((0<grid_00000_00009) + (0<grid_00004_00009)))
c Both direct and order encoding.
c Var 'aux391' order represents '0' with '1422'
c Var 'aux391' direct represents '0' with '1422'
c Var 'aux391' order represents '1' with '1423'
-1422 1423 0
c Var 'aux391' direct represents '1' with '1424'
1422 -1423 1424 0
-1424 1423 0
-1424 -1422 0
c Var 'aux391' direct represents '2' with '-1423'
1422 1424 -1423 0
c Encoding variable: aux392 with domain: int(0..2) (representing constraint ((0<grid_00009_00009) + (0<grid_00003_00009)))
c Both direct and order encoding.
c Var 'aux392' order represents '0' with '1425'
c Var 'aux392' direct represents '0' with '1425'
c Var 'aux392' order represents '1' with '1426'
-1425 1426 0
c Var 'aux392' direct represents '1' with '1427'
1425 -1426 1427 0
-1427 1426 0
-1427 -1425 0
c Var 'aux392' direct represents '2' with '-1426'
1425 1427 -1426 0
c Encoding variable: aux393 with domain: int(0..4) (representing constraint (aux389 + aux392))
c Both direct and order encoding.
c Var 'aux393' order represents '0' with '1428'
c Var 'aux393' direct represents '0' with '1428'
c Var 'aux393' order represents '1' with '1429'
-1428 1429 0
c Var 'aux393' direct represents '1' with '1430'
1428 -1429 1430 0
-1430 1429 0
-1430 -1428 0
c Var 'aux393' order represents '2' with '1431'
-1429 1431 0
c Var 'aux393' direct represents '2' with '1432'
1429 -1431 1432 0
-1432 1431 0
-1432 -1429 0
c Var 'aux393' order represents '3' with '1433'
-1431 1433 0
c Var 'aux393' direct represents '3' with '1434'
1431 -1433 1434 0
-1434 1433 0
-1434 -1431 0
c Var 'aux393' direct represents '4' with '-1433'
1428 1430 1432 1434 -1433 0
c Encoding variable: aux394 with domain: int(0..4) (representing constraint (aux388 + aux390))
c Both direct and order encoding.
c Var 'aux394' order represents '0' with '1435'
c Var 'aux394' direct represents '0' with '1435'
c Var 'aux394' order represents '1' with '1436'
-1435 1436 0
c Var 'aux394' direct represents '1' with '1437'
1435 -1436 1437 0
-1437 1436 0
-1437 -1435 0
c Var 'aux394' order represents '2' with '1438'
-1436 1438 0
c Var 'aux394' direct represents '2' with '1439'
1436 -1438 1439 0
-1439 1438 0
-1439 -1436 0
c Var 'aux394' order represents '3' with '1440'
-1438 1440 0
c Var 'aux394' direct represents '3' with '1441'
1438 -1440 1441 0
-1441 1440 0
-1441 -1438 0
c Var 'aux394' direct represents '4' with '-1440'
1435 1437 1439 1441 -1440 0
c ((7<=(aux118 + aux120 + aux121))=tv=SATLiteral(167))
-167 -304 0
-167 -302 -305 0
-167 -300 -307 0
-167 -298 -309 0
-167 -297 0
-167 -292 -305 0
-167 -292 -302 -307 0
-167 -292 -300 -309 0
-167 -292 -298 0
-167 -292 -297 0
-167 -291 -307 0
-167 -291 -302 -309 0
-167 -291 -300 0
-167 -291 -298 0
-167 -291 -297 0
167 300 309 0
167 302 307 0
167 291 298 309 0
167 291 300 307 0
167 291 302 305 0
167 292 297 309 0
167 292 298 307 0
167 292 300 305 0
167 292 302 304 0
c ((8<=(aux125 + aux127 + aux128))=tv=SATLiteral(168))
-168 -334 0
-168 -331 -336 0
-168 -329 -338 0
-168 -327 0
-168 -326 0
-168 -321 -336 0
-168 -321 -331 -338 0
-168 -321 -329 0
-168 -321 -327 0
-168 -321 -326 0
-168 -320 -338 0
-168 -320 -331 0
-168 -320 -329 0
-168 -320 -327 0
-168 -320 -326 0
168 331 338 0
168 320 329 338 0
168 320 331 336 0
168 321 327 338 0
168 321 329 336 0
168 321 331 334 0
c ((9<=(aux132 + aux134 + aux135))=tv=SATLiteral(169))
-169 -365 0
-169 -360 -367 0
-169 -358 0
-169 -356 0
-169 -355 0
-169 -350 -367 0
-169 -350 -360 0
-169 -350 -358 0
-169 -350 -356 0
-169 -350 -355 0
-169 -349 0
-169 -349 -360 0
-169 -349 -358 0
-169 -349 -356 0
-169 -349 -355 0
169 349 360 367 0
169 350 358 367 0
169 350 360 365 0
c ((5<=(aux139 + aux141 + aux142))=tv=SATLiteral(170))
-170 -387 -391 0
-170 -385 -392 0
-170 -384 -394 0
-170 -379 -389 -391 0
-170 -379 -387 -392 0
-170 -379 -385 -394 0
-170 -379 -384 -396 0
-170 -378 -391 0
-170 -378 -389 -392 0
-170 -378 -387 -394 0
-170 -378 -385 -396 0
-170 -378 -384 0
170 384 396 0
170 385 394 0
170 387 392 0
170 389 391 0
170 378 396 0
170 378 384 394 0
170 378 385 392 0
170 378 387 391 0
170 378 389 0
170 379 394 0
170 379 384 392 0
170 379 385 391 0
170 379 387 0
170 379 389 0
c ((8<=(aux146 + aux148 + aux149))=tv=SATLiteral(171))
-171 -421 0
-171 -418 -423 0
-171 -416 -425 0
-171 -414 0
-171 -413 0
-171 -408 -423 0
-171 -408 -418 -425 0
-171 -408 -416 0
-171 -408 -414 0
-171 -408 -413 0
-171 -407 -425 0
-171 -407 -418 0
-171 -407 -416 0
-171 -407 -414 0
-171 -407 -413 0
171 418 425 0
171 407 416 425 0
171 407 418 423 0
171 408 414 425 0
171 408 416 423 0
171 408 418 421 0
c ((6<=(aux153 + aux155 + aux156))=tv=SATLiteral(172))
-172 -447 -449 0
-172 -445 -450 0
-172 -443 -452 0
-172 -442 -454 0
-172 -437 -449 0
-172 -437 -447 -450 0
-172 -437 -445 -452 0
-172 -437 -443 -454 0
-172 -437 -442 0
-172 -436 -450 0
-172 -436 -447 -452 0
-172 -436 -445 -454 0
-172 -436 -443 0
-172 -436 -442 0
172 443 454 0
172 445 452 0
172 447 450 0
172 436 442 454 0
172 436 443 452 0
172 436 445 450 0
172 436 447 449 0
172 437 454 0
172 437 442 452 0
172 437 443 450 0
172 437 445 449 0
172 437 447 0
c ((1<=(aux160 + aux162 + aux163))=tv=SATLiteral(173))
-173 -465 -471 -478 0
173 478 0
173 471 0
173 472 0
173 474 0
173 476 0
173 465 0
173 465 471 0
173 465 472 0
173 465 474 0
173 465 476 0
173 466 0
173 466 471 0
173 466 472 0
173 466 474 0
173 466 476 0
c ((4<=(aux167 + aux169 + aux170))=tv=SATLiteral(174))
-174 -501 -507 0
-174 -500 -508 0
-174 -495 -503 -507 0
-174 -495 -501 -508 0
-174 -495 -500 -510 0
-174 -494 -505 -507 0
-174 -494 -503 -508 0
-174 -494 -501 -510 0
-174 -494 -500 -512 0
174 512 0
174 500 510 0
174 501 508 0
174 503 507 0
174 505 0
174 494 510 0
174 494 500 508 0
174 494 501 507 0
174 494 503 0
174 494 505 0
174 495 508 0
174 495 500 507 0
174 495 501 0
174 495 503 0
174 495 505 0
c ((3<=(aux174 + aux176 + aux177))=tv=SATLiteral(175))
-175 -529 -536 0
-175 -524 -530 -536 0
-175 -524 -529 -537 0
-175 -523 -532 -536 0
-175 -523 -530 -537 0
-175 -523 -529 -539 0
175 539 0
175 529 537 0
175 530 536 0
175 532 0
175 534 0
175 523 537 0
175 523 529 536 0
175 523 530 0
175 523 532 0
175 523 534 0
175 524 536 0
175 524 529 0
175 524 530 0
175 524 532 0
175 524 534 0
c ((4<=(aux181 + aux183 + aux184))=tv=SATLiteral(176))
-176 -559 -565 0
-176 -558 -566 0
-176 -553 -561 -565 0
-176 -553 -559 -566 0
-176 -553 -558 -568 0
-176 -552 -563 -565 0
-176 -552 -561 -566 0
-176 -552 -559 -568 0
-176 -552 -558 -570 0
176 570 0
176 558 568 0
176 559 566 0
176 561 565 0
176 563 0
176 552 568 0
176 552 558 566 0
176 552 559 565 0
176 552 561 0
176 552 563 0
176 553 566 0
176 553 558 565 0
176 553 559 0
176 553 561 0
176 553 563 0
c (((aux188 + aux190 + aux191)<=7)=tv=SATLiteral(177))
-177 592 599 0
-177 581 590 599 0
-177 581 592 597 0
-177 582 588 599 0
-177 582 590 597 0
-177 582 592 595 0
177 -595 0
177 -592 -597 0
177 -590 -599 0
177 -588 0
177 -587 0
177 -582 -597 0
177 -582 -592 -599 0
177 -582 -590 0
177 -582 -588 0
177 -582 -587 0
177 -581 -599 0
177 -581 -592 0
177 -581 -590 0
177 -581 -588 0
177 -581 -587 0
c (((aux195 + aux197 + aux198)<=8)=tv=SATLiteral(178))
-178 610 621 628 0
-178 611 619 628 0
-178 611 621 626 0
178 -626 0
178 -621 -628 0
178 -619 0
178 -617 0
178 -616 0
178 -611 -628 0
178 -611 -621 0
178 -611 -619 0
178 -611 -617 0
178 -611 -616 0
178 -610 0
178 -610 -621 0
178 -610 -619 0
178 -610 -617 0
178 -610 -616 0
c (((aux202 + aux204 + aux205)<=9)=tv=SATLiteral(179))
-179 640 650 657 0
179 -657 0
179 -650 0
179 -648 0
179 -646 0
179 -645 0
179 -640 0
179 -640 -650 0
179 -640 -648 0
179 -640 -646 0
179 -640 -645 0
179 -639 0
179 -639 -650 0
179 -639 -648 0
179 -639 -646 0
179 -639 -645 0
c (((aux209 + aux211 + aux212)<=5)=tv=SATLiteral(180))
-180 675 686 0
-180 677 684 0
-180 679 682 0
-180 668 674 686 0
-180 668 675 684 0
-180 668 677 682 0
-180 668 679 681 0
-180 669 686 0
-180 669 674 684 0
-180 669 675 682 0
-180 669 677 681 0
-180 669 679 0
180 -679 -681 0
180 -677 -682 0
180 -675 -684 0
180 -674 -686 0
180 -669 -681 0
180 -669 -679 -682 0
180 -669 -677 -684 0
180 -669 -675 -686 0
180 -669 -674 0
180 -668 -682 0
180 -668 -679 -684 0
180 -668 -677 -686 0
180 -668 -675 0
180 -668 -674 0
c (((aux216 + aux218 + aux219)<=8)=tv=SATLiteral(181))
-181 697 708 715 0
-181 698 706 715 0
-181 698 708 713 0
181 -713 0
181 -708 -715 0
181 -706 0
181 -704 0
181 -703 0
181 -698 -715 0
181 -698 -708 0
181 -698 -706 0
181 -698 -704 0
181 -698 -703 0
181 -697 0
181 -697 -708 0
181 -697 -706 0
181 -697 -704 0
181 -697 -703 0
c (((aux223 + aux225 + aux226)<=6)=tv=SATLiteral(182))
-182 735 744 0
-182 737 742 0
-182 726 733 744 0
-182 726 735 742 0
-182 726 737 740 0
-182 727 732 744 0
-182 727 733 742 0
-182 727 735 740 0
-182 727 737 739 0
182 -739 0
182 -737 -740 0
182 -735 -742 0
182 -733 -744 0
182 -732 0
182 -727 -740 0
182 -727 -737 -742 0
182 -727 -735 -744 0
182 -727 -733 0
182 -727 -732 0
182 -726 -742 0
182 -726 -737 -744 0
182 -726 -735 0
182 -726 -733 0
182 -726 -732 0
c (((aux230 + aux232 + aux233)<=1)=tv=SATLiteral(183))
-183 769 0
-183 761 768 0
-183 762 0
-183 764 0
-183 766 0
-183 755 768 0
-183 755 761 0
-183 755 762 0
-183 755 764 0
-183 755 766 0
-183 756 0
-183 756 761 0
-183 756 762 0
-183 756 764 0
-183 756 766 0
183 -756 -761 -768 0
183 -755 -762 -768 0
183 -755 -761 -769 0
c (((aux237 + aux239 + aux240)<=4)=tv=SATLiteral(184))
-184 790 802 0
-184 791 800 0
-184 793 798 0
-184 795 797 0
-184 784 802 0
-184 784 790 800 0
-184 784 791 798 0
-184 784 793 797 0
-184 784 795 0
-184 785 800 0
-184 785 790 798 0
-184 785 791 797 0
-184 785 793 0
-184 785 795 0
184 -793 -797 0
184 -791 -798 0
184 -790 -800 0
184 -785 -795 -797 0
184 -785 -793 -798 0
184 -785 -791 -800 0
184 -785 -790 -802 0
184 -784 -797 0
184 -784 -795 -798 0
184 -784 -793 -800 0
184 -784 -791 -802 0
184 -784 -790 0
c (((aux244 + aux246 + aux247)<=3)=tv=SATLiteral(185))
-185 831 0
-185 819 829 0
-185 820 827 0
-185 822 826 0
-185 824 0
-185 813 829 0
-185 813 819 827 0
-185 813 820 826 0
-185 813 822 0
-185 813 824 0
-185 814 827 0
-185 814 819 826 0
-185 814 820 0
-185 814 822 0
-185 814 824 0
185 -820 -826 0
185 -819 -827 0
185 -814 -822 -826 0
185 -814 -820 -827 0
185 -814 -819 -829 0
185 -813 -824 -826 0
185 -813 -822 -827 0
185 -813 -820 -829 0
185 -813 -819 -831 0
c (((aux251 + aux253 + aux254)<=4)=tv=SATLiteral(186))
-186 848 860 0
-186 849 858 0
-186 851 856 0
-186 853 855 0
-186 842 860 0
-186 842 848 858 0
-186 842 849 856 0
-186 842 851 855 0
-186 842 853 0
-186 843 858 0
-186 843 848 856 0
-186 843 849 855 0
-186 843 851 0
-186 843 853 0
186 -851 -855 0
186 -849 -856 0
186 -848 -858 0
186 -843 -853 -855 0
186 -843 -851 -856 0
186 -843 -849 -858 0
186 -843 -848 -860 0
186 -842 -855 0
186 -842 -853 -856 0
186 -842 -851 -858 0
186 -842 -849 -860 0
186 -842 -848 0
c ((8<=(aux258 + aux260 + aux261))=tv=SATLiteral(187))
-187 -885 0
-187 -882 -887 0
-187 -880 -889 0
-187 -878 0
-187 -877 0
-187 -872 -887 0
-187 -872 -882 -889 0
-187 -872 -880 0
-187 -872 -878 0
-187 -872 -877 0
-187 -871 -889 0
-187 -871 -882 0
-187 -871 -880 0
-187 -871 -878 0
-187 -871 -877 0
187 882 889 0
187 871 880 889 0
187 871 882 887 0
187 872 878 889 0
187 872 880 887 0
187 872 882 885 0
c ((10<=(aux265 + aux267 + aux268))=tv=SATLiteral(188))
-188 -918 0
-188 -911 0
-188 -909 0
-188 -907 0
-188 -906 0
-188 -901 0
-188 -901 -911 0
-188 -901 -909 0
-188 -901 -907 0
-188 -901 -906 0
-188 -900 0
-188 -900 -911 0
-188 -900 -909 0
-188 -900 -907 0
-188 -900 -906 0
188 901 911 918 0
c ((4<=(aux272 + aux274 + aux275))=tv=SATLiteral(189))
-189 -936 -942 0
-189 -935 -943 0
-189 -930 -938 -942 0
-189 -930 -936 -943 0
-189 -930 -935 -945 0
-189 -929 -940 -942 0
-189 -929 -938 -943 0
-189 -929 -936 -945 0
-189 -929 -935 -947 0
189 947 0
189 935 945 0
189 936 943 0
189 938 942 0
189 940 0
189 929 945 0
189 929 935 943 0
189 929 936 942 0
189 929 938 0
189 929 940 0
189 930 943 0
189 930 935 942 0
189 930 936 0
189 930 938 0
189 930 940 0
c ((5<=(aux279 + aux281 + aux282))=tv=SATLiteral(190))
-190 -967 -971 0
-190 -965 -972 0
-190 -964 -974 0
-190 -959 -969 -971 0
-190 -959 -967 -972 0
-190 -959 -965 -974 0
-190 -959 -964 -976 0
-190 -958 -971 0
-190 -958 -969 -972 0
-190 -958 -967 -974 0
-190 -958 -965 -976 0
-190 -958 -964 0
190 964 976 0
190 965 974 0
190 967 972 0
190 969 971 0
190 958 976 0
190 958 964 974 0
190 958 965 972 0
190 958 967 971 0
190 958 969 0
190 959 974 0
190 959 964 972 0
190 959 965 971 0
190 959 967 0
190 959 969 0
c ((4<=(aux286 + aux288 + aux289))=tv=SATLiteral(191))
-191 -994 -1000 0
-191 -993 -1001 0
-191 -988 -996 -1000 0
-191 -988 -994 -1001 0
-191 -988 -993 -1003 0
-191 -987 -998 -1000 0
-191 -987 -996 -1001 0
-191 -987 -994 -1003 0
-191 -987 -993 -1005 0
191 1005 0
191 993 1003 0
191 994 1001 0
191 996 1000 0
191 998 0
191 987 1003 0
191 987 993 1001 0
191 987 994 1000 0
191 987 996 0
191 987 998 0
191 988 1001 0
191 988 993 1000 0
191 988 994 0
191 988 996 0
191 988 998 0
c ((5<=(aux293 + aux295 + aux296))=tv=SATLiteral(192))
-192 -1025 -1029 0
-192 -1023 -1030 0
-192 -1022 -1032 0
-192 -1017 -1027 -1029 0
-192 -1017 -1025 -1030 0
-192 -1017 -1023 -1032 0
-192 -1017 -1022 -1034 0
-192 -1016 -1029 0
-192 -1016 -1027 -1030 0
-192 -1016 -1025 -1032 0
-192 -1016 -1023 -1034 0
-192 -1016 -1022 0
192 1022 1034 0
192 1023 1032 0
192 1025 1030 0
192 1027 1029 0
192 1016 1034 0
192 1016 1022 1032 0
192 1016 1023 1030 0
192 1016 1025 1029 0
192 1016 1027 0
192 1017 1032 0
192 1017 1022 1030 0
192 1017 1023 1029 0
192 1017 1025 0
192 1017 1027 0
c ((1<=(aux300 + aux302 + aux303))=tv=SATLiteral(193))
-193 -1045 -1051 -1058 0
193 1058 0
193 1051 0
193 1052 0
193 1054 0
193 1056 0
193 1045 0
193 1045 1051 0
193 1045 1052 0
193 1045 1054 0
193 1045 1056 0
193 1046 0
193 1046 1051 0
193 1046 1052 0
193 1046 1054 0
193 1046 1056 0
c ((7<=(aux307 + aux309 + aux310))=tv=SATLiteral(194))
-194 -1087 0
-194 -1085 -1088 0
-194 -1083 -1090 0
-194 -1081 -1092 0
-194 -1080 0
-194 -1075 -1088 0
-194 -1075 -1085 -1090 0
-194 -1075 -1083 -1092 0
-194 -1075 -1081 0
-194 -1075 -1080 0
-194 -1074 -1090 0
-194 -1074 -1085 -1092 0
-194 -1074 -1083 0
-194 -1074 -1081 0
-194 -1074 -1080 0
194 1083 1092 0
194 1085 1090 0
194 1074 1081 1092 0
194 1074 1083 1090 0
194 1074 1085 1088 0
194 1075 1080 1092 0
194 1075 1081 1090 0
194 1075 1083 1088 0
194 1075 1085 1087 0
c ((7<=(aux314 + aux316 + aux317))=tv=SATLiteral(195))
-195 -1116 0
-195 -1114 -1117 0
-195 -1112 -1119 0
-195 -1110 -1121 0
-195 -1109 0
-195 -1104 -1117 0
-195 -1104 -1114 -1119 0
-195 -1104 -1112 -1121 0
-195 -1104 -1110 0
-195 -1104 -1109 0
-195 -1103 -1119 0
-195 -1103 -1114 -1121 0
-195 -1103 -1112 0
-195 -1103 -1110 0
-195 -1103 -1109 0
195 1112 1121 0
195 1114 1119 0
195 1103 1110 1121 0
195 1103 1112 1119 0
195 1103 1114 1117 0
195 1104 1109 1121 0
195 1104 1110 1119 0
195 1104 1112 1117 0
195 1104 1114 1116 0
c ((4<=(aux321 + aux323 + aux324))=tv=SATLiteral(196))
-196 -1139 -1145 0
-196 -1138 -1146 0
-196 -1133 -1141 -1145 0
-196 -1133 -1139 -1146 0
-196 -1133 -1138 -1148 0
-196 -1132 -1143 -1145 0
-196 -1132 -1141 -1146 0
-196 -1132 -1139 -1148 0
-196 -1132 -1138 -1150 0
196 1150 0
196 1138 1148 0
196 1139 1146 0
196 1141 1145 0
196 1143 0
196 1132 1148 0
196 1132 1138 1146 0
196 1132 1139 1145 0
196 1132 1141 0
196 1132 1143 0
196 1133 1146 0
196 1133 1138 1145 0
196 1133 1139 0
196 1133 1141 0
196 1133 1143 0
c ((8<=(aux328 + aux330 + aux331))=tv=SATLiteral(197))
-197 -1175 0
-197 -1172 -1177 0
-197 -1170 -1179 0
-197 -1168 0
-197 -1167 0
-197 -1162 -1177 0
-197 -1162 -1172 -1179 0
-197 -1162 -1170 0
-197 -1162 -1168 0
-197 -1162 -1167 0
-197 -1161 -1179 0
-197 -1161 -1172 0
-197 -1161 -1170 0
-197 -1161 -1168 0
-197 -1161 -1167 0
197 1172 1179 0
197 1161 1170 1179 0
197 1161 1172 1177 0
197 1162 1168 1179 0
197 1162 1170 1177 0
197 1162 1172 1175 0
c ((10<=(aux335 + aux337 + aux338))=tv=SATLiteral(198))
-198 -1208 0
-198 -1201 0
-198 -1199 0
-198 -1197 0
-198 -1196 0
-198 -1191 0
-198 -1191 -1201 0
-198 -1191 -1199 0
-198 -1191 -1197 0
-198 -1191 -1196 0
-198 -1190 0
-198 -1190 -1201 0
-198 -1190 -1199 0
-198 -1190 -1197 0
-198 -1190 -1196 0
198 1191 1201 1208 0
c ((4<=(aux342 + aux344 + aux345))=tv=SATLiteral(199))
-199 -1226 -1232 0
-199 -1225 -1233 0
-199 -1220 -1228 -1232 0
-199 -1220 -1226 -1233 0
-199 -1220 -1225 -1235 0
-199 -1219 -1230 -1232 0
-199 -1219 -1228 -1233 0
-199 -1219 -1226 -1235 0
-199 -1219 -1225 -1237 0
199 1237 0
199 1225 1235 0
199 1226 1233 0
199 1228 1232 0
199 1230 0
199 1219 1235 0
199 1219 1225 1233 0
199 1219 1226 1232 0
199 1219 1228 0
199 1219 1230 0
199 1220 1233 0
199 1220 1225 1232 0
199 1220 1226 0
199 1220 1228 0
199 1220 1230 0
c ((5<=(aux349 + aux351 + aux352))=tv=SATLiteral(200))
-200 -1257 -1261 0
-200 -1255 -1262 0
-200 -1254 -1264 0
-200 -1249 -1259 -1261 0
-200 -1249 -1257 -1262 0
-200 -1249 -1255 -1264 0
-200 -1249 -1254 -1266 0
-200 -1248 -1261 0
-200 -1248 -1259 -1262 0
-200 -1248 -1257 -1264 0
-200 -1248 -1255 -1266 0
-200 -1248 -1254 0
200 1254 1266 0
200 1255 1264 0
200 1257 1262 0
200 1259 1261 0
200 1248 1266 0
200 1248 1254 1264 0
200 1248 1255 1262 0
200 1248 1257 1261 0
200 1248 1259 0
200 1249 1264 0
200 1249 1254 1262 0
200 1249 1255 1261 0
200 1249 1257 0
200 1249 1259 0
c ((4<=(aux356 + aux358 + aux359))=tv=SATLiteral(201))
-201 -1284 -1290 0
-201 -1283 -1291 0
-201 -1278 -1286 -1290 0
-201 -1278 -1284 -1291 0
-201 -1278 -1283 -1293 0
-201 -1277 -1288 -1290 0
-201 -1277 -1286 -1291 0
-201 -1277 -1284 -1293 0
-201 -1277 -1283 -1295 0
201 1295 0
201 1283 1293 0
201 1284 1291 0
201 1286 1290 0
201 1288 0
201 1277 1293 0
201 1277 1283 1291 0
201 1277 1284 1290 0
201 1277 1286 0
201 1277 1288 0
201 1278 1291 0
201 1278 1283 1290 0
201 1278 1284 0
201 1278 1286 0
201 1278 1288 0
c ((5<=(aux363 + aux365 + aux366))=tv=SATLiteral(202))
-202 -1315 -1319 0
-202 -1313 -1320 0
-202 -1312 -1322 0
-202 -1307 -1317 -1319 0
-202 -1307 -1315 -1320 0
-202 -1307 -1313 -1322 0
-202 -1307 -1312 -1324 0
-202 -1306 -1319 0
-202 -1306 -1317 -1320 0
-202 -1306 -1315 -1322 0
-202 -1306 -1313 -1324 0
-202 -1306 -1312 0
202 1312 1324 0
202 1313 1322 0
202 1315 1320 0
202 1317 1319 0
202 1306 1324 0
202 1306 1312 1322 0
202 1306 1313 1320 0
202 1306 1315 1319 0
202 1306 1317 0
202 1307 1322 0
202 1307 1312 1320 0
202 1307 1313 1319 0
202 1307 1315 0
202 1307 1317 0
c ((1<=(aux370 + aux372 + aux373))=tv=SATLiteral(203))
-203 -1335 -1341 -1348 0
203 1348 0
203 1341 0
203 1342 0
203 1344 0
203 1346 0
203 1335 0
203 1335 1341 0
203 1335 1342 0
203 1335 1344 0
203 1335 1346 0
203 1336 0
203 1336 1341 0
203 1336 1342 0
203 1336 1344 0
203 1336 1346 0
c ((7<=(aux377 + aux379 + aux380))=tv=SATLiteral(204))
-204 -1377 0
-204 -1375 -1378 0
-204 -1373 -1380 0
-204 -1371 -1382 0
-204 -1370 0
-204 -1365 -1378 0
-204 -1365 -1375 -1380 0
-204 -1365 -1373 -1382 0
-204 -1365 -1371 0
-204 -1365 -1370 0
-204 -1364 -1380 0
-204 -1364 -1375 -1382 0
-204 -1364 -1373 0
-204 -1364 -1371 0
-204 -1364 -1370 0
204 1373 1382 0
204 1375 1380 0
204 1364 1371 1382 0
204 1364 1373 1380 0
204 1364 1375 1378 0
204 1365 1370 1382 0
204 1365 1371 1380 0
204 1365 1373 1378 0
204 1365 1375 1377 0
c ((7<=(aux384 + aux386 + aux387))=tv=SATLiteral(205))
-205 -1406 0
-205 -1404 -1407 0
-205 -1402 -1409 0
-205 -1400 -1411 0
-205 -1399 0
-205 -1394 -1407 0
-205 -1394 -1404 -1409 0
-205 -1394 -1402 -1411 0
-205 -1394 -1400 0
-205 -1394 -1399 0
-205 -1393 -1409 0
-205 -1393 -1404 -1411 0
-205 -1393 -1402 0
-205 -1393 -1400 0
-205 -1393 -1399 0
205 1402 1411 0
205 1404 1409 0
205 1393 1400 1411 0
205 1393 1402 1409 0
205 1393 1404 1407 0
205 1394 1399 1411 0
205 1394 1400 1409 0
205 1394 1402 1407 0
205 1394 1404 1406 0
c ((4<=(aux391 + aux393 + aux394))=tv=SATLiteral(206))
-206 -1429 -1435 0
-206 -1428 -1436 0
-206 -1423 -1431 -1435 0
-206 -1423 -1429 -1436 0
-206 -1423 -1428 -1438 0
-206 -1422 -1433 -1435 0
-206 -1422 -1431 -1436 0
-206 -1422 -1429 -1438 0
-206 -1422 -1428 -1440 0
206 1440 0
206 1428 1438 0
206 1429 1436 0
206 1431 1435 0
206 1433 0
206 1422 1438 0
206 1422 1428 1436 0
206 1422 1429 1435 0
206 1422 1431 0
206 1422 1433 0
206 1423 1436 0
206 1423 1428 1435 0
206 1423 1429 0
206 1423 1431 0
206 1423 1433 0
c ((SATLiteral(18) -> SATLiteral(28))=tv=SATLiteral(207))
-207 -18 28 0
18 207 0
-28 207 0
c ((SATLiteral(57) -> SATLiteral(47))=tv=SATLiteral(208))
-208 -57 47 0
57 208 0
-47 208 0
c ((SATLiteral(48) -> SATLiteral(58))=tv=SATLiteral(209))
-209 -48 58 0
48 209 0
-58 209 0
c ((SATLiteral(49) -> SATLiteral(59))=tv=SATLiteral(210))
-210 -49 59 0
49 210 0
-59 210 0
c ((SATLiteral(50) -> SATLiteral(60))=tv=SATLiteral(211))
-211 -50 60 0
50 211 0
-60 211 0
c ((SATLiteral(12) -> SATLiteral(2))=tv=SATLiteral(212))
-212 -12 2 0
12 212 0
-2 212 0
c ((SATLiteral(22) -> SATLiteral(12))=tv=SATLiteral(213))
-213 -22 12 0
22 213 0
-12 213 0
c ((SATLiteral(32) -> SATLiteral(22))=tv=SATLiteral(214))
-214 -32 22 0
32 214 0
-22 214 0
c ((SATLiteral(13) -> SATLiteral(3))=tv=SATLiteral(215))
-215 -13 3 0
13 215 0
-3 215 0
c ((SATLiteral(23) -> SATLiteral(13))=tv=SATLiteral(216))
-216 -23 13 0
23 216 0
-13 216 0
c ((SATLiteral(33) -> SATLiteral(23))=tv=SATLiteral(217))
-217 -33 23 0
33 217 0
-23 217 0
c ((SATLiteral(5) -> SATLiteral(4))=tv=SATLiteral(218))
-218 -5 4 0
5 218 0
-4 218 0
c ((SATLiteral(6) -> SATLiteral(5))=tv=SATLiteral(219))
-219 -6 5 0
6 219 0
-5 219 0
c ((SATLiteral(7) -> SATLiteral(6))=tv=SATLiteral(220))
-220 -7 6 0
7 220 0
-6 220 0
c ((SATLiteral(8) -> SATLiteral(7))=tv=SATLiteral(221))
-221 -8 7 0
8 221 0
-7 221 0
c ((SATLiteral(10) -> SATLiteral(9))=tv=SATLiteral(222))
-222 -10 9 0
10 222 0
-9 222 0
c ((SATLiteral(11) -> SATLiteral(10))=tv=SATLiteral(223))
-223 -11 10 0
11 223 0
-10 223 0
c ((SATLiteral(15) -> SATLiteral(16))=tv=SATLiteral(224))
-224 -15 16 0
15 224 0
-16 224 0
c ((SATLiteral(16) -> SATLiteral(17))=tv=SATLiteral(225))
-225 -16 17 0
16 225 0
-17 225 0
c ((SATLiteral(19) -> SATLiteral(20))=tv=SATLiteral(226))
-226 -19 20 0
19 226 0
-20 226 0
c ((SATLiteral(20) -> SATLiteral(21))=tv=SATLiteral(227))
-227 -20 21 0
20 227 0
-21 227 0
c ((SATLiteral(26) -> SATLiteral(25))=tv=SATLiteral(228))
-228 -26 25 0
26 228 0
-25 228 0
c ((SATLiteral(27) -> SATLiteral(26))=tv=SATLiteral(229))
-229 -27 26 0
27 229 0
-26 229 0
c ((SATLiteral(30) -> SATLiteral(29))=tv=SATLiteral(230))
-230 -30 29 0
30 230 0
-29 230 0
c ((SATLiteral(31) -> SATLiteral(30))=tv=SATLiteral(231))
-231 -31 30 0
31 231 0
-30 231 0
c ((SATLiteral(14) -> SATLiteral(24))=tv=SATLiteral(232))
-232 -14 24 0
14 232 0
-24 232 0
c ((SATLiteral(24) -> SATLiteral(34))=tv=SATLiteral(233))
-233 -24 34 0
24 233 0
-34 233 0
c ((SATLiteral(35) -> SATLiteral(36))=tv=SATLiteral(234))
-234 -35 36 0
35 234 0
-36 234 0
c ((SATLiteral(36) -> SATLiteral(37))=tv=SATLiteral(235))
-235 -36 37 0
36 235 0
-37 235 0
c ((SATLiteral(37) -> SATLiteral(38))=tv=SATLiteral(236))
-236 -37 38 0
37 236 0
-38 236 0
c ((SATLiteral(38) -> SATLiteral(39))=tv=SATLiteral(237))
-237 -38 39 0
38 237 0
-39 237 0
c ((SATLiteral(39) -> SATLiteral(40))=tv=SATLiteral(238))
-238 -39 40 0
39 238 0
-40 238 0
c ((SATLiteral(40) -> SATLiteral(41))=tv=SATLiteral(239))
-239 -40 41 0
40 239 0
-41 239 0
c ((SATLiteral(43) -> SATLiteral(42))=tv=SATLiteral(240))
-240 -43 42 0
43 240 0
-42 240 0
c ((SATLiteral(44) -> SATLiteral(43))=tv=SATLiteral(241))
-241 -44 43 0
44 241 0
-43 241 0
c ((SATLiteral(45) -> SATLiteral(44))=tv=SATLiteral(242))
-242 -45 44 0
45 242 0
-44 242 0
c ((SATLiteral(46) -> SATLiteral(45))=tv=SATLiteral(243))
-243 -46 45 0
46 243 0
-45 243 0
c ((SATLiteral(54) -> SATLiteral(53))=tv=SATLiteral(244))
-244 -54 53 0
54 244 0
-53 244 0
c ((SATLiteral(55) -> SATLiteral(54))=tv=SATLiteral(245))
-245 -55 54 0
55 245 0
-54 245 0
c ((SATLiteral(56) -> SATLiteral(55))=tv=SATLiteral(246))
-246 -56 55 0
56 246 0
-55 246 0
c ((SATLiteral(73) -> SATLiteral(63))=tv=SATLiteral(247))
-247 -73 63 0
73 247 0
-63 247 0
c ((SATLiteral(83) -> SATLiteral(73))=tv=SATLiteral(248))
-248 -83 73 0
83 248 0
-73 248 0
c ((SATLiteral(93) -> SATLiteral(83))=tv=SATLiteral(249))
-249 -93 83 0
93 249 0
-83 249 0
c ((SATLiteral(65) -> SATLiteral(66))=tv=SATLiteral(250))
-250 -65 66 0
65 250 0
-66 250 0
c ((SATLiteral(66) -> SATLiteral(67))=tv=SATLiteral(251))
-251 -66 67 0
66 251 0
-67 251 0
c ((SATLiteral(67) -> SATLiteral(68))=tv=SATLiteral(252))
-252 -67 68 0
67 252 0
-68 252 0
c ((SATLiteral(68) -> SATLiteral(69))=tv=SATLiteral(253))
-253 -68 69 0
68 253 0
-69 253 0
c ((SATLiteral(69) -> SATLiteral(70))=tv=SATLiteral(254))
-254 -69 70 0
69 254 0
-70 254 0
c ((SATLiteral(75) -> SATLiteral(76))=tv=SATLiteral(255))
-255 -75 76 0
75 255 0
-76 255 0
c ((SATLiteral(76) -> SATLiteral(77))=tv=SATLiteral(256))
-256 -76 77 0
76 256 0
-77 256 0
c ((SATLiteral(77) -> SATLiteral(78))=tv=SATLiteral(257))
-257 -77 78 0
77 257 0
-78 257 0
c ((SATLiteral(78) -> SATLiteral(79))=tv=SATLiteral(258))
-258 -78 79 0
78 258 0
-79 258 0
c ((SATLiteral(79) -> SATLiteral(80))=tv=SATLiteral(259))
-259 -79 80 0
79 259 0
-80 259 0
c ((SATLiteral(85) -> SATLiteral(86))=tv=SATLiteral(260))
-260 -85 86 0
85 260 0
-86 260 0
c ((SATLiteral(86) -> SATLiteral(87))=tv=SATLiteral(261))
-261 -86 87 0
86 261 0
-87 261 0
c ((SATLiteral(87) -> SATLiteral(88))=tv=SATLiteral(262))
-262 -87 88 0
87 262 0
-88 262 0
c ((SATLiteral(88) -> SATLiteral(89))=tv=SATLiteral(263))
-263 -88 89 0
88 263 0
-89 263 0
c ((SATLiteral(89) -> SATLiteral(90))=tv=SATLiteral(264))
-264 -89 90 0
89 264 0
-90 264 0
c ((SATLiteral(52) -> SATLiteral(62))=tv=SATLiteral(265))
-265 -52 62 0
52 265 0
-62 265 0
c ((SATLiteral(62) -> SATLiteral(72))=tv=SATLiteral(266))
-266 -62 72 0
62 266 0
-72 266 0
c ((SATLiteral(72) -> SATLiteral(82))=tv=SATLiteral(267))
-267 -72 82 0
72 267 0
-82 267 0
c ((SATLiteral(82) -> SATLiteral(92))=tv=SATLiteral(268))
-268 -82 92 0
82 268 0
-92 268 0
c ((SATLiteral(64) -> SATLiteral(74))=tv=SATLiteral(269))
-269 -64 74 0
64 269 0
-74 269 0
c ((SATLiteral(74) -> SATLiteral(84))=tv=SATLiteral(270))
-270 -74 84 0
74 270 0
-84 270 0
c ((SATLiteral(84) -> SATLiteral(94))=tv=SATLiteral(271))
-271 -84 94 0
84 271 0
-94 271 0
c ((SATLiteral(95) -> SATLiteral(96))=tv=SATLiteral(272))
-272 -95 96 0
95 272 0
-96 272 0
c ((SATLiteral(96) -> SATLiteral(97))=tv=SATLiteral(273))
-273 -96 97 0
96 273 0
-97 273 0
c ((SATLiteral(97) -> SATLiteral(98))=tv=SATLiteral(274))
-274 -97 98 0
97 274 0
-98 274 0
c ((SATLiteral(98) -> SATLiteral(99))=tv=SATLiteral(275))
-275 -98 99 0
98 275 0
-99 275 0
c ((SATLiteral(99) -> SATLiteral(100))=tv=SATLiteral(276))
-276 -99 100 0
99 276 0
-100 276 0
c ((SATLiteral(51) -> SATLiteral(61))=tv=SATLiteral(277))
-277 -51 61 0
51 277 0
-61 277 0
c ((SATLiteral(61) -> SATLiteral(71))=tv=SATLiteral(278))
-278 -61 71 0
61 278 0
-71 278 0
c ((SATLiteral(71) -> SATLiteral(81))=tv=SATLiteral(279))
-279 -71 81 0
71 279 0
-81 279 0
c ((SATLiteral(81) -> SATLiteral(91))=tv=SATLiteral(280))
-280 -81 91 0
81 280 0
-91 280 0
c ((SATLiteral(91) -> SATLiteral(101))=tv=SATLiteral(281))
-281 -91 101 0
91 281 0
-101 281 0
c (SATLiteral(127) -> SATLiteral(167))
-127 167 0
c (SATLiteral(128) -> SATLiteral(168))
-128 168 0
c (SATLiteral(129) -> SATLiteral(169))
-129 169 0
c (SATLiteral(130) -> SATLiteral(170))
-130 170 0
c (SATLiteral(131) -> SATLiteral(171))
-131 171 0
c (SATLiteral(132) -> SATLiteral(172))
-132 172 0
c (SATLiteral(133) -> SATLiteral(173))
-133 173 0
c (SATLiteral(134) -> SATLiteral(174))
-134 174 0
c (SATLiteral(135) -> SATLiteral(175))
-135 175 0
c (SATLiteral(136) -> SATLiteral(176))
-136 176 0
c (SATLiteral(137) -> SATLiteral(177))
-137 177 0
c (SATLiteral(138) -> SATLiteral(178))
-138 178 0
c (SATLiteral(139) -> SATLiteral(179))
-139 179 0
c (SATLiteral(140) -> SATLiteral(180))
-140 180 0
c (SATLiteral(141) -> SATLiteral(181))
-141 181 0
c (SATLiteral(142) -> SATLiteral(182))
-142 182 0
c (SATLiteral(143) -> SATLiteral(183))
-143 183 0
c (SATLiteral(144) -> SATLiteral(184))
-144 184 0
c (SATLiteral(145) -> SATLiteral(185))
-145 185 0
c (SATLiteral(146) -> SATLiteral(186))
-146 186 0
c (SATLiteral(147) -> SATLiteral(187))
-147 187 0
c (SATLiteral(148) -> SATLiteral(188))
-148 188 0
c (SATLiteral(149) -> SATLiteral(189))
-149 189 0
c (SATLiteral(150) -> SATLiteral(190))
-150 190 0
c (SATLiteral(151) -> SATLiteral(191))
-151 191 0
c (SATLiteral(152) -> SATLiteral(192))
-152 192 0
c (SATLiteral(153) -> SATLiteral(193))
-153 193 0
c (SATLiteral(154) -> SATLiteral(194))
-154 194 0
c (SATLiteral(155) -> SATLiteral(195))
-155 195 0
c (SATLiteral(156) -> SATLiteral(196))
-156 196 0
c (SATLiteral(157) -> SATLiteral(197))
-157 197 0
c (SATLiteral(158) -> SATLiteral(198))
-158 198 0
c (SATLiteral(159) -> SATLiteral(199))
-159 199 0
c (SATLiteral(160) -> SATLiteral(200))
-160 200 0
c (SATLiteral(161) -> SATLiteral(201))
-161 201 0
c (SATLiteral(162) -> SATLiteral(202))
-162 202 0
c (SATLiteral(163) -> SATLiteral(203))
-163 203 0
c (SATLiteral(164) -> SATLiteral(204))
-164 204 0
c (SATLiteral(165) -> SATLiteral(205))
-165 205 0
c (SATLiteral(166) -> SATLiteral(206))
-166 206 0
c (SATLiteral(207) \/ SATLiteral(-109))
207 -109 0
c (SATLiteral(208) \/ SATLiteral(-114))
208 -114 0
c (SATLiteral(-116) \/ SATLiteral(209))
-116 209 0
c (SATLiteral(-117) \/ SATLiteral(210))
-117 210 0
c (SATLiteral(-118) \/ SATLiteral(211))
-118 211 0
c (SATLiteral(212) \/ SATLiteral(-102))
212 -102 0
c (SATLiteral(213) \/ SATLiteral(-102))
213 -102 0
c (SATLiteral(-102) \/ SATLiteral(214))
-102 214 0
c (SATLiteral(215) \/ SATLiteral(-103))
215 -103 0
c (SATLiteral(216) \/ SATLiteral(-103))
216 -103 0
c (SATLiteral(-103) \/ SATLiteral(217))
-103 217 0
c (SATLiteral(218) \/ SATLiteral(-104))
218 -104 0
c (SATLiteral(219) \/ SATLiteral(-104))
219 -104 0
c (SATLiteral(220) \/ SATLiteral(-104))
220 -104 0
c (SATLiteral(221) \/ SATLiteral(-104))
221 -104 0
c (SATLiteral(222) \/ SATLiteral(-105))
222 -105 0
c (SATLiteral(223) \/ SATLiteral(-105))
223 -105 0
c (SATLiteral(-106) \/ SATLiteral(224))
-106 224 0
c (SATLiteral(-106) \/ SATLiteral(225))
-106 225 0
c (SATLiteral(-107) \/ SATLiteral(226))
-107 226 0
c (SATLiteral(-107) \/ SATLiteral(227))
-107 227 0
c (SATLiteral(228) \/ SATLiteral(-108))
228 -108 0
c (SATLiteral(229) \/ SATLiteral(-108))
229 -108 0
c (SATLiteral(230) \/ SATLiteral(-110))
230 -110 0
c (SATLiteral(231) \/ SATLiteral(-110))
231 -110 0
c (SATLiteral(232) \/ SATLiteral(-111))
232 -111 0
c (SATLiteral(233) \/ SATLiteral(-111))
233 -111 0
c (SATLiteral(234) \/ SATLiteral(-112))
234 -112 0
c (SATLiteral(235) \/ SATLiteral(-112))
235 -112 0
c (SATLiteral(236) \/ SATLiteral(-112))
236 -112 0
c (SATLiteral(237) \/ SATLiteral(-112))
237 -112 0
c (SATLiteral(238) \/ SATLiteral(-112))
238 -112 0
c (SATLiteral(239) \/ SATLiteral(-112))
239 -112 0
c (SATLiteral(240) \/ SATLiteral(-113))
240 -113 0
c (SATLiteral(241) \/ SATLiteral(-113))
241 -113 0
c (SATLiteral(242) \/ SATLiteral(-113))
242 -113 0
c (SATLiteral(243) \/ SATLiteral(-113))
243 -113 0
c (SATLiteral(244) \/ SATLiteral(-115))
244 -115 0
c (SATLiteral(245) \/ SATLiteral(-115))
245 -115 0
c (SATLiteral(246) \/ SATLiteral(-115))
246 -115 0
c (SATLiteral(247) \/ SATLiteral(-119))
247 -119 0
c (SATLiteral(248) \/ SATLiteral(-119))
248 -119 0
c (SATLiteral(249) \/ SATLiteral(-119))
249 -119 0
c (SATLiteral(-120) \/ SATLiteral(250))
-120 250 0
c (SATLiteral(-120) \/ SATLiteral(251))
-120 251 0
c (SATLiteral(-120) \/ SATLiteral(252))
-120 252 0
c (SATLiteral(-120) \/ SATLiteral(253))
-120 253 0
c (SATLiteral(-120) \/ SATLiteral(254))
-120 254 0
c (SATLiteral(255) \/ SATLiteral(-121))
255 -121 0
c (SATLiteral(256) \/ SATLiteral(-121))
256 -121 0
c (SATLiteral(257) \/ SATLiteral(-121))
257 -121 0
c (SATLiteral(258) \/ SATLiteral(-121))
258 -121 0
c (SATLiteral(259) \/ SATLiteral(-121))
259 -121 0
c (SATLiteral(260) \/ SATLiteral(-122))
260 -122 0
c (SATLiteral(261) \/ SATLiteral(-122))
261 -122 0
c (SATLiteral(262) \/ SATLiteral(-122))
262 -122 0
c (SATLiteral(263) \/ SATLiteral(-122))
263 -122 0
c (SATLiteral(264) \/ SATLiteral(-122))
264 -122 0
c (SATLiteral(265) \/ SATLiteral(-123))
265 -123 0
c (SATLiteral(266) \/ SATLiteral(-123))
266 -123 0
c (SATLiteral(267) \/ SATLiteral(-123))
267 -123 0
c (SATLiteral(268) \/ SATLiteral(-123))
268 -123 0
c (SATLiteral(269) \/ SATLiteral(-124))
269 -124 0
c (SATLiteral(270) \/ SATLiteral(-124))
270 -124 0
c (SATLiteral(271) \/ SATLiteral(-124))
271 -124 0
c (SATLiteral(-125) \/ SATLiteral(272))
-125 272 0
c (SATLiteral(-125) \/ SATLiteral(273))
-125 273 0
c (SATLiteral(-125) \/ SATLiteral(274))
-125 274 0
c (SATLiteral(-125) \/ SATLiteral(275))
-125 275 0
c (SATLiteral(-125) \/ SATLiteral(276))
-125 276 0
c (SATLiteral(-126) \/ SATLiteral(277))
-126 277 0
c (SATLiteral(278) \/ SATLiteral(-126))
278 -126 0
c (SATLiteral(279) \/ SATLiteral(-126))
279 -126 0
c (SATLiteral(280) \/ SATLiteral(-126))
280 -126 0
c (SATLiteral(281) \/ SATLiteral(-126))
281 -126 0
c (( - aux115 + SATLiteral(2) + SATLiteral(11))<=0)
-11 -282 0
-2 -282 0
-2 -11 -283 0
c (0<=( - aux115 + SATLiteral(2) + SATLiteral(11)))
11 283 0
2 283 0
2 11 282 0
c (( - aux116 + SATLiteral(3) + SATLiteral(10))<=0)
-10 -285 0
-3 -285 0
-3 -10 -286 0
c (0<=( - aux116 + SATLiteral(3) + SATLiteral(10)))
10 286 0
3 286 0
3 10 285 0
c (( - aux117 + SATLiteral(5) + SATLiteral(9))<=0)
-9 -288 0
-5 -288 0
-5 -9 -289 0
c (0<=( - aux117 + SATLiteral(5) + SATLiteral(9)))
9 289 0
5 289 0
5 9 288 0
c (( - aux118 + SATLiteral(6) + SATLiteral(8))<=0)
-8 -291 0
-6 -291 0
-6 -8 -292 0
c (0<=( - aux118 + SATLiteral(6) + SATLiteral(8)))
8 292 0
6 292 0
6 8 291 0
c (( - aux119 + SATLiteral(4) + SATLiteral(7))<=0)
-7 -294 0
-4 -294 0
-4 -7 -295 0
c (0<=( - aux119 + SATLiteral(4) + SATLiteral(7)))
7 295 0
4 295 0
4 7 294 0
c ((aux116 + aux119 - aux120)<=0)
294 -297 0
295 -298 0
285 -297 0
285 294 -298 0
285 295 -300 0
286 -298 0
286 294 -300 0
286 295 -302 0
c (0<=(aux116 + aux119 - aux120))
-295 302 0
-294 300 0
-286 302 0
-286 -295 300 0
-286 -294 298 0
-285 300 0
-285 -295 298 0
-285 -294 297 0
c ((aux115 + aux117 - aux121)<=0)
288 -304 0
289 -305 0
282 -304 0
282 288 -305 0
282 289 -307 0
283 -305 0
283 288 -307 0
283 289 -309 0
c (0<=(aux115 + aux117 - aux121))
-289 309 0
-288 307 0
-283 309 0
-283 -289 307 0
-283 -288 305 0
-282 307 0
-282 -289 305 0
-282 -288 304 0
c (( - aux122 + SATLiteral(12) + SATLiteral(21))<=0)
-21 -311 0
-12 -311 0
-12 -21 -312 0
c (0<=( - aux122 + SATLiteral(12) + SATLiteral(21)))
21 312 0
12 312 0
12 21 311 0
c (( - aux123 + SATLiteral(13) + SATLiteral(20))<=0)
-20 -314 0
-13 -314 0
-13 -20 -315 0
c (0<=( - aux123 + SATLiteral(13) + SATLiteral(20)))
20 315 0
13 315 0
13 20 314 0
c (( - aux124 + SATLiteral(15) + SATLiteral(19))<=0)
-19 -317 0
-15 -317 0
-15 -19 -318 0
c (0<=( - aux124 + SATLiteral(15) + SATLiteral(19)))
19 318 0
15 318 0
15 19 317 0
c (( - aux125 + SATLiteral(16) + SATLiteral(18))<=0)
-18 -320 0
-16 -320 0
-16 -18 -321 0
c (0<=( - aux125 + SATLiteral(16) + SATLiteral(18)))
18 321 0
16 321 0
16 18 320 0
c (( - aux126 + SATLiteral(14) + SATLiteral(17))<=0)
-17 -323 0
-14 -323 0
-14 -17 -324 0
c (0<=( - aux126 + SATLiteral(14) + SATLiteral(17)))
17 324 0
14 324 0
14 17 323 0
c ((aux123 + aux126 - aux127)<=0)
323 -326 0
324 -327 0
314 -326 0
314 323 -327 0
314 324 -329 0
315 -327 0
315 323 -329 0
315 324 -331 0
c (0<=(aux123 + aux126 - aux127))
-324 331 0
-323 329 0
-315 331 0
-315 -324 329 0
-315 -323 327 0
-314 329 0
-314 -324 327 0
-314 -323 326 0
c ((aux122 + aux124 - aux128)<=0)
317 -333 0
318 -334 0
311 -333 0
311 317 -334 0
311 318 -336 0
312 -334 0
312 317 -336 0
312 318 -338 0
c (0<=(aux122 + aux124 - aux128))
-318 338 0
-317 336 0
-312 338 0
-312 -318 336 0
-312 -317 334 0
-311 336 0
-311 -318 334 0
-311 -317 333 0
c ((SATLiteral(22) + SATLiteral(31) - aux129)<=0)
-31 -340 0
-22 -340 0
-22 -31 -341 0
c (0<=(SATLiteral(22) + SATLiteral(31) - aux129))
31 341 0
22 341 0
22 31 340 0
c ((SATLiteral(23) + SATLiteral(30) - aux130)<=0)
-30 -343 0
-23 -343 0
-23 -30 -344 0
c (0<=(SATLiteral(23) + SATLiteral(30) - aux130))
30 344 0
23 344 0
23 30 343 0
c ((SATLiteral(25) + SATLiteral(29) - aux131)<=0)
-29 -346 0
-25 -346 0
-25 -29 -347 0
c (0<=(SATLiteral(25) + SATLiteral(29) - aux131))
29 347 0
25 347 0
25 29 346 0
c ((SATLiteral(26) + SATLiteral(28) - aux132)<=0)
-28 -349 0
-26 -349 0
-26 -28 -350 0
c (0<=(SATLiteral(26) + SATLiteral(28) - aux132))
28 350 0
26 350 0
26 28 349 0
c ((SATLiteral(24) + SATLiteral(27) - aux133)<=0)
-27 -352 0
-24 -352 0
-24 -27 -353 0
c (0<=(SATLiteral(24) + SATLiteral(27) - aux133))
27 353 0
24 353 0
24 27 352 0
c ((aux130 + aux133 - aux134)<=0)
352 -355 0
353 -356 0
343 -355 0
343 352 -356 0
343 353 -358 0
344 -356 0
344 352 -358 0
344 353 -360 0
c (0<=(aux130 + aux133 - aux134))
-353 360 0
-352 358 0
-344 360 0
-344 -353 358 0
-344 -352 356 0
-343 358 0
-343 -353 356 0
-343 -352 355 0
c ((aux129 + aux131 - aux135)<=0)
346 -362 0
347 -363 0
340 -362 0
340 346 -363 0
340 347 -365 0
341 -363 0
341 346 -365 0
341 347 -367 0
c (0<=(aux129 + aux131 - aux135))
-347 367 0
-346 365 0
-341 367 0
-341 -347 365 0
-341 -346 363 0
-340 365 0
-340 -347 363 0
-340 -346 362 0
c (( - aux136 + SATLiteral(32) + SATLiteral(41))<=0)
-41 -369 0
-32 -369 0
-32 -41 -370 0
c (0<=( - aux136 + SATLiteral(32) + SATLiteral(41)))
41 370 0
32 370 0
32 41 369 0
c (( - aux137 + SATLiteral(33) + SATLiteral(40))<=0)
-40 -372 0
-33 -372 0
-33 -40 -373 0
c (0<=( - aux137 + SATLiteral(33) + SATLiteral(40)))
40 373 0
33 373 0
33 40 372 0
c (( - aux138 + SATLiteral(35) + SATLiteral(39))<=0)
-39 -375 0
-35 -375 0
-35 -39 -376 0
c (0<=( - aux138 + SATLiteral(35) + SATLiteral(39)))
39 376 0
35 376 0
35 39 375 0
c (( - aux139 + SATLiteral(36) + SATLiteral(38))<=0)
-38 -378 0
-36 -378 0
-36 -38 -379 0
c (0<=( - aux139 + SATLiteral(36) + SATLiteral(38)))
38 379 0
36 379 0
36 38 378 0
c (( - aux140 + SATLiteral(34) + SATLiteral(37))<=0)
-37 -381 0
-34 -381 0
-34 -37 -382 0
c (0<=( - aux140 + SATLiteral(34) + SATLiteral(37)))
37 382 0
34 382 0
34 37 381 0
c ((aux137 + aux140 - aux141)<=0)
381 -384 0
382 -385 0
372 -384 0
372 381 -385 0
372 382 -387 0
373 -385 0
373 381 -387 0
373 382 -389 0
c (0<=(aux137 + aux140 - aux141))
-382 389 0
-381 387 0
-373 389 0
-373 -382 387 0
-373 -381 385 0
-372 387 0
-372 -382 385 0
-372 -381 384 0
c ((aux136 + aux138 - aux142)<=0)
375 -391 0
376 -392 0
369 -391 0
369 375 -392 0
369 376 -394 0
370 -392 0
370 375 -394 0
370 376 -396 0
c (0<=(aux136 + aux138 - aux142))
-376 396 0
-375 394 0
-370 396 0
-370 -376 394 0
-370 -375 392 0
-369 394 0
-369 -376 392 0
-369 -375 391 0
c (( - aux143 + SATLiteral(42) + SATLiteral(51))<=0)
-51 -398 0
-42 -398 0
-42 -51 -399 0
c (0<=( - aux143 + SATLiteral(42) + SATLiteral(51)))
51 399 0
42 399 0
42 51 398 0
c (( - aux144 + SATLiteral(43) + SATLiteral(50))<=0)
-50 -401 0
-43 -401 0
-43 -50 -402 0
c (0<=( - aux144 + SATLiteral(43) + SATLiteral(50)))
50 402 0
43 402 0
43 50 401 0
c (( - aux145 + SATLiteral(45) + SATLiteral(49))<=0)
-49 -404 0
-45 -404 0
-45 -49 -405 0
c (0<=( - aux145 + SATLiteral(45) + SATLiteral(49)))
49 405 0
45 405 0
45 49 404 0
c (( - aux146 + SATLiteral(46) + SATLiteral(48))<=0)
-48 -407 0
-46 -407 0
-46 -48 -408 0
c (0<=( - aux146 + SATLiteral(46) + SATLiteral(48)))
48 408 0
46 408 0
46 48 407 0
c (( - aux147 + SATLiteral(44) + SATLiteral(47))<=0)
-47 -410 0
-44 -410 0
-44 -47 -411 0
c (0<=( - aux147 + SATLiteral(44) + SATLiteral(47)))
47 411 0
44 411 0
44 47 410 0
c ((aux144 + aux147 - aux148)<=0)
410 -413 0
411 -414 0
401 -413 0
401 410 -414 0
401 411 -416 0
402 -414 0
402 410 -416 0
402 411 -418 0
c (0<=(aux144 + aux147 - aux148))
-411 418 0
-410 416 0
-402 418 0
-402 -411 416 0
-402 -410 414 0
-401 416 0
-401 -411 414 0
-401 -410 413 0
c ((aux143 + aux145 - aux149)<=0)
404 -420 0
405 -421 0
398 -420 0
398 404 -421 0
398 405 -423 0
399 -421 0
399 404 -423 0
399 405 -425 0
c (0<=(aux143 + aux145 - aux149))
-405 425 0
-404 423 0
-399 425 0
-399 -405 423 0
-399 -404 421 0
-398 423 0
-398 -405 421 0
-398 -404 420 0
c (( - aux150 + SATLiteral(52) + SATLiteral(61))<=0)
-61 -427 0
-52 -427 0
-52 -61 -428 0
c (0<=( - aux150 + SATLiteral(52) + SATLiteral(61)))
61 428 0
52 428 0
52 61 427 0
c (( - aux151 + SATLiteral(53) + SATLiteral(60))<=0)
-60 -430 0
-53 -430 0
-53 -60 -431 0
c (0<=( - aux151 + SATLiteral(53) + SATLiteral(60)))
60 431 0
53 431 0
53 60 430 0
c (( - aux152 + SATLiteral(55) + SATLiteral(59))<=0)
-59 -433 0
-55 -433 0
-55 -59 -434 0
c (0<=( - aux152 + SATLiteral(55) + SATLiteral(59)))
59 434 0
55 434 0
55 59 433 0
c (( - aux153 + SATLiteral(56) + SATLiteral(58))<=0)
-58 -436 0
-56 -436 0
-56 -58 -437 0
c (0<=( - aux153 + SATLiteral(56) + SATLiteral(58)))
58 437 0
56 437 0
56 58 436 0
c (( - aux154 + SATLiteral(54) + SATLiteral(57))<=0)
-57 -439 0
-54 -439 0
-54 -57 -440 0
c (0<=( - aux154 + SATLiteral(54) + SATLiteral(57)))
57 440 0
54 440 0
54 57 439 0
c ((aux151 + aux154 - aux155)<=0)
439 -442 0
440 -443 0
430 -442 0
430 439 -443 0
430 440 -445 0
431 -443 0
431 439 -445 0
431 440 -447 0
c (0<=(aux151 + aux154 - aux155))
-440 447 0
-439 445 0
-431 447 0
-431 -440 445 0
-431 -439 443 0
-430 445 0
-430 -440 443 0
-430 -439 442 0
c ((aux150 + aux152 - aux156)<=0)
433 -449 0
434 -450 0
427 -449 0
427 433 -450 0
427 434 -452 0
428 -450 0
428 433 -452 0
428 434 -454 0
c (0<=(aux150 + aux152 - aux156))
-434 454 0
-433 452 0
-428 454 0
-428 -434 452 0
-428 -433 450 0
-427 452 0
-427 -434 450 0
-427 -433 449 0
c (( - aux157 + SATLiteral(62) + SATLiteral(71))<=0)
-71 -456 0
-62 -456 0
-62 -71 -457 0
c (0<=( - aux157 + SATLiteral(62) + SATLiteral(71)))
71 457 0
62 457 0
62 71 456 0
c (( - aux158 + SATLiteral(63) + SATLiteral(70))<=0)
-70 -459 0
-63 -459 0
-63 -70 -460 0
c (0<=( - aux158 + SATLiteral(63) + SATLiteral(70)))
70 460 0
63 460 0
63 70 459 0
c (( - aux159 + SATLiteral(65) + SATLiteral(69))<=0)
-69 -462 0
-65 -462 0
-65 -69 -463 0
c (0<=( - aux159 + SATLiteral(65) + SATLiteral(69)))
69 463 0
65 463 0
65 69 462 0
c (( - aux160 + SATLiteral(66) + SATLiteral(68))<=0)
-68 -465 0
-66 -465 0
-66 -68 -466 0
c (0<=( - aux160 + SATLiteral(66) + SATLiteral(68)))
68 466 0
66 466 0
66 68 465 0
c (( - aux161 + SATLiteral(64) + SATLiteral(67))<=0)
-67 -468 0
-64 -468 0
-64 -67 -469 0
c (0<=( - aux161 + SATLiteral(64) + SATLiteral(67)))
67 469 0
64 469 0
64 67 468 0
c ((aux158 + aux161 - aux162)<=0)
468 -471 0
469 -472 0
459 -471 0
459 468 -472 0
459 469 -474 0
460 -472 0
460 468 -474 0
460 469 -476 0
c (0<=(aux158 + aux161 - aux162))
-469 476 0
-468 474 0
-460 476 0
-460 -469 474 0
-460 -468 472 0
-459 474 0
-459 -469 472 0
-459 -468 471 0
c ((aux157 + aux159 - aux163)<=0)
462 -478 0
463 -479 0
456 -478 0
456 462 -479 0
456 463 -481 0
457 -479 0
457 462 -481 0
457 463 -483 0
c (0<=(aux157 + aux159 - aux163))
-463 483 0
-462 481 0
-457 483 0
-457 -463 481 0
-457 -462 479 0
-456 481 0
-456 -463 479 0
-456 -462 478 0
c ((SATLiteral(72) + SATLiteral(81) - aux164)<=0)
-81 -485 0
-72 -485 0
-72 -81 -486 0
c (0<=(SATLiteral(72) + SATLiteral(81) - aux164))
81 486 0
72 486 0
72 81 485 0
c ((SATLiteral(73) + SATLiteral(80) - aux165)<=0)
-80 -488 0
-73 -488 0
-73 -80 -489 0
c (0<=(SATLiteral(73) + SATLiteral(80) - aux165))
80 489 0
73 489 0
73 80 488 0
c ((SATLiteral(75) + SATLiteral(79) - aux166)<=0)
-79 -491 0
-75 -491 0
-75 -79 -492 0
c (0<=(SATLiteral(75) + SATLiteral(79) - aux166))
79 492 0
75 492 0
75 79 491 0
c ((SATLiteral(76) + SATLiteral(78) - aux167)<=0)
-78 -494 0
-76 -494 0
-76 -78 -495 0
c (0<=(SATLiteral(76) + SATLiteral(78) - aux167))
78 495 0
76 495 0
76 78 494 0
c ((SATLiteral(74) + SATLiteral(77) - aux168)<=0)
-77 -497 0
-74 -497 0
-74 -77 -498 0
c (0<=(SATLiteral(74) + SATLiteral(77) - aux168))
77 498 0
74 498 0
74 77 497 0
c ((aux165 + aux168 - aux169)<=0)
497 -500 0
498 -501 0
488 -500 0
488 497 -501 0
488 498 -503 0
489 -501 0
489 497 -503 0
489 498 -505 0
c (0<=(aux165 + aux168 - aux169))
-498 505 0
-497 503 0
-489 505 0
-489 -498 503 0
-489 -497 501 0
-488 503 0
-488 -498 501 0
-488 -497 500 0
c ((aux164 + aux166 - aux170)<=0)
491 -507 0
492 -508 0
485 -507 0
485 491 -508 0
485 492 -510 0
486 -508 0
486 491 -510 0
486 492 -512 0
c (0<=(aux164 + aux166 - aux170))
-492 512 0
-491 510 0
-486 512 0
-486 -492 510 0
-486 -491 508 0
-485 510 0
-485 -492 508 0
-485 -491 507 0
c (( - aux171 + SATLiteral(82) + SATLiteral(91))<=0)
-91 -514 0
-82 -514 0
-82 -91 -515 0
c (0<=( - aux171 + SATLiteral(82) + SATLiteral(91)))
91 515 0
82 515 0
82 91 514 0
c (( - aux172 + SATLiteral(83) + SATLiteral(90))<=0)
-90 -517 0
-83 -517 0
-83 -90 -518 0
c (0<=( - aux172 + SATLiteral(83) + SATLiteral(90)))
90 518 0
83 518 0
83 90 517 0
c (( - aux173 + SATLiteral(85) + SATLiteral(89))<=0)
-89 -520 0
-85 -520 0
-85 -89 -521 0
c (0<=( - aux173 + SATLiteral(85) + SATLiteral(89)))
89 521 0
85 521 0
85 89 520 0
c (( - aux174 + SATLiteral(86) + SATLiteral(88))<=0)
-88 -523 0
-86 -523 0
-86 -88 -524 0
c (0<=( - aux174 + SATLiteral(86) + SATLiteral(88)))
88 524 0
86 524 0
86 88 523 0
c (( - aux175 + SATLiteral(84) + SATLiteral(87))<=0)
-87 -526 0
-84 -526 0
-84 -87 -527 0
c (0<=( - aux175 + SATLiteral(84) + SATLiteral(87)))
87 527 0
84 527 0
84 87 526 0
c ((aux172 + aux175 - aux176)<=0)
526 -529 0
527 -530 0
517 -529 0
517 526 -530 0
517 527 -532 0
518 -530 0
518 526 -532 0
518 527 -534 0
c (0<=(aux172 + aux175 - aux176))
-527 534 0
-526 532 0
-518 534 0
-518 -527 532 0
-518 -526 530 0
-517 532 0
-517 -527 530 0
-517 -526 529 0
c ((aux171 + aux173 - aux177)<=0)
520 -536 0
521 -537 0
514 -536 0
514 520 -537 0
514 521 -539 0
515 -537 0
515 520 -539 0
515 521 -541 0
c (0<=(aux171 + aux173 - aux177))
-521 541 0
-520 539 0
-515 541 0
-515 -521 539 0
-515 -520 537 0
-514 539 0
-514 -521 537 0
-514 -520 536 0
c (( - aux178 + SATLiteral(92) + SATLiteral(101))<=0)
-101 -543 0
-92 -543 0
-92 -101 -544 0
c (0<=( - aux178 + SATLiteral(92) + SATLiteral(101)))
101 544 0
92 544 0
92 101 543 0
c (( - aux179 + SATLiteral(93) + SATLiteral(100))<=0)
-100 -546 0
-93 -546 0
-93 -100 -547 0
c (0<=( - aux179 + SATLiteral(93) + SATLiteral(100)))
100 547 0
93 547 0
93 100 546 0
c (( - aux180 + SATLiteral(95) + SATLiteral(99))<=0)
-99 -549 0
-95 -549 0
-95 -99 -550 0
c (0<=( - aux180 + SATLiteral(95) + SATLiteral(99)))
99 550 0
95 550 0
95 99 549 0
c (( - aux181 + SATLiteral(96) + SATLiteral(98))<=0)
-98 -552 0
-96 -552 0
-96 -98 -553 0
c (0<=( - aux181 + SATLiteral(96) + SATLiteral(98)))
98 553 0
96 553 0
96 98 552 0
c (( - aux182 + SATLiteral(94) + SATLiteral(97))<=0)
-97 -555 0
-94 -555 0
-94 -97 -556 0
c (0<=( - aux182 + SATLiteral(94) + SATLiteral(97)))
97 556 0
94 556 0
94 97 555 0
c ((aux179 + aux182 - aux183)<=0)
555 -558 0
556 -559 0
546 -558 0
546 555 -559 0
546 556 -561 0
547 -559 0
547 555 -561 0
547 556 -563 0
c (0<=(aux179 + aux182 - aux183))
-556 563 0
-555 561 0
-547 563 0
-547 -556 561 0
-547 -555 559 0
-546 561 0
-546 -556 559 0
-546 -555 558 0
c ((aux178 + aux180 - aux184)<=0)
549 -565 0
550 -566 0
543 -565 0
543 549 -566 0
543 550 -568 0
544 -566 0
544 549 -568 0
544 550 -570 0
c (0<=(aux178 + aux180 - aux184))
-550 570 0
-549 568 0
-544 570 0
-544 -550 568 0
-544 -549 566 0
-543 568 0
-543 -550 566 0
-543 -549 565 0
c (( - aux185 + SATLiteral(2) + SATLiteral(11))<=0)
-11 -572 0
-2 -572 0
-2 -11 -573 0
c (0<=( - aux185 + SATLiteral(2) + SATLiteral(11)))
11 573 0
2 573 0
2 11 572 0
c (( - aux186 + SATLiteral(3) + SATLiteral(10))<=0)
-10 -575 0
-3 -575 0
-3 -10 -576 0
c (0<=( - aux186 + SATLiteral(3) + SATLiteral(10)))
10 576 0
3 576 0
3 10 575 0
c (( - aux187 + SATLiteral(5) + SATLiteral(9))<=0)
-9 -578 0
-5 -578 0
-5 -9 -579 0
c (0<=( - aux187 + SATLiteral(5) + SATLiteral(9)))
9 579 0
5 579 0
5 9 578 0
c (( - aux188 + SATLiteral(6) + SATLiteral(8))<=0)
-8 -581 0
-6 -581 0
-6 -8 -582 0
c (0<=( - aux188 + SATLiteral(6) + SATLiteral(8)))
8 582 0
6 582 0
6 8 581 0
c (( - aux189 + SATLiteral(4) + SATLiteral(7))<=0)
-7 -584 0
-4 -584 0
-4 -7 -585 0
c (0<=( - aux189 + SATLiteral(4) + SATLiteral(7)))
7 585 0
4 585 0
4 7 584 0
c ((aux186 + aux189 - aux190)<=0)
584 -587 0
585 -588 0
575 -587 0
575 584 -588 0
575 585 -590 0
576 -588 0
576 584 -590 0
576 585 -592 0
c (0<=(aux186 + aux189 - aux190))
-585 592 0
-584 590 0
-576 592 0
-576 -585 590 0
-576 -584 588 0
-575 590 0
-575 -585 588 0
-575 -584 587 0
c ((aux185 + aux187 - aux191)<=0)
578 -594 0
579 -595 0
572 -594 0
572 578 -595 0
572 579 -597 0
573 -595 0
573 578 -597 0
573 579 -599 0
c (0<=(aux185 + aux187 - aux191))
-579 599 0
-578 597 0
-573 599 0
-573 -579 597 0
-573 -578 595 0
-572 597 0
-572 -579 595 0
-572 -578 594 0
c (( - aux192 + SATLiteral(12) + SATLiteral(21))<=0)
-21 -601 0
-12 -601 0
-12 -21 -602 0
c (0<=( - aux192 + SATLiteral(12) + SATLiteral(21)))
21 602 0
12 602 0
12 21 601 0
c (( - aux193 + SATLiteral(13) + SATLiteral(20))<=0)
-20 -604 0
-13 -604 0
-13 -20 -605 0
c (0<=( - aux193 + SATLiteral(13) + SATLiteral(20)))
20 605 0
13 605 0
13 20 604 0
c (( - aux194 + SATLiteral(15) + SATLiteral(19))<=0)
-19 -607 0
-15 -607 0
-15 -19 -608 0
c (0<=( - aux194 + SATLiteral(15) + SATLiteral(19)))
19 608 0
15 608 0
15 19 607 0
c (( - aux195 + SATLiteral(16) + SATLiteral(18))<=0)
-18 -610 0
-16 -610 0
-16 -18 -611 0
c (0<=( - aux195 + SATLiteral(16) + SATLiteral(18)))
18 611 0
16 611 0
16 18 610 0
c (( - aux196 + SATLiteral(14) + SATLiteral(17))<=0)
-17 -613 0
-14 -613 0
-14 -17 -614 0
c (0<=( - aux196 + SATLiteral(14) + SATLiteral(17)))
17 614 0
14 614 0
14 17 613 0
c ((aux193 + aux196 - aux197)<=0)
613 -616 0
614 -617 0
604 -616 0
604 613 -617 0
604 614 -619 0
605 -617 0
605 613 -619 0
605 614 -621 0
c (0<=(aux193 + aux196 - aux197))
-614 621 0
-613 619 0
-605 621 0
-605 -614 619 0
-605 -613 617 0
-604 619 0
-604 -614 617 0
-604 -613 616 0
c ((aux192 + aux194 - aux198)<=0)
607 -623 0
608 -624 0
601 -623 0
601 607 -624 0
601 608 -626 0
602 -624 0
602 607 -626 0
602 608 -628 0
c (0<=(aux192 + aux194 - aux198))
-608 628 0
-607 626 0
-602 628 0
-602 -608 626 0
-602 -607 624 0
-601 626 0
-601 -608 624 0
-601 -607 623 0
c ((SATLiteral(22) + SATLiteral(31) - aux199)<=0)
-31 -630 0
-22 -630 0
-22 -31 -631 0
c (0<=(SATLiteral(22) + SATLiteral(31) - aux199))
31 631 0
22 631 0
22 31 630 0
c ((SATLiteral(23) + SATLiteral(30) - aux200)<=0)
-30 -633 0
-23 -633 0
-23 -30 -634 0
c (0<=(SATLiteral(23) + SATLiteral(30) - aux200))
30 634 0
23 634 0
23 30 633 0
c ((SATLiteral(25) + SATLiteral(29) - aux201)<=0)
-29 -636 0
-25 -636 0
-25 -29 -637 0
c (0<=(SATLiteral(25) + SATLiteral(29) - aux201))
29 637 0
25 637 0
25 29 636 0
c ((SATLiteral(26) + SATLiteral(28) - aux202)<=0)
-28 -639 0
-26 -639 0
-26 -28 -640 0
c (0<=(SATLiteral(26) + SATLiteral(28) - aux202))
28 640 0
26 640 0
26 28 639 0
c ((SATLiteral(24) + SATLiteral(27) - aux203)<=0)
-27 -642 0
-24 -642 0
-24 -27 -643 0
c (0<=(SATLiteral(24) + SATLiteral(27) - aux203))
27 643 0
24 643 0
24 27 642 0
c ((aux200 + aux203 - aux204)<=0)
642 -645 0
643 -646 0
633 -645 0
633 642 -646 0
633 643 -648 0
634 -646 0
634 642 -648 0
634 643 -650 0
c (0<=(aux200 + aux203 - aux204))
-643 650 0
-642 648 0
-634 650 0
-634 -643 648 0
-634 -642 646 0
-633 648 0
-633 -643 646 0
-633 -642 645 0
c ((aux199 + aux201 - aux205)<=0)
636 -652 0
637 -653 0
630 -652 0
630 636 -653 0
630 637 -655 0
631 -653 0
631 636 -655 0
631 637 -657 0
c (0<=(aux199 + aux201 - aux205))
-637 657 0
-636 655 0
-631 657 0
-631 -637 655 0
-631 -636 653 0
-630 655 0
-630 -637 653 0
-630 -636 652 0
c (( - aux206 + SATLiteral(32) + SATLiteral(41))<=0)
-41 -659 0
-32 -659 0
-32 -41 -660 0
c (0<=( - aux206 + SATLiteral(32) + SATLiteral(41)))
41 660 0
32 660 0
32 41 659 0
c (( - aux207 + SATLiteral(33) + SATLiteral(40))<=0)
-40 -662 0
-33 -662 0
-33 -40 -663 0
c (0<=( - aux207 + SATLiteral(33) + SATLiteral(40)))
40 663 0
33 663 0
33 40 662 0
c (( - aux208 + SATLiteral(35) + SATLiteral(39))<=0)
-39 -665 0
-35 -665 0
-35 -39 -666 0
c (0<=( - aux208 + SATLiteral(35) + SATLiteral(39)))
39 666 0
35 666 0
35 39 665 0
c (( - aux209 + SATLiteral(36) + SATLiteral(38))<=0)
-38 -668 0
-36 -668 0
-36 -38 -669 0
c (0<=( - aux209 + SATLiteral(36) + SATLiteral(38)))
38 669 0
36 669 0
36 38 668 0
c (( - aux210 + SATLiteral(34) + SATLiteral(37))<=0)
-37 -671 0
-34 -671 0
-34 -37 -672 0
c (0<=( - aux210 + SATLiteral(34) + SATLiteral(37)))
37 672 0
34 672 0
34 37 671 0
c ((aux207 + aux210 - aux211)<=0)
671 -674 0
672 -675 0
662 -674 0
662 671 -675 0
662 672 -677 0
663 -675 0
663 671 -677 0
663 672 -679 0
c (0<=(aux207 + aux210 - aux211))
-672 679 0
-671 677 0
-663 679 0
-663 -672 677 0
-663 -671 675 0
-662 677 0
-662 -672 675 0
-662 -671 674 0
c ((aux206 + aux208 - aux212)<=0)
665 -681 0
666 -682 0
659 -681 0
659 665 -682 0
659 666 -684 0
660 -682 0
660 665 -684 0
660 666 -686 0
c (0<=(aux206 + aux208 - aux212))
-666 686 0
-665 684 0
-660 686 0
-660 -666 684 0
-660 -665 682 0
-659 684 0
-659 -666 682 0
-659 -665 681 0
c (( - aux213 + SATLiteral(42) + SATLiteral(51))<=0)
-51 -688 0
-42 -688 0
-42 -51 -689 0
c (0<=( - aux213 + SATLiteral(42) + SATLiteral(51)))
51 689 0
42 689 0
42 51 688 0
c (( - aux214 + SATLiteral(43) + SATLiteral(50))<=0)
-50 -691 0
-43 -691 0
-43 -50 -692 0
c (0<=( - aux214 + SATLiteral(43) + SATLiteral(50)))
50 692 0
43 692 0
43 50 691 0
c (( - aux215 + SATLiteral(45) + SATLiteral(49))<=0)
-49 -694 0
-45 -694 0
-45 -49 -695 0
c (0<=( - aux215 + SATLiteral(45) + SATLiteral(49)))
49 695 0
45 695 0
45 49 694 0
c (( - aux216 + SATLiteral(46) + SATLiteral(48))<=0)
-48 -697 0
-46 -697 0
-46 -48 -698 0
c (0<=( - aux216 + SATLiteral(46) + SATLiteral(48)))
48 698 0
46 698 0
46 48 697 0
c (( - aux217 + SATLiteral(44) + SATLiteral(47))<=0)
-47 -700 0
-44 -700 0
-44 -47 -701 0
c (0<=( - aux217 + SATLiteral(44) + SATLiteral(47)))
47 701 0
44 701 0
44 47 700 0
c ((aux214 + aux217 - aux218)<=0)
700 -703 0
701 -704 0
691 -703 0
691 700 -704 0
691 701 -706 0
692 -704 0
692 700 -706 0
692 701 -708 0
c (0<=(aux214 + aux217 - aux218))
-701 708 0
-700 706 0
-692 708 0
-692 -701 706 0
-692 -700 704 0
-691 706 0
-691 -701 704 0
-691 -700 703 0
c ((aux213 + aux215 - aux219)<=0)
694 -710 0
695 -711 0
688 -710 0
688 694 -711 0
688 695 -713 0
689 -711 0
689 694 -713 0
689 695 -715 0
c (0<=(aux213 + aux215 - aux219))
-695 715 0
-694 713 0
-689 715 0
-689 -695 713 0
-689 -694 711 0
-688 713 0
-688 -695 711 0
-688 -694 710 0
c (( - aux220 + SATLiteral(52) + SATLiteral(61))<=0)
-61 -717 0
-52 -717 0
-52 -61 -718 0
c (0<=( - aux220 + SATLiteral(52) + SATLiteral(61)))
61 718 0
52 718 0
52 61 717 0
c (( - aux221 + SATLiteral(53) + SATLiteral(60))<=0)
-60 -720 0
-53 -720 0
-53 -60 -721 0
c (0<=( - aux221 + SATLiteral(53) + SATLiteral(60)))
60 721 0
53 721 0
53 60 720 0
c (( - aux222 + SATLiteral(55) + SATLiteral(59))<=0)
-59 -723 0
-55 -723 0
-55 -59 -724 0
c (0<=( - aux222 + SATLiteral(55) + SATLiteral(59)))
59 724 0
55 724 0
55 59 723 0
c (( - aux223 + SATLiteral(56) + SATLiteral(58))<=0)
-58 -726 0
-56 -726 0
-56 -58 -727 0
c (0<=( - aux223 + SATLiteral(56) + SATLiteral(58)))
58 727 0
56 727 0
56 58 726 0
c (( - aux224 + SATLiteral(54) + SATLiteral(57))<=0)
-57 -729 0
-54 -729 0
-54 -57 -730 0
c (0<=( - aux224 + SATLiteral(54) + SATLiteral(57)))
57 730 0
54 730 0
54 57 729 0
c ((aux221 + aux224 - aux225)<=0)
729 -732 0
730 -733 0
720 -732 0
720 729 -733 0
720 730 -735 0
721 -733 0
721 729 -735 0
721 730 -737 0
c (0<=(aux221 + aux224 - aux225))
-730 737 0
-729 735 0
-721 737 0
-721 -730 735 0
-721 -729 733 0
-720 735 0
-720 -730 733 0
-720 -729 732 0
c ((aux220 + aux222 - aux226)<=0)
723 -739 0
724 -740 0
717 -739 0
717 723 -740 0
717 724 -742 0
718 -740 0
718 723 -742 0
718 724 -744 0
c (0<=(aux220 + aux222 - aux226))
-724 744 0
-723 742 0
-718 744 0
-718 -724 742 0
-718 -723 740 0
-717 742 0
-717 -724 740 0
-717 -723 739 0
c (( - aux227 + SATLiteral(62) + SATLiteral(71))<=0)
-71 -746 0
-62 -746 0
-62 -71 -747 0
c (0<=( - aux227 + SATLiteral(62) + SATLiteral(71)))
71 747 0
62 747 0
62 71 746 0
c (( - aux228 + SATLiteral(63) + SATLiteral(70))<=0)
-70 -749 0
-63 -749 0
-63 -70 -750 0
c (0<=( - aux228 + SATLiteral(63) + SATLiteral(70)))
70 750 0
63 750 0
63 70 749 0
c (( - aux229 + SATLiteral(65) + SATLiteral(69))<=0)
-69 -752 0
-65 -752 0
-65 -69 -753 0
c (0<=( - aux229 + SATLiteral(65) + SATLiteral(69)))
69 753 0
65 753 0
65 69 752 0
c (( - aux230 + SATLiteral(66) + SATLiteral(68))<=0)
-68 -755 0
-66 -755 0
-66 -68 -756 0
c (0<=( - aux230 + SATLiteral(66) + SATLiteral(68)))
68 756 0
66 756 0
66 68 755 0
c (( - aux231 + SATLiteral(64) + SATLiteral(67))<=0)
-67 -758 0
-64 -758 0
-64 -67 -759 0
c (0<=( - aux231 + SATLiteral(64) + SATLiteral(67)))
67 759 0
64 759 0
64 67 758 0
c ((aux228 + aux231 - aux232)<=0)
758 -761 0
759 -762 0
749 -761 0
749 758 -762 0
749 759 -764 0
750 -762 0
750 758 -764 0
750 759 -766 0
c (0<=(aux228 + aux231 - aux232))
-759 766 0
-758 764 0
-750 766 0
-750 -759 764 0
-750 -758 762 0
-749 764 0
-749 -759 762 0
-749 -758 761 0
c ((aux227 + aux229 - aux233)<=0)
752 -768 0
753 -769 0
746 -768 0
746 752 -769 0
746 753 -771 0
747 -769 0
747 752 -771 0
747 753 -773 0
c (0<=(aux227 + aux229 - aux233))
-753 773 0
-752 771 0
-747 773 0
-747 -753 771 0
-747 -752 769 0
-746 771 0
-746 -753 769 0
-746 -752 768 0
c ((SATLiteral(72) + SATLiteral(81) - aux234)<=0)
-81 -775 0
-72 -775 0
-72 -81 -776 0
c (0<=(SATLiteral(72) + SATLiteral(81) - aux234))
81 776 0
72 776 0
72 81 775 0
c ((SATLiteral(73) + SATLiteral(80) - aux235)<=0)
-80 -778 0
-73 -778 0
-73 -80 -779 0
c (0<=(SATLiteral(73) + SATLiteral(80) - aux235))
80 779 0
73 779 0
73 80 778 0
c ((SATLiteral(75) + SATLiteral(79) - aux236)<=0)
-79 -781 0
-75 -781 0
-75 -79 -782 0
c (0<=(SATLiteral(75) + SATLiteral(79) - aux236))
79 782 0
75 782 0
75 79 781 0
c ((SATLiteral(76) + SATLiteral(78) - aux237)<=0)
-78 -784 0
-76 -784 0
-76 -78 -785 0
c (0<=(SATLiteral(76) + SATLiteral(78) - aux237))
78 785 0
76 785 0
76 78 784 0
c ((SATLiteral(74) + SATLiteral(77) - aux238)<=0)
-77 -787 0
-74 -787 0
-74 -77 -788 0
c (0<=(SATLiteral(74) + SATLiteral(77) - aux238))
77 788 0
74 788 0
74 77 787 0
c ((aux235 + aux238 - aux239)<=0)
787 -790 0
788 -791 0
778 -790 0
778 787 -791 0
778 788 -793 0
779 -791 0
779 787 -793 0
779 788 -795 0
c (0<=(aux235 + aux238 - aux239))
-788 795 0
-787 793 0
-779 795 0
-779 -788 793 0
-779 -787 791 0
-778 793 0
-778 -788 791 0
-778 -787 790 0
c ((aux234 + aux236 - aux240)<=0)
781 -797 0
782 -798 0
775 -797 0
775 781 -798 0
775 782 -800 0
776 -798 0
776 781 -800 0
776 782 -802 0
c (0<=(aux234 + aux236 - aux240))
-782 802 0
-781 800 0
-776 802 0
-776 -782 800 0
-776 -781 798 0
-775 800 0
-775 -782 798 0
-775 -781 797 0
c (( - aux241 + SATLiteral(82) + SATLiteral(91))<=0)
-91 -804 0
-82 -804 0
-82 -91 -805 0
c (0<=( - aux241 + SATLiteral(82) + SATLiteral(91)))
91 805 0
82 805 0
82 91 804 0
c (( - aux242 + SATLiteral(83) + SATLiteral(90))<=0)
-90 -807 0
-83 -807 0
-83 -90 -808 0
c (0<=( - aux242 + SATLiteral(83) + SATLiteral(90)))
90 808 0
83 808 0
83 90 807 0
c (( - aux243 + SATLiteral(85) + SATLiteral(89))<=0)
-89 -810 0
-85 -810 0
-85 -89 -811 0
c (0<=( - aux243 + SATLiteral(85) + SATLiteral(89)))
89 811 0
85 811 0
85 89 810 0
c (( - aux244 + SATLiteral(86) + SATLiteral(88))<=0)
-88 -813 0
-86 -813 0
-86 -88 -814 0
c (0<=( - aux244 + SATLiteral(86) + SATLiteral(88)))
88 814 0
86 814 0
86 88 813 0
c (( - aux245 + SATLiteral(84) + SATLiteral(87))<=0)
-87 -816 0
-84 -816 0
-84 -87 -817 0
c (0<=( - aux245 + SATLiteral(84) + SATLiteral(87)))
87 817 0
84 817 0
84 87 816 0
c ((aux242 + aux245 - aux246)<=0)
816 -819 0
817 -820 0
807 -819 0
807 816 -820 0
807 817 -822 0
808 -820 0
808 816 -822 0
808 817 -824 0
c (0<=(aux242 + aux245 - aux246))
-817 824 0
-816 822 0
-808 824 0
-808 -817 822 0
-808 -816 820 0
-807 822 0
-807 -817 820 0
-807 -816 819 0
c ((aux241 + aux243 - aux247)<=0)
810 -826 0
811 -827 0
804 -826 0
804 810 -827 0
804 811 -829 0
805 -827 0
805 810 -829 0
805 811 -831 0
c (0<=(aux241 + aux243 - aux247))
-811 831 0
-810 829 0
-805 831 0
-805 -811 829 0
-805 -810 827 0
-804 829 0
-804 -811 827 0
-804 -810 826 0
c (( - aux248 + SATLiteral(92) + SATLiteral(101))<=0)
-101 -833 0
-92 -833 0
-92 -101 -834 0
c (0<=( - aux248 + SATLiteral(92) + SATLiteral(101)))
101 834 0
92 834 0
92 101 833 0
c (( - aux249 + SATLiteral(93) + SATLiteral(100))<=0)
-100 -836 0
-93 -836 0
-93 -100 -837 0
c (0<=( - aux249 + SATLiteral(93) + SATLiteral(100)))
100 837 0
93 837 0
93 100 836 0
c (( - aux250 + SATLiteral(95) + SATLiteral(99))<=0)
-99 -839 0
-95 -839 0
-95 -99 -840 0
c (0<=( - aux250 + SATLiteral(95) + SATLiteral(99)))
99 840 0
95 840 0
95 99 839 0
c (( - aux251 + SATLiteral(96) + SATLiteral(98))<=0)
-98 -842 0
-96 -842 0
-96 -98 -843 0
c (0<=( - aux251 + SATLiteral(96) + SATLiteral(98)))
98 843 0
96 843 0
96 98 842 0
c (( - aux252 + SATLiteral(94) + SATLiteral(97))<=0)
-97 -845 0
-94 -845 0
-94 -97 -846 0
c (0<=( - aux252 + SATLiteral(94) + SATLiteral(97)))
97 846 0
94 846 0
94 97 845 0
c ((aux249 + aux252 - aux253)<=0)
845 -848 0
846 -849 0
836 -848 0
836 845 -849 0
836 846 -851 0
837 -849 0
837 845 -851 0
837 846 -853 0
c (0<=(aux249 + aux252 - aux253))
-846 853 0
-845 851 0
-837 853 0
-837 -846 851 0
-837 -845 849 0
-836 851 0
-836 -846 849 0
-836 -845 848 0
c ((aux248 + aux250 - aux254)<=0)
839 -855 0
840 -856 0
833 -855 0
833 839 -856 0
833 840 -858 0
834 -856 0
834 839 -858 0
834 840 -860 0
c (0<=(aux248 + aux250 - aux254))
-840 860 0
-839 858 0
-834 860 0
-834 -840 858 0
-834 -839 856 0
-833 858 0
-833 -840 856 0
-833 -839 855 0
c ((SATLiteral(22) - aux255 + SATLiteral(62))<=0)
-62 -862 0
-22 -862 0
-22 -62 -863 0
c (0<=(SATLiteral(22) - aux255 + SATLiteral(62)))
62 863 0
22 863 0
22 62 862 0
c ((SATLiteral(72) - aux256 + SATLiteral(12))<=0)
-12 -865 0
-72 -865 0
-72 -12 -866 0
c (0<=(SATLiteral(72) - aux256 + SATLiteral(12)))
12 866 0
72 866 0
72 12 865 0
c (( - aux257 + SATLiteral(82) + SATLiteral(52))<=0)
-52 -868 0
-82 -868 0
-82 -52 -869 0
c (0<=( - aux257 + SATLiteral(82) + SATLiteral(52)))
52 869 0
82 869 0
82 52 868 0
c (( - aux258 + SATLiteral(42) + SATLiteral(2))<=0)
-2 -871 0
-42 -871 0
-42 -2 -872 0
c (0<=( - aux258 + SATLiteral(42) + SATLiteral(2)))
2 872 0
42 872 0
42 2 871 0
c (( - aux259 + SATLiteral(32) + SATLiteral(92))<=0)
-92 -874 0
-32 -874 0
-32 -92 -875 0
c (0<=( - aux259 + SATLiteral(32) + SATLiteral(92)))
92 875 0
32 875 0
32 92 874 0
c ((aux256 + aux259 - aux260)<=0)
874 -877 0
875 -878 0
865 -877 0
865 874 -878 0
865 875 -880 0
866 -878 0
866 874 -880 0
866 875 -882 0
c (0<=(aux256 + aux259 - aux260))
-875 882 0
-874 880 0
-866 882 0
-866 -875 880 0
-866 -874 878 0
-865 880 0
-865 -875 878 0
-865 -874 877 0
c ((aux255 + aux257 - aux261)<=0)
868 -884 0
869 -885 0
862 -884 0
862 868 -885 0
862 869 -887 0
863 -885 0
863 868 -887 0
863 869 -889 0
c (0<=(aux255 + aux257 - aux261))
-869 889 0
-868 887 0
-863 889 0
-863 -869 887 0
-863 -868 885 0
-862 887 0
-862 -869 885 0
-862 -868 884 0
c ((SATLiteral(23) - aux262 + SATLiteral(63))<=0)
-63 -891 0
-23 -891 0
-23 -63 -892 0
c (0<=(SATLiteral(23) - aux262 + SATLiteral(63)))
63 892 0
23 892 0
23 63 891 0
c ((SATLiteral(73) - aux263 + SATLiteral(13))<=0)
-13 -894 0
-73 -894 0
-73 -13 -895 0
c (0<=(SATLiteral(73) - aux263 + SATLiteral(13)))
13 895 0
73 895 0
73 13 894 0
c (( - aux264 + SATLiteral(83) + SATLiteral(53))<=0)
-53 -897 0
-83 -897 0
-83 -53 -898 0
c (0<=( - aux264 + SATLiteral(83) + SATLiteral(53)))
53 898 0
83 898 0
83 53 897 0
c (( - aux265 + SATLiteral(43) + SATLiteral(3))<=0)
-3 -900 0
-43 -900 0
-43 -3 -901 0
c (0<=( - aux265 + SATLiteral(43) + SATLiteral(3)))
3 901 0
43 901 0
43 3 900 0
c (( - aux266 + SATLiteral(33) + SATLiteral(93))<=0)
-93 -903 0
-33 -903 0
-33 -93 -904 0
c (0<=( - aux266 + SATLiteral(33) + SATLiteral(93)))
93 904 0
33 904 0
33 93 903 0
c ((aux263 + aux266 - aux267)<=0)
903 -906 0
904 -907 0
894 -906 0
894 903 -907 0
894 904 -909 0
895 -907 0
895 903 -909 0
895 904 -911 0
c (0<=(aux263 + aux266 - aux267))
-904 911 0
-903 909 0
-895 911 0
-895 -904 909 0
-895 -903 907 0
-894 909 0
-894 -904 907 0
-894 -903 906 0
c ((aux262 + aux264 - aux268)<=0)
897 -913 0
898 -914 0
891 -913 0
891 897 -914 0
891 898 -916 0
892 -914 0
892 897 -916 0
892 898 -918 0
c (0<=(aux262 + aux264 - aux268))
-898 918 0
-897 916 0
-892 918 0
-892 -898 916 0
-892 -897 914 0
-891 916 0
-891 -898 914 0
-891 -897 913 0
c ((SATLiteral(24) - aux269 + SATLiteral(64))<=0)
-64 -920 0
-24 -920 0
-24 -64 -921 0
c (0<=(SATLiteral(24) - aux269 + SATLiteral(64)))
64 921 0
24 921 0
24 64 920 0
c ((SATLiteral(74) - aux270 + SATLiteral(14))<=0)
-14 -923 0
-74 -923 0
-74 -14 -924 0
c (0<=(SATLiteral(74) - aux270 + SATLiteral(14)))
14 924 0
74 924 0
74 14 923 0
c (( - aux271 + SATLiteral(84) + SATLiteral(54))<=0)
-54 -926 0
-84 -926 0
-84 -54 -927 0
c (0<=( - aux271 + SATLiteral(84) + SATLiteral(54)))
54 927 0
84 927 0
84 54 926 0
c (( - aux272 + SATLiteral(44) + SATLiteral(4))<=0)
-4 -929 0
-44 -929 0
-44 -4 -930 0
c (0<=( - aux272 + SATLiteral(44) + SATLiteral(4)))
4 930 0
44 930 0
44 4 929 0
c (( - aux273 + SATLiteral(34) + SATLiteral(94))<=0)
-94 -932 0
-34 -932 0
-34 -94 -933 0
c (0<=( - aux273 + SATLiteral(34) + SATLiteral(94)))
94 933 0
34 933 0
34 94 932 0
c ((aux270 + aux273 - aux274)<=0)
932 -935 0
933 -936 0
923 -935 0
923 932 -936 0
923 933 -938 0
924 -936 0
924 932 -938 0
924 933 -940 0
c (0<=(aux270 + aux273 - aux274))
-933 940 0
-932 938 0
-924 940 0
-924 -933 938 0
-924 -932 936 0
-923 938 0
-923 -933 936 0
-923 -932 935 0
c ((aux269 + aux271 - aux275)<=0)
926 -942 0
927 -943 0
920 -942 0
920 926 -943 0
920 927 -945 0
921 -943 0
921 926 -945 0
921 927 -947 0
c (0<=(aux269 + aux271 - aux275))
-927 947 0
-926 945 0
-921 947 0
-921 -927 945 0
-921 -926 943 0
-920 945 0
-920 -927 943 0
-920 -926 942 0
c ((SATLiteral(25) - aux276 + SATLiteral(65))<=0)
-65 -949 0
-25 -949 0
-25 -65 -950 0
c (0<=(SATLiteral(25) - aux276 + SATLiteral(65)))
65 950 0
25 950 0
25 65 949 0
c ((SATLiteral(75) - aux277 + SATLiteral(15))<=0)
-15 -952 0
-75 -952 0
-75 -15 -953 0
c (0<=(SATLiteral(75) - aux277 + SATLiteral(15)))
15 953 0
75 953 0
75 15 952 0
c (( - aux278 + SATLiteral(85) + SATLiteral(55))<=0)
-55 -955 0
-85 -955 0
-85 -55 -956 0
c (0<=( - aux278 + SATLiteral(85) + SATLiteral(55)))
55 956 0
85 956 0
85 55 955 0
c (( - aux279 + SATLiteral(45) + SATLiteral(5))<=0)
-5 -958 0
-45 -958 0
-45 -5 -959 0
c (0<=( - aux279 + SATLiteral(45) + SATLiteral(5)))
5 959 0
45 959 0
45 5 958 0
c (( - aux280 + SATLiteral(35) + SATLiteral(95))<=0)
-95 -961 0
-35 -961 0
-35 -95 -962 0
c (0<=( - aux280 + SATLiteral(35) + SATLiteral(95)))
95 962 0
35 962 0
35 95 961 0
c ((aux277 + aux280 - aux281)<=0)
961 -964 0
962 -965 0
952 -964 0
952 961 -965 0
952 962 -967 0
953 -965 0
953 961 -967 0
953 962 -969 0
c (0<=(aux277 + aux280 - aux281))
-962 969 0
-961 967 0
-953 969 0
-953 -962 967 0
-953 -961 965 0
-952 967 0
-952 -962 965 0
-952 -961 964 0
c ((aux276 + aux278 - aux282)<=0)
955 -971 0
956 -972 0
949 -971 0
949 955 -972 0
949 956 -974 0
950 -972 0
950 955 -974 0
950 956 -976 0
c (0<=(aux276 + aux278 - aux282))
-956 976 0
-955 974 0
-950 976 0
-950 -956 974 0
-950 -955 972 0
-949 974 0
-949 -956 972 0
-949 -955 971 0
c ((SATLiteral(26) - aux283 + SATLiteral(66))<=0)
-66 -978 0
-26 -978 0
-26 -66 -979 0
c (0<=(SATLiteral(26) - aux283 + SATLiteral(66)))
66 979 0
26 979 0
26 66 978 0
c ((SATLiteral(76) - aux284 + SATLiteral(16))<=0)
-16 -981 0
-76 -981 0
-76 -16 -982 0
c (0<=(SATLiteral(76) - aux284 + SATLiteral(16)))
16 982 0
76 982 0
76 16 981 0
c (( - aux285 + SATLiteral(86) + SATLiteral(56))<=0)
-56 -984 0
-86 -984 0
-86 -56 -985 0
c (0<=( - aux285 + SATLiteral(86) + SATLiteral(56)))
56 985 0
86 985 0
86 56 984 0
c (( - aux286 + SATLiteral(46) + SATLiteral(6))<=0)
-6 -987 0
-46 -987 0
-46 -6 -988 0
c (0<=( - aux286 + SATLiteral(46) + SATLiteral(6)))
6 988 0
46 988 0
46 6 987 0
c (( - aux287 + SATLiteral(36) + SATLiteral(96))<=0)
-96 -990 0
-36 -990 0
-36 -96 -991 0
c (0<=( - aux287 + SATLiteral(36) + SATLiteral(96)))
96 991 0
36 991 0
36 96 990 0
c ((aux284 + aux287 - aux288)<=0)
990 -993 0
991 -994 0
981 -993 0
981 990 -994 0
981 991 -996 0
982 -994 0
982 990 -996 0
982 991 -998 0
c (0<=(aux284 + aux287 - aux288))
-991 998 0
-990 996 0
-982 998 0
-982 -991 996 0
-982 -990 994 0
-981 996 0
-981 -991 994 0
-981 -990 993 0
c ((aux283 + aux285 - aux289)<=0)
984 -1000 0
985 -1001 0
978 -1000 0
978 984 -1001 0
978 985 -1003 0
979 -1001 0
979 984 -1003 0
979 985 -1005 0
c (0<=(aux283 + aux285 - aux289))
-985 1005 0
-984 1003 0
-979 1005 0
-979 -985 1003 0
-979 -984 1001 0
-978 1003 0
-978 -985 1001 0
-978 -984 1000 0
c ((SATLiteral(27) - aux290 + SATLiteral(67))<=0)
-67 -1007 0
-27 -1007 0
-27 -67 -1008 0
c (0<=(SATLiteral(27) - aux290 + SATLiteral(67)))
67 1008 0
27 1008 0
27 67 1007 0
c ((SATLiteral(77) - aux291 + SATLiteral(17))<=0)
-17 -1010 0
-77 -1010 0
-77 -17 -1011 0
c (0<=(SATLiteral(77) - aux291 + SATLiteral(17)))
17 1011 0
77 1011 0
77 17 1010 0
c (( - aux292 + SATLiteral(87) + SATLiteral(57))<=0)
-57 -1013 0
-87 -1013 0
-87 -57 -1014 0
c (0<=( - aux292 + SATLiteral(87) + SATLiteral(57)))
57 1014 0
87 1014 0
87 57 1013 0
c (( - aux293 + SATLiteral(47) + SATLiteral(7))<=0)
-7 -1016 0
-47 -1016 0
-47 -7 -1017 0
c (0<=( - aux293 + SATLiteral(47) + SATLiteral(7)))
7 1017 0
47 1017 0
47 7 1016 0
c (( - aux294 + SATLiteral(37) + SATLiteral(97))<=0)
-97 -1019 0
-37 -1019 0
-37 -97 -1020 0
c (0<=( - aux294 + SATLiteral(37) + SATLiteral(97)))
97 1020 0
37 1020 0
37 97 1019 0
c ((aux291 + aux294 - aux295)<=0)
1019 -1022 0
1020 -1023 0
1010 -1022 0
1010 1019 -1023 0
1010 1020 -1025 0
1011 -1023 0
1011 1019 -1025 0
1011 1020 -1027 0
c (0<=(aux291 + aux294 - aux295))
-1020 1027 0
-1019 1025 0
-1011 1027 0
-1011 -1020 1025 0
-1011 -1019 1023 0
-1010 1025 0
-1010 -1020 1023 0
-1010 -1019 1022 0
c ((aux290 + aux292 - aux296)<=0)
1013 -1029 0
1014 -1030 0
1007 -1029 0
1007 1013 -1030 0
1007 1014 -1032 0
1008 -1030 0
1008 1013 -1032 0
1008 1014 -1034 0
c (0<=(aux290 + aux292 - aux296))
-1014 1034 0
-1013 1032 0
-1008 1034 0
-1008 -1014 1032 0
-1008 -1013 1030 0
-1007 1032 0
-1007 -1014 1030 0
-1007 -1013 1029 0
c ((SATLiteral(28) - aux297 + SATLiteral(68))<=0)
-68 -1036 0
-28 -1036 0
-28 -68 -1037 0
c (0<=(SATLiteral(28) - aux297 + SATLiteral(68)))
68 1037 0
28 1037 0
28 68 1036 0
c ((SATLiteral(78) - aux298 + SATLiteral(18))<=0)
-18 -1039 0
-78 -1039 0
-78 -18 -1040 0
c (0<=(SATLiteral(78) - aux298 + SATLiteral(18)))
18 1040 0
78 1040 0
78 18 1039 0
c (( - aux299 + SATLiteral(88) + SATLiteral(58))<=0)
-58 -1042 0
-88 -1042 0
-88 -58 -1043 0
c (0<=( - aux299 + SATLiteral(88) + SATLiteral(58)))
58 1043 0
88 1043 0
88 58 1042 0
c (( - aux300 + SATLiteral(48) + SATLiteral(8))<=0)
-8 -1045 0
-48 -1045 0
-48 -8 -1046 0
c (0<=( - aux300 + SATLiteral(48) + SATLiteral(8)))
8 1046 0
48 1046 0
48 8 1045 0
c (( - aux301 + SATLiteral(38) + SATLiteral(98))<=0)
-98 -1048 0
-38 -1048 0
-38 -98 -1049 0
c (0<=( - aux301 + SATLiteral(38) + SATLiteral(98)))
98 1049 0
38 1049 0
38 98 1048 0
c ((aux298 + aux301 - aux302)<=0)
1048 -1051 0
1049 -1052 0
1039 -1051 0
1039 1048 -1052 0
1039 1049 -1054 0
1040 -1052 0
1040 1048 -1054 0
1040 1049 -1056 0
c (0<=(aux298 + aux301 - aux302))
-1049 1056 0
-1048 1054 0
-1040 1056 0
-1040 -1049 1054 0
-1040 -1048 1052 0
-1039 1054 0
-1039 -1049 1052 0
-1039 -1048 1051 0
c ((aux297 + aux299 - aux303)<=0)
1042 -1058 0
1043 -1059 0
1036 -1058 0
1036 1042 -1059 0
1036 1043 -1061 0
1037 -1059 0
1037 1042 -1061 0
1037 1043 -1063 0
c (0<=(aux297 + aux299 - aux303))
-1043 1063 0
-1042 1061 0
-1037 1063 0
-1037 -1043 1061 0
-1037 -1042 1059 0
-1036 1061 0
-1036 -1043 1059 0
-1036 -1042 1058 0
c ((SATLiteral(29) - aux304 + SATLiteral(69))<=0)
-69 -1065 0
-29 -1065 0
-29 -69 -1066 0
c (0<=(SATLiteral(29) - aux304 + SATLiteral(69)))
69 1066 0
29 1066 0
29 69 1065 0
c ((SATLiteral(79) - aux305 + SATLiteral(19))<=0)
-19 -1068 0
-79 -1068 0
-79 -19 -1069 0
c (0<=(SATLiteral(79) - aux305 + SATLiteral(19)))
19 1069 0
79 1069 0
79 19 1068 0
c (( - aux306 + SATLiteral(89) + SATLiteral(59))<=0)
-59 -1071 0
-89 -1071 0
-89 -59 -1072 0
c (0<=( - aux306 + SATLiteral(89) + SATLiteral(59)))
59 1072 0
89 1072 0
89 59 1071 0
c (( - aux307 + SATLiteral(49) + SATLiteral(9))<=0)
-9 -1074 0
-49 -1074 0
-49 -9 -1075 0
c (0<=( - aux307 + SATLiteral(49) + SATLiteral(9)))
9 1075 0
49 1075 0
49 9 1074 0
c (( - aux308 + SATLiteral(39) + SATLiteral(99))<=0)
-99 -1077 0
-39 -1077 0
-39 -99 -1078 0
c (0<=( - aux308 + SATLiteral(39) + SATLiteral(99)))
99 1078 0
39 1078 0
39 99 1077 0
c ((aux305 + aux308 - aux309)<=0)
1077 -1080 0
1078 -1081 0
1068 -1080 0
1068 1077 -1081 0
1068 1078 -1083 0
1069 -1081 0
1069 1077 -1083 0
1069 1078 -1085 0
c (0<=(aux305 + aux308 - aux309))
-1078 1085 0
-1077 1083 0
-1069 1085 0
-1069 -1078 1083 0
-1069 -1077 1081 0
-1068 1083 0
-1068 -1078 1081 0
-1068 -1077 1080 0
c ((aux304 + aux306 - aux310)<=0)
1071 -1087 0
1072 -1088 0
1065 -1087 0
1065 1071 -1088 0
1065 1072 -1090 0
1066 -1088 0
1066 1071 -1090 0
1066 1072 -1092 0
c (0<=(aux304 + aux306 - aux310))
-1072 1092 0
-1071 1090 0
-1066 1092 0
-1066 -1072 1090 0
-1066 -1071 1088 0
-1065 1090 0
-1065 -1072 1088 0
-1065 -1071 1087 0
c ((SATLiteral(30) - aux311 + SATLiteral(70))<=0)
-70 -1094 0
-30 -1094 0
-30 -70 -1095 0
c (0<=(SATLiteral(30) - aux311 + SATLiteral(70)))
70 1095 0
30 1095 0
30 70 1094 0
c ((SATLiteral(80) - aux312 + SATLiteral(20))<=0)
-20 -1097 0
-80 -1097 0
-80 -20 -1098 0
c (0<=(SATLiteral(80) - aux312 + SATLiteral(20)))
20 1098 0
80 1098 0
80 20 1097 0
c (( - aux313 + SATLiteral(90) + SATLiteral(60))<=0)
-60 -1100 0
-90 -1100 0
-90 -60 -1101 0
c (0<=( - aux313 + SATLiteral(90) + SATLiteral(60)))
60 1101 0
90 1101 0
90 60 1100 0
c (( - aux314 + SATLiteral(50) + SATLiteral(10))<=0)
-10 -1103 0
-50 -1103 0
-50 -10 -1104 0
c (0<=( - aux314 + SATLiteral(50) + SATLiteral(10)))
10 1104 0
50 1104 0
50 10 1103 0
c (( - aux315 + SATLiteral(40) + SATLiteral(100))<=0)
-100 -1106 0
-40 -1106 0
-40 -100 -1107 0
c (0<=( - aux315 + SATLiteral(40) + SATLiteral(100)))
100 1107 0
40 1107 0
40 100 1106 0
c ((aux312 + aux315 - aux316)<=0)
1106 -1109 0
1107 -1110 0
1097 -1109 0
1097 1106 -1110 0
1097 1107 -1112 0
1098 -1110 0
1098 1106 -1112 0
1098 1107 -1114 0
c (0<=(aux312 + aux315 - aux316))
-1107 1114 0
-1106 1112 0
-1098 1114 0
-1098 -1107 1112 0
-1098 -1106 1110 0
-1097 1112 0
-1097 -1107 1110 0
-1097 -1106 1109 0
c ((aux311 + aux313 - aux317)<=0)
1100 -1116 0
1101 -1117 0
1094 -1116 0
1094 1100 -1117 0
1094 1101 -1119 0
1095 -1117 0
1095 1100 -1119 0
1095 1101 -1121 0
c (0<=(aux311 + aux313 - aux317))
-1101 1121 0
-1100 1119 0
-1095 1121 0
-1095 -1101 1119 0
-1095 -1100 1117 0
-1094 1119 0
-1094 -1101 1117 0
-1094 -1100 1116 0
c ((SATLiteral(31) - aux318 + SATLiteral(71))<=0)
-71 -1123 0
-31 -1123 0
-31 -71 -1124 0
c (0<=(SATLiteral(31) - aux318 + SATLiteral(71)))
71 1124 0
31 1124 0
31 71 1123 0
c ((SATLiteral(81) - aux319 + SATLiteral(21))<=0)
-21 -1126 0
-81 -1126 0
-81 -21 -1127 0
c (0<=(SATLiteral(81) - aux319 + SATLiteral(21)))
21 1127 0
81 1127 0
81 21 1126 0
c (( - aux320 + SATLiteral(91) + SATLiteral(61))<=0)
-61 -1129 0
-91 -1129 0
-91 -61 -1130 0
c (0<=( - aux320 + SATLiteral(91) + SATLiteral(61)))
61 1130 0
91 1130 0
91 61 1129 0
c (( - aux321 + SATLiteral(51) + SATLiteral(11))<=0)
-11 -1132 0
-51 -1132 0
-51 -11 -1133 0
c (0<=( - aux321 + SATLiteral(51) + SATLiteral(11)))
11 1133 0
51 1133 0
51 11 1132 0
c (( - aux322 + SATLiteral(41) + SATLiteral(101))<=0)
-101 -1135 0
-41 -1135 0
-41 -101 -1136 0
c (0<=( - aux322 + SATLiteral(41) + SATLiteral(101)))
101 1136 0
41 1136 0
41 101 1135 0
c ((aux319 + aux322 - aux323)<=0)
1135 -1138 0
1136 -1139 0
1126 -1138 0
1126 1135 -1139 0
1126 1136 -1141 0
1127 -1139 0
1127 1135 -1141 0
1127 1136 -1143 0
c (0<=(aux319 + aux322 - aux323))
-1136 1143 0
-1135 1141 0
-1127 1143 0
-1127 -1136 1141 0
-1127 -1135 1139 0
-1126 1141 0
-1126 -1136 1139 0
-1126 -1135 1138 0
c ((aux318 + aux320 - aux324)<=0)
1129 -1145 0
1130 -1146 0
1123 -1145 0
1123 1129 -1146 0
1123 1130 -1148 0
1124 -1146 0
1124 1129 -1148 0
1124 1130 -1150 0
c (0<=(aux318 + aux320 - aux324))
-1130 1150 0
-1129 1148 0
-1124 1150 0
-1124 -1130 1148 0
-1124 -1129 1146 0
-1123 1148 0
-1123 -1130 1146 0
-1123 -1129 1145 0
c ((SATLiteral(22) - aux325 + SATLiteral(62))<=0)
-62 -1152 0
-22 -1152 0
-22 -62 -1153 0
c (0<=(SATLiteral(22) - aux325 + SATLiteral(62)))
62 1153 0
22 1153 0
22 62 1152 0
c ((SATLiteral(72) - aux326 + SATLiteral(12))<=0)
-12 -1155 0
-72 -1155 0
-72 -12 -1156 0
c (0<=(SATLiteral(72) - aux326 + SATLiteral(12)))
12 1156 0
72 1156 0
72 12 1155 0
c (( - aux327 + SATLiteral(82) + SATLiteral(52))<=0)
-52 -1158 0
-82 -1158 0
-82 -52 -1159 0
c (0<=( - aux327 + SATLiteral(82) + SATLiteral(52)))
52 1159 0
82 1159 0
82 52 1158 0
c (( - aux328 + SATLiteral(42) + SATLiteral(2))<=0)
-2 -1161 0
-42 -1161 0
-42 -2 -1162 0
c (0<=( - aux328 + SATLiteral(42) + SATLiteral(2)))
2 1162 0
42 1162 0
42 2 1161 0
c (( - aux329 + SATLiteral(32) + SATLiteral(92))<=0)
-92 -1164 0
-32 -1164 0
-32 -92 -1165 0
c (0<=( - aux329 + SATLiteral(32) + SATLiteral(92)))
92 1165 0
32 1165 0
32 92 1164 0
c ((aux326 + aux329 - aux330)<=0)
1164 -1167 0
1165 -1168 0
1155 -1167 0
1155 1164 -1168 0
1155 1165 -1170 0
1156 -1168 0
1156 1164 -1170 0
1156 1165 -1172 0
c (0<=(aux326 + aux329 - aux330))
-1165 1172 0
-1164 1170 0
-1156 1172 0
-1156 -1165 1170 0
-1156 -1164 1168 0
-1155 1170 0
-1155 -1165 1168 0
-1155 -1164 1167 0
c ((aux325 + aux327 - aux331)<=0)
1158 -1174 0
1159 -1175 0
1152 -1174 0
1152 1158 -1175 0
1152 1159 -1177 0
1153 -1175 0
1153 1158 -1177 0
1153 1159 -1179 0
c (0<=(aux325 + aux327 - aux331))
-1159 1179 0
-1158 1177 0
-1153 1179 0
-1153 -1159 1177 0
-1153 -1158 1175 0
-1152 1177 0
-1152 -1159 1175 0
-1152 -1158 1174 0
c ((SATLiteral(23) - aux332 + SATLiteral(63))<=0)
-63 -1181 0
-23 -1181 0
-23 -63 -1182 0
c (0<=(SATLiteral(23) - aux332 + SATLiteral(63)))
63 1182 0
23 1182 0
23 63 1181 0
c ((SATLiteral(73) - aux333 + SATLiteral(13))<=0)
-13 -1184 0
-73 -1184 0
-73 -13 -1185 0
c (0<=(SATLiteral(73) - aux333 + SATLiteral(13)))
13 1185 0
73 1185 0
73 13 1184 0
c (( - aux334 + SATLiteral(83) + SATLiteral(53))<=0)
-53 -1187 0
-83 -1187 0
-83 -53 -1188 0
c (0<=( - aux334 + SATLiteral(83) + SATLiteral(53)))
53 1188 0
83 1188 0
83 53 1187 0
c (( - aux335 + SATLiteral(43) + SATLiteral(3))<=0)
-3 -1190 0
-43 -1190 0
-43 -3 -1191 0
c (0<=( - aux335 + SATLiteral(43) + SATLiteral(3)))
3 1191 0
43 1191 0
43 3 1190 0
c (( - aux336 + SATLiteral(33) + SATLiteral(93))<=0)
-93 -1193 0
-33 -1193 0
-33 -93 -1194 0
c (0<=( - aux336 + SATLiteral(33) + SATLiteral(93)))
93 1194 0
33 1194 0
33 93 1193 0
c ((aux333 + aux336 - aux337)<=0)
1193 -1196 0
1194 -1197 0
1184 -1196 0
1184 1193 -1197 0
1184 1194 -1199 0
1185 -1197 0
1185 1193 -1199 0
1185 1194 -1201 0
c (0<=(aux333 + aux336 - aux337))
-1194 1201 0
-1193 1199 0
-1185 1201 0
-1185 -1194 1199 0
-1185 -1193 1197 0
-1184 1199 0
-1184 -1194 1197 0
-1184 -1193 1196 0
c ((aux332 + aux334 - aux338)<=0)
1187 -1203 0
1188 -1204 0
1181 -1203 0
1181 1187 -1204 0
1181 1188 -1206 0
1182 -1204 0
1182 1187 -1206 0
1182 1188 -1208 0
c (0<=(aux332 + aux334 - aux338))
-1188 1208 0
-1187 1206 0
-1182 1208 0
-1182 -1188 1206 0
-1182 -1187 1204 0
-1181 1206 0
-1181 -1188 1204 0
-1181 -1187 1203 0
c ((SATLiteral(24) - aux339 + SATLiteral(64))<=0)
-64 -1210 0
-24 -1210 0
-24 -64 -1211 0
c (0<=(SATLiteral(24) - aux339 + SATLiteral(64)))
64 1211 0
24 1211 0
24 64 1210 0
c ((SATLiteral(74) - aux340 + SATLiteral(14))<=0)
-14 -1213 0
-74 -1213 0
-74 -14 -1214 0
c (0<=(SATLiteral(74) - aux340 + SATLiteral(14)))
14 1214 0
74 1214 0
74 14 1213 0
c (( - aux341 + SATLiteral(84) + SATLiteral(54))<=0)
-54 -1216 0
-84 -1216 0
-84 -54 -1217 0
c (0<=( - aux341 + SATLiteral(84) + SATLiteral(54)))
54 1217 0
84 1217 0
84 54 1216 0
c (( - aux342 + SATLiteral(44) + SATLiteral(4))<=0)
-4 -1219 0
-44 -1219 0
-44 -4 -1220 0
c (0<=( - aux342 + SATLiteral(44) + SATLiteral(4)))
4 1220 0
44 1220 0
44 4 1219 0
c (( - aux343 + SATLiteral(34) + SATLiteral(94))<=0)
-94 -1222 0
-34 -1222 0
-34 -94 -1223 0
c (0<=( - aux343 + SATLiteral(34) + SATLiteral(94)))
94 1223 0
34 1223 0
34 94 1222 0
c ((aux340 + aux343 - aux344)<=0)
1222 -1225 0
1223 -1226 0
1213 -1225 0
1213 1222 -1226 0
1213 1223 -1228 0
1214 -1226 0
1214 1222 -1228 0
1214 1223 -1230 0
c (0<=(aux340 + aux343 - aux344))
-1223 1230 0
-1222 1228 0
-1214 1230 0
-1214 -1223 1228 0
-1214 -1222 1226 0
-1213 1228 0
-1213 -1223 1226 0
-1213 -1222 1225 0
c ((aux339 + aux341 - aux345)<=0)
1216 -1232 0
1217 -1233 0
1210 -1232 0
1210 1216 -1233 0
1210 1217 -1235 0
1211 -1233 0
1211 1216 -1235 0
1211 1217 -1237 0
c (0<=(aux339 + aux341 - aux345))
-1217 1237 0
-1216 1235 0
-1211 1237 0
-1211 -1217 1235 0
-1211 -1216 1233 0
-1210 1235 0
-1210 -1217 1233 0
-1210 -1216 1232 0
c ((SATLiteral(25) - aux346 + SATLiteral(65))<=0)
-65 -1239 0
-25 -1239 0
-25 -65 -1240 0
c (0<=(SATLiteral(25) - aux346 + SATLiteral(65)))
65 1240 0
25 1240 0
25 65 1239 0
c ((SATLiteral(75) - aux347 + SATLiteral(15))<=0)
-15 -1242 0
-75 -1242 0
-75 -15 -1243 0
c (0<=(SATLiteral(75) - aux347 + SATLiteral(15)))
15 1243 0
75 1243 0
75 15 1242 0
c (( - aux348 + SATLiteral(85) + SATLiteral(55))<=0)
-55 -1245 0
-85 -1245 0
-85 -55 -1246 0
c (0<=( - aux348 + SATLiteral(85) + SATLiteral(55)))
55 1246 0
85 1246 0
85 55 1245 0
c (( - aux349 + SATLiteral(45) + SATLiteral(5))<=0)
-5 -1248 0
-45 -1248 0
-45 -5 -1249 0
c (0<=( - aux349 + SATLiteral(45) + SATLiteral(5)))
5 1249 0
45 1249 0
45 5 1248 0
c (( - aux350 + SATLiteral(35) + SATLiteral(95))<=0)
-95 -1251 0
-35 -1251 0
-35 -95 -1252 0
c (0<=( - aux350 + SATLiteral(35) + SATLiteral(95)))
95 1252 0
35 1252 0
35 95 1251 0
c ((aux347 + aux350 - aux351)<=0)
1251 -1254 0
1252 -1255 0
1242 -1254 0
1242 1251 -1255 0
1242 1252 -1257 0
1243 -1255 0
1243 1251 -1257 0
1243 1252 -1259 0
c (0<=(aux347 + aux350 - aux351))
-1252 1259 0
-1251 1257 0
-1243 1259 0
-1243 -1252 1257 0
-1243 -1251 1255 0
-1242 1257 0
-1242 -1252 1255 0
-1242 -1251 1254 0
c ((aux346 + aux348 - aux352)<=0)
1245 -1261 0
1246 -1262 0
1239 -1261 0
1239 1245 -1262 0
1239 1246 -1264 0
1240 -1262 0
1240 1245 -1264 0
1240 1246 -1266 0
c (0<=(aux346 + aux348 - aux352))
-1246 1266 0
-1245 1264 0
-1240 1266 0
-1240 -1246 1264 0
-1240 -1245 1262 0
-1239 1264 0
-1239 -1246 1262 0
-1239 -1245 1261 0
c ((SATLiteral(26) - aux353 + SATLiteral(66))<=0)
-66 -1268 0
-26 -1268 0
-26 -66 -1269 0
c (0<=(SATLiteral(26) - aux353 + SATLiteral(66)))
66 1269 0
26 1269 0
26 66 1268 0
c ((SATLiteral(76) - aux354 + SATLiteral(16))<=0)
-16 -1271 0
-76 -1271 0
-76 -16 -1272 0
c (0<=(SATLiteral(76) - aux354 + SATLiteral(16)))
16 1272 0
76 1272 0
76 16 1271 0
c (( - aux355 + SATLiteral(86) + SATLiteral(56))<=0)
-56 -1274 0
-86 -1274 0
-86 -56 -1275 0
c (0<=( - aux355 + SATLiteral(86) + SATLiteral(56)))
56 1275 0
86 1275 0
86 56 1274 0
c (( - aux356 + SATLiteral(46) + SATLiteral(6))<=0)
-6 -1277 0
-46 -1277 0
-46 -6 -1278 0
c (0<=( - aux356 + SATLiteral(46) + SATLiteral(6)))
6 1278 0
46 1278 0
46 6 1277 0
c (( - aux357 + SATLiteral(36) + SATLiteral(96))<=0)
-96 -1280 0
-36 -1280 0
-36 -96 -1281 0
c (0<=( - aux357 + SATLiteral(36) + SATLiteral(96)))
96 1281 0
36 1281 0
36 96 1280 0
c ((aux354 + aux357 - aux358)<=0)
1280 -1283 0
1281 -1284 0
1271 -1283 0
1271 1280 -1284 0
1271 1281 -1286 0
1272 -1284 0
1272 1280 -1286 0
1272 1281 -1288 0
c (0<=(aux354 + aux357 - aux358))
-1281 1288 0
-1280 1286 0
-1272 1288 0
-1272 -1281 1286 0
-1272 -1280 1284 0
-1271 1286 0
-1271 -1281 1284 0
-1271 -1280 1283 0
c ((aux353 + aux355 - aux359)<=0)
1274 -1290 0
1275 -1291 0
1268 -1290 0
1268 1274 -1291 0
1268 1275 -1293 0
1269 -1291 0
1269 1274 -1293 0
1269 1275 -1295 0
c (0<=(aux353 + aux355 - aux359))
-1275 1295 0
-1274 1293 0
-1269 1295 0
-1269 -1275 1293 0
-1269 -1274 1291 0
-1268 1293 0
-1268 -1275 1291 0
-1268 -1274 1290 0
c ((SATLiteral(27) - aux360 + SATLiteral(67))<=0)
-67 -1297 0
-27 -1297 0
-27 -67 -1298 0
c (0<=(SATLiteral(27) - aux360 + SATLiteral(67)))
67 1298 0
27 1298 0
27 67 1297 0
c ((SATLiteral(77) - aux361 + SATLiteral(17))<=0)
-17 -1300 0
-77 -1300 0
-77 -17 -1301 0
c (0<=(SATLiteral(77) - aux361 + SATLiteral(17)))
17 1301 0
77 1301 0
77 17 1300 0
c (( - aux362 + SATLiteral(87) + SATLiteral(57))<=0)
-57 -1303 0
-87 -1303 0
-87 -57 -1304 0
c (0<=( - aux362 + SATLiteral(87) + SATLiteral(57)))
57 1304 0
87 1304 0
87 57 1303 0
c (( - aux363 + SATLiteral(47) + SATLiteral(7))<=0)
-7 -1306 0
-47 -1306 0
-47 -7 -1307 0
c (0<=( - aux363 + SATLiteral(47) + SATLiteral(7)))
7 1307 0
47 1307 0
47 7 1306 0
c (( - aux364 + SATLiteral(37) + SATLiteral(97))<=0)
-97 -1309 0
-37 -1309 0
-37 -97 -1310 0
c (0<=( - aux364 + SATLiteral(37) + SATLiteral(97)))
97 1310 0
37 1310 0
37 97 1309 0
c ((aux361 + aux364 - aux365)<=0)
1309 -1312 0
1310 -1313 0
1300 -1312 0
1300 1309 -1313 0
1300 1310 -1315 0
1301 -1313 0
1301 1309 -1315 0
1301 1310 -1317 0
c (0<=(aux361 + aux364 - aux365))
-1310 1317 0
-1309 1315 0
-1301 1317 0
-1301 -1310 1315 0
-1301 -1309 1313 0
-1300 1315 0
-1300 -1310 1313 0
-1300 -1309 1312 0
c ((aux360 + aux362 - aux366)<=0)
1303 -1319 0
1304 -1320 0
1297 -1319 0
1297 1303 -1320 0
1297 1304 -1322 0
1298 -1320 0
1298 1303 -1322 0
1298 1304 -1324 0
c (0<=(aux360 + aux362 - aux366))
-1304 1324 0
-1303 1322 0
-1298 1324 0
-1298 -1304 1322 0
-1298 -1303 1320 0
-1297 1322 0
-1297 -1304 1320 0
-1297 -1303 1319 0
c ((SATLiteral(28) - aux367 + SATLiteral(68))<=0)
-68 -1326 0
-28 -1326 0
-28 -68 -1327 0
c (0<=(SATLiteral(28) - aux367 + SATLiteral(68)))
68 1327 0
28 1327 0
28 68 1326 0
c ((SATLiteral(78) - aux368 + SATLiteral(18))<=0)
-18 -1329 0
-78 -1329 0
-78 -18 -1330 0
c (0<=(SATLiteral(78) - aux368 + SATLiteral(18)))
18 1330 0
78 1330 0
78 18 1329 0
c (( - aux369 + SATLiteral(88) + SATLiteral(58))<=0)
-58 -1332 0
-88 -1332 0
-88 -58 -1333 0
c (0<=( - aux369 + SATLiteral(88) + SATLiteral(58)))
58 1333 0
88 1333 0
88 58 1332 0
c (( - aux370 + SATLiteral(48) + SATLiteral(8))<=0)
-8 -1335 0
-48 -1335 0
-48 -8 -1336 0
c (0<=( - aux370 + SATLiteral(48) + SATLiteral(8)))
8 1336 0
48 1336 0
48 8 1335 0
c (( - aux371 + SATLiteral(38) + SATLiteral(98))<=0)
-98 -1338 0
-38 -1338 0
-38 -98 -1339 0
c (0<=( - aux371 + SATLiteral(38) + SATLiteral(98)))
98 1339 0
38 1339 0
38 98 1338 0
c ((aux368 + aux371 - aux372)<=0)
1338 -1341 0
1339 -1342 0
1329 -1341 0
1329 1338 -1342 0
1329 1339 -1344 0
1330 -1342 0
1330 1338 -1344 0
1330 1339 -1346 0
c (0<=(aux368 + aux371 - aux372))
-1339 1346 0
-1338 1344 0
-1330 1346 0
-1330 -1339 1344 0
-1330 -1338 1342 0
-1329 1344 0
-1329 -1339 1342 0
-1329 -1338 1341 0
c ((aux367 + aux369 - aux373)<=0)
1332 -1348 0
1333 -1349 0
1326 -1348 0
1326 1332 -1349 0
1326 1333 -1351 0
1327 -1349 0
1327 1332 -1351 0
1327 1333 -1353 0
c (0<=(aux367 + aux369 - aux373))
-1333 1353 0
-1332 1351 0
-1327 1353 0
-1327 -1333 1351 0
-1327 -1332 1349 0
-1326 1351 0
-1326 -1333 1349 0
-1326 -1332 1348 0
c ((SATLiteral(29) - aux374 + SATLiteral(69))<=0)
-69 -1355 0
-29 -1355 0
-29 -69 -1356 0
c (0<=(SATLiteral(29) - aux374 + SATLiteral(69)))
69 1356 0
29 1356 0
29 69 1355 0
c ((SATLiteral(79) - aux375 + SATLiteral(19))<=0)
-19 -1358 0
-79 -1358 0
-79 -19 -1359 0
c (0<=(SATLiteral(79) - aux375 + SATLiteral(19)))
19 1359 0
79 1359 0
79 19 1358 0
c (( - aux376 + SATLiteral(89) + SATLiteral(59))<=0)
-59 -1361 0
-89 -1361 0
-89 -59 -1362 0
c (0<=( - aux376 + SATLiteral(89) + SATLiteral(59)))
59 1362 0
89 1362 0
89 59 1361 0
c (( - aux377 + SATLiteral(49) + SATLiteral(9))<=0)
-9 -1364 0
-49 -1364 0
-49 -9 -1365 0
c (0<=( - aux377 + SATLiteral(49) + SATLiteral(9)))
9 1365 0
49 1365 0
49 9 1364 0
c (( - aux378 + SATLiteral(39) + SATLiteral(99))<=0)
-99 -1367 0
-39 -1367 0
-39 -99 -1368 0
c (0<=( - aux378 + SATLiteral(39) + SATLiteral(99)))
99 1368 0
39 1368 0
39 99 1367 0
c ((aux375 + aux378 - aux379)<=0)
1367 -1370 0
1368 -1371 0
1358 -1370 0
1358 1367 -1371 0
1358 1368 -1373 0
1359 -1371 0
1359 1367 -1373 0
1359 1368 -1375 0
c (0<=(aux375 + aux378 - aux379))
-1368 1375 0
-1367 1373 0
-1359 1375 0
-1359 -1368 1373 0
-1359 -1367 1371 0
-1358 1373 0
-1358 -1368 1371 0
-1358 -1367 1370 0
c ((aux374 + aux376 - aux380)<=0)
1361 -1377 0
1362 -1378 0
1355 -1377 0
1355 1361 -1378 0
1355 1362 -1380 0
1356 -1378 0
1356 1361 -1380 0
1356 1362 -1382 0
c (0<=(aux374 + aux376 - aux380))
-1362 1382 0
-1361 1380 0
-1356 1382 0
-1356 -1362 1380 0
-1356 -1361 1378 0
-1355 1380 0
-1355 -1362 1378 0
-1355 -1361 1377 0
c ((SATLiteral(30) - aux381 + SATLiteral(70))<=0)
-70 -1384 0
-30 -1384 0
-30 -70 -1385 0
c (0<=(SATLiteral(30) - aux381 + SATLiteral(70)))
70 1385 0
30 1385 0
30 70 1384 0
c ((SATLiteral(80) - aux382 + SATLiteral(20))<=0)
-20 -1387 0
-80 -1387 0
-80 -20 -1388 0
c (0<=(SATLiteral(80) - aux382 + SATLiteral(20)))
20 1388 0
80 1388 0
80 20 1387 0
c (( - aux383 + SATLiteral(90) + SATLiteral(60))<=0)
-60 -1390 0
-90 -1390 0
-90 -60 -1391 0
c (0<=( - aux383 + SATLiteral(90) + SATLiteral(60)))
60 1391 0
90 1391 0
90 60 1390 0
c (( - aux384 + SATLiteral(50) + SATLiteral(10))<=0)
-10 -1393 0
-50 -1393 0
-50 -10 -1394 0
c (0<=( - aux384 + SATLiteral(50) + SATLiteral(10)))
10 1394 0
50 1394 0
50 10 1393 0
c (( - aux385 + SATLiteral(40) + SATLiteral(100))<=0)
-100 -1396 0
-40 -1396 0
-40 -100 -1397 0
c (0<=( - aux385 + SATLiteral(40) + SATLiteral(100)))
100 1397 0
40 1397 0
40 100 1396 0
c ((aux382 + aux385 - aux386)<=0)
1396 -1399 0
1397 -1400 0
1387 -1399 0
1387 1396 -1400 0
1387 1397 -1402 0
1388 -1400 0
1388 1396 -1402 0
1388 1397 -1404 0
c (0<=(aux382 + aux385 - aux386))
-1397 1404 0
-1396 1402 0
-1388 1404 0
-1388 -1397 1402 0
-1388 -1396 1400 0
-1387 1402 0
-1387 -1397 1400 0
-1387 -1396 1399 0
c ((aux381 + aux383 - aux387)<=0)
1390 -1406 0
1391 -1407 0
1384 -1406 0
1384 1390 -1407 0
1384 1391 -1409 0
1385 -1407 0
1385 1390 -1409 0
1385 1391 -1411 0
c (0<=(aux381 + aux383 - aux387))
-1391 1411 0
-1390 1409 0
-1385 1411 0
-1385 -1391 1409 0
-1385 -1390 1407 0
-1384 1409 0
-1384 -1391 1407 0
-1384 -1390 1406 0
c ((SATLiteral(31) - aux388 + SATLiteral(71))<=0)
-71 -1413 0
-31 -1413 0
-31 -71 -1414 0
c (0<=(SATLiteral(31) - aux388 + SATLiteral(71)))
71 1414 0
31 1414 0
31 71 1413 0
c ((SATLiteral(81) - aux389 + SATLiteral(21))<=0)
-21 -1416 0
-81 -1416 0
-81 -21 -1417 0
c (0<=(SATLiteral(81) - aux389 + SATLiteral(21)))
21 1417 0
81 1417 0
81 21 1416 0
c (( - aux390 + SATLiteral(91) + SATLiteral(61))<=0)
-61 -1419 0
-91 -1419 0
-91 -61 -1420 0
c (0<=( - aux390 + SATLiteral(91) + SATLiteral(61)))
61 1420 0
91 1420 0
91 61 1419 0
c (( - aux391 + SATLiteral(51) + SATLiteral(11))<=0)
-11 -1422 0
-51 -1422 0
-51 -11 -1423 0
c (0<=( - aux391 + SATLiteral(51) + SATLiteral(11)))
11 1423 0
51 1423 0
51 11 1422 0
c (( - aux392 + SATLiteral(41) + SATLiteral(101))<=0)
-101 -1425 0
-41 -1425 0
-41 -101 -1426 0
c (0<=( - aux392 + SATLiteral(41) + SATLiteral(101)))
101 1426 0
41 1426 0
41 101 1425 0
c ((aux389 + aux392 - aux393)<=0)
1425 -1428 0
1426 -1429 0
1416 -1428 0
1416 1425 -1429 0
1416 1426 -1431 0
1417 -1429 0
1417 1425 -1431 0
1417 1426 -1433 0
c (0<=(aux389 + aux392 - aux393))
-1426 1433 0
-1425 1431 0
-1417 1433 0
-1417 -1426 1431 0
-1417 -1425 1429 0
-1416 1431 0
-1416 -1426 1429 0
-1416 -1425 1428 0
c ((aux388 + aux390 - aux394)<=0)
1419 -1435 0
1420 -1436 0
1413 -1435 0
1413 1419 -1436 0
1413 1420 -1438 0
1414 -1436 0
1414 1419 -1438 0
1414 1420 -1440 0
c (0<=(aux388 + aux390 - aux394))
-1420 1440 0
-1419 1438 0
-1414 1440 0
-1414 -1420 1438 0
-1414 -1419 1436 0
-1413 1438 0
-1413 -1420 1436 0
-1413 -1419 1435 0
